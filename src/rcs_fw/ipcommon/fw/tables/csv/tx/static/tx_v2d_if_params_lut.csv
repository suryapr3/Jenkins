Table Name,tx_v2d_if_params_lut,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Table Description,"V2D NSIP memory allocation based on PDPD mode. This table is indexed based on v2d_input_ptr_sel in tx_pdpd_mod_lut and num of VEX used (1, 2 or 4) for corresponding flow, indexing needs 2 + 2 bits",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
single entry bitwidth,32*1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
base type bit layout,,,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,,,,,
Bit Field Name,,,res_31_26,,,,,,h2b_strm_id,,b2h_strm_id,,upper_bound,,,,,,,,,,,lower_bound,,,,,,,,,,,,,,,
Bit Field Description,,,reserved,,,,,,NSIP HB1 ( apply to flow D for DPP & DGPP only) or HB0 (apply to flow F only) output to stream ID mapping,,NSIP HBI 0 (flow A/C) and HBI 1(flow B) input from stream ID mapping,,Upper Boundary for Tx A/C/B Buffer Pointers. This field defines pointer's ending location for a circular buffer partition in the buffer memory. Indexed by [v2d_input_ptr_sel][offset],,,,,,,,,,,Lower Boundary for Tx A/C/B Buffer Pointers. This field defines pointer's starting location for a circular buffer partition in the buffer memory,,,,,,,,,,,,,,,
Unit [string],,,value,,,,,,,,,,value,,,,,,,,,,,value,,,,,,,,,,,,,,,
Granularity,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Minimum Value,,,0,,,,,,0,,0,,0x0ff,,,,,,,,,,,0x000,,,,,,,,,,,,,,,
Maximum Value,,,1023,,,,,,3,,3,,0x7ff,,,,,,,,,,,0x700,,,,,,,,,,,,,,,
Sign Type,,,unsigned,,,,,,unsigned,,unsigned,,unsigned,,,,,,,,,,,unsigned,,,,,,,,,,,,,,,
Bit Field Width,,,6,,,,,,2,,2,,11,,,,,,,,,,,11,,,,,,,,,,,,,,,
subtable dimension and name,7*1,,V2D_AC_BUF0_LUT,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"ND, NDPF",# of VEX to V2D A/C,v2d_input_ptr_sel = 0,"how to access (here num_vex refers to num of VEX used for specific flow, eg, flow A, flow C, flow B, flow D, each could have different value):"
,,,0,,,,,,0,,0,,0x7FF,,,,,,,,,,,0x000,,,,,,,,,,,,,1,TX_CSR_TX_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][0],if(v2d_input_ptr_sel == 2) {k = 1} else {k=0}; 
,,,0,,,,,,0,,0,,0x3FF,,,,,,,,,,,0x000,,,,,,,,,,,,,2,TX_CSR_TX_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][1],if(num_vex==4){n=3} elif(num_vex==2}{n=1}else{n=0};
,,,0,,,,,,1,,1,,0x7FF,,,,,,,,,,,0x400,,,,,,,,,,,,,2,TX_CSR_TX_PTR_BOUND[1] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][2],for (int i = 0; i<num_vex; i++){if(v2d_input_ptr_sel != 0) {TX_CSR_TX_PD_PTR_BOUND[i] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel + k][i + n];} if(v2d_input_ptr_sel != 1) {TX_CSR_TX_PTR_BOUND[i] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel + k][i + n];}}
,,,0,,,,,,0,,0,,0x1FF,,,,,,,,,,,0x000,,,,,,,,,,,,,4,TX_CSR_TX_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][3],
,,,0,,,,,,1,,1,,0x3FF,,,,,,,,,,,0x200,,,,,,,,,,,,,4,TX_CSR_TX_PTR_BOUND[1] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][4],
,,,0,,,,,,2,,2,,0x5FF,,,,,,,,,,,0x400,,,,,,,,,,,,,4,TX_CSR_TX_PTR_BOUND[2] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][5],
,,,0,,,,,,3,,3,,0x7FF,,,,,,,,,,,0x600,,,,,,,,,,,,,4,TX_CSR_TX_PTR_BOUND[3] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][6],
subtable dimension and name,7*1,,V2D_B_BUF0_LUT,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"DNE, DGNE",# of VEX to V2D B,v2d_input_ptr_sel = 1,
,,,0,,,,,,0,,0,,0x7FF,,,,,,,,,,,0x000,,,,,,,,,,,,,1,TX_CSR_TX_PD_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][0],
,,,0,,,,,,0,,0,,0x3FF,,,,,,,,,,,0x000,,,,,,,,,,,,,2,TX_CSR_TX_PD_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][1],
,,,0,,,,,,1,,1,,0x7FF,,,,,,,,,,,0x400,,,,,,,,,,,,,2,TX_CSR_TX_PD_PTR_BOUND[1] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][2],
,,,0,,,,,,0,,0,,0x1FF,,,,,,,,,,,0x000,,,,,,,,,,,,,4,TX_CSR_TX_PD_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][3],
,,,0,,,,,,1,,1,,0x3FF,,,,,,,,,,,0x200,,,,,,,,,,,,,4,TX_CSR_TX_PD_PTR_BOUND[1] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][4],
,,,0,,,,,,2,,2,,0x5FF,,,,,,,,,,,0x400,,,,,,,,,,,,,4,TX_CSR_TX_PD_PTR_BOUND[2] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][5],
,,,0,,,,,,3,,3,,0x7FF,,,,,,,,,,,0x600,,,,,,,,,,,,,4,TX_CSR_TX_PD_PTR_BOUND[3] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][6],
subtable dimension and name,7*1,,V2D_AC_BUF1_LUT,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"DE, DGE, DPP, DGPP","# of VEX to V2D A/C, B (could differ)",v2d_input_ptr_sel = 2,
,,,0,,,,,,0,,0,,0x3FF,,,,,,,,,,,0x000,,,,,,,,,,,,,1,TX_CSR_TX_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][0],
,,,0,,,,,,0,,0,,0x1FF,,,,,,,,,,,0x000,,,,,,,,,,,,,2,TX_CSR_TX_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][1],
,,,0,,,,,,1,,1,,0x3FF,,,,,,,,,,,0x200,,,,,,,,,,,,,2,TX_CSR_TX_PTR_BOUND[1] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][2],
,,,0,,,,,,0,,0,,0x0FF,,,,,,,,,,,0x000,,,,,,,,,,,,,4,TX_CSR_TX_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][3],
,,,0,,,,,,1,,1,,0x1FF,,,,,,,,,,,0x100,,,,,,,,,,,,,4,TX_CSR_TX_PTR_BOUND[1] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][4],
,,,0,,,,,,2,,2,,0x2FF,,,,,,,,,,,0x200,,,,,,,,,,,,,4,TX_CSR_TX_PTR_BOUND[2] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][5],
,,,0,,,,,,3,,3,,0x3FF,,,,,,,,,,,0x300,,,,,,,,,,,,,4,TX_CSR_TX_PTR_BOUND[3] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel][6],
subtable dimension and name,7*1,,V2D_B_BUF1_LUT,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"DE, DGE, DPP, DGPP","# of VEX to V2D A/C, B (could differ)",v2d_input_ptr_sel = 2,
,,,0,,,,,,0,,0,,0x7FF,,,,,,,,,,,0x400,,,,,,,,,,,,,1,TX_CSR_TX_PD_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel + 1][0],
,,,0,,,,,,0,,0,,0x5FF,,,,,,,,,,,0x400,,,,,,,,,,,,,2,TX_CSR_TX_PD_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel + 1][1],
,,,0,,,,,,1,,1,,0x7FF,,,,,,,,,,,0x600,,,,,,,,,,,,,2,TX_CSR_TX_PD_PTR_BOUND[1] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel + 1][2],
,,,0,,,,,,0,,0,,0x4FF,,,,,,,,,,,0x400,,,,,,,,,,,,,4,TX_CSR_TX_PD_PTR_BOUND[0] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel + 1][3],
,,,0,,,,,,1,,1,,0x5FF,,,,,,,,,,,0x500,,,,,,,,,,,,,4,TX_CSR_TX_PD_PTR_BOUND[1] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel + 1][4],
,,,0,,,,,,2,,2,,0x6FF,,,,,,,,,,,0x600,,,,,,,,,,,,,4,TX_CSR_TX_PD_PTR_BOUND[2] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel + 1][5],
,,,0,,,,,,3,,3,,0x7FF,,,,,,,,,,,0x700,,,,,,,,,,,,,4,TX_CSR_TX_PD_PTR_BOUND[3] = v2d_input_ptr_bound_lut[v2d_input_ptr_sel + 1][6],
