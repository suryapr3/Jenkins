/* INTEL CONFIDENTIAL
 *
 * Copyright 2024 Intel Corporation All Rights Reserved.
 *
 * The source code contained or described herein and all documents related
 * to the source code ("Material") are owned by Intel Corporation or its
 * suppliers or licensors. Title to the Material remains with Intel
 * Corporation or its suppliers and licensors. The Material contains trade
 * secrets and proprietary and confidential information of Intel or its
 * suppliers and licensors. The Material is protected by worldwide copyright
 * and trade secret laws and treaty provisions. No part of the Material
 * may be used, copied, reproduced, modified, published, uploaded, posted,
 * transmitted, distributed, or disclosed in any way without Intel's prior
 * express written permission.
 *
 * No license under any patent, copyright, trade secret or other
 * intellectual property right is granted to or conferred upon you by
 * disclosure or delivery of the Materials, either expressly, by
 * implication, inducement, estoppel or otherwise. Any license under such
 * intellectual property rights must be express and approved by Intel in
 * writing.
 *
 *****************************************************************************/

/**
 * this header file is generated by tool, any direct modification without going
 * through the table generation process will get lost
 */

#ifndef __AX_STATIC_DATA_TABLE__
#define __AX_STATIC_DATA_TABLE__

#include "table_access_macros.h"
#include "ax_static_data_bitfield.h"
#include "ax_static_data_const.h"

// ax_print_config_lut:
typedef struct
{
    ax_print_config_lut_bf_t ax_print_config_lut[AX_PRINT_CONFIG_LUT_MAX_ENTRY_NUM];
} ax_print_config_lut_t;

// ax_jesd_rate_index_lut:
typedef struct
{
    ax_jesd_rate_index_lut_bf_t ax_jesd_rate_index_lut[AX_JESD_RATE_INDEX_LUT_MAX_ENTRY_NUM];
} ax_jesd_rate_index_lut_t;

// ax_jesd_configuration_lut:
typedef struct
{
    ax_jesd_configuration_lut_bf_t ax_jesd_configuration_lut[AX_JESD_CONFIGURATION_LUT_MAX_ENTRY_NUM];
} ax_jesd_configuration_lut_t;

// ax_jesd_comp_param_lut:
typedef struct
{
    ax_jesd_comp_param_lut_bf_t ax_jesd_comp_param_lut[AX_JESD_COMP_PARAM_LUT_MAX_ENTRY_NUM];
} ax_jesd_comp_param_lut_t;

// ax_jesd_input_param_lut:
typedef struct
{
    ax_jesd_input_param_lut_bf_t ax_jesd_input_param_lut[AX_JESD_INPUT_PARAM_LUT_MAX_ENTRY_NUM];
} ax_jesd_input_param_lut_t;

// ax_jesd_decomp_param_lut:
typedef struct
{
    ax_jesd_decomp_param_lut_bf_t ax_jesd_decomp_param_lut[AX_JESD_DECOMP_PARAM_LUT_MAX_ENTRY_NUM];
} ax_jesd_decomp_param_lut_t;

// ax_bfn_config_lut:
typedef struct
{
    ax_bfn_config_lut_bf_t ax_bfn_config_lut[AX_BFN_CONFIG_LUT_MAX_ENTRY_NUM];
} ax_bfn_config_lut_t;

// ax_bfn_selfsync_lut:
typedef struct
{
    ax_bfn_selfsync_lut_bf_t ax_bfn_selfsync_lut[AX_BFN_SELFSYNC_LUT_MAX_ENTRY_NUM];
} ax_bfn_selfsync_lut_t;

/*
 * ax_static_data:
 */
typedef struct
{
    ax_print_config_lut_t ax_print_config_lut;
    ax_jesd_rate_index_lut_t ax_jesd_rate_index_lut;
    ax_jesd_configuration_lut_t ax_jesd_configuration_lut;
    ax_jesd_comp_param_lut_t ax_jesd_comp_param_lut;
    ax_jesd_input_param_lut_t ax_jesd_input_param_lut;
    ax_jesd_decomp_param_lut_t ax_jesd_decomp_param_lut;
    ax_bfn_config_lut_t ax_bfn_config_lut;
    ax_bfn_selfsync_lut_t ax_bfn_selfsync_lut;
} ax_static_data_t;

#if RCS
extern ax_static_data_t _dram0_ax_tables_data_start; // symbol defined in LSP
#define AX_STATIC_DATA_START_ADDRESS (&_dram0_ax_tables_data_start)
#endif

#ifndef offsetof
#define offsetof(st, m) ((size_t)((char *)&((st *)0)->m - (char *)0))
#endif

// pointers to access each table:
#define p_ax_static_data ((ax_static_data_t *)(AX_STATIC_DATA_START_ADDRESS))
#define p_ax_print_config_lut \
    ((ax_print_config_lut_t *)((char *)(AX_STATIC_DATA_START_ADDRESS) + offsetof (ax_static_data_t, ax_print_config_lut)))
#define p_ax_jesd_rate_index_lut \
    ((ax_jesd_rate_index_lut_t *)((char *)(AX_STATIC_DATA_START_ADDRESS) + offsetof (ax_static_data_t, ax_jesd_rate_index_lut)))
#define p_ax_jesd_configuration_lut \
    ((ax_jesd_configuration_lut_t *)((char *)(AX_STATIC_DATA_START_ADDRESS) + offsetof (ax_static_data_t, ax_jesd_configuration_lut)))
#define p_ax_jesd_comp_param_lut \
    ((ax_jesd_comp_param_lut_t *)((char *)(AX_STATIC_DATA_START_ADDRESS) + offsetof (ax_static_data_t, ax_jesd_comp_param_lut)))
#define p_ax_jesd_input_param_lut \
    ((ax_jesd_input_param_lut_t *)((char *)(AX_STATIC_DATA_START_ADDRESS) + offsetof (ax_static_data_t, ax_jesd_input_param_lut)))
#define p_ax_jesd_decomp_param_lut \
    ((ax_jesd_decomp_param_lut_t *)((char *)(AX_STATIC_DATA_START_ADDRESS) + offsetof (ax_static_data_t, ax_jesd_decomp_param_lut)))
#define p_ax_bfn_config_lut \
    ((ax_bfn_config_lut_t *)((char *)(AX_STATIC_DATA_START_ADDRESS) + offsetof (ax_static_data_t, ax_bfn_config_lut)))
#define p_ax_bfn_selfsync_lut \
    ((ax_bfn_selfsync_lut_t *)((char *)(AX_STATIC_DATA_START_ADDRESS) + offsetof (ax_static_data_t, ax_bfn_selfsync_lut)))

#endif // __AX_STATIC_DATA_TABLE__
