#ifndef _CIO2STRM_H_
#define _CIO2STRM_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define VEXABC0_C2S_CIO2STRM_BASE   ( 0x02801000 )
#define VEXABC1_C2S_CIO2STRM_BASE   ( 0x02841000 )
#define VEXABC2_C2S_CIO2STRM_BASE   ( 0x02881000 )
#define VEXABC3_C2S_CIO2STRM_BASE   ( 0x028c1000 )
#define VEXABC4_C2S_CIO2STRM_BASE   ( 0x02901000 )
#define VEXABC5_C2S_CIO2STRM_BASE   ( 0x02941000 )
#define VEXABC6_C2S_CIO2STRM_BASE   ( 0x02981000 )
#define VEXABC7_C2S_CIO2STRM_BASE   ( 0x029c1000 )
#define VEXABC8_C2S_CIO2STRM_BASE   ( 0x02a01000 )
#define VEXABC9_C2S_CIO2STRM_BASE   ( 0x02a41000 )
#define VEXABC10_C2S_CIO2STRM_BASE  ( 0x02a81000 )
#define VEXABC11_C2S_CIO2STRM_BASE  ( 0x02ac1000 )
#define VEXABC12_C2S_CIO2STRM_BASE  ( 0x02b01000 )
#define VEXABC13_C2S_CIO2STRM_BASE  ( 0x02b41000 )
#define VEXABC14_C2S_CIO2STRM_BASE  ( 0x02b81000 )
#define VEXABC15_C2S_CIO2STRM_BASE  ( 0x02bc1000 )
#define VEXABC16_C2S_CIO2STRM_BASE  ( 0x02c01000 )
#define VEXABC17_C2S_CIO2STRM_BASE  ( 0x02c41000 )
#define VEXABC18_C2S_CIO2STRM_BASE  ( 0x02c81000 )
#define VEXABC19_C2S_CIO2STRM_BASE  ( 0x02cc1000 )
#define VEXABC20_C2S_CIO2STRM_BASE  ( 0x02d01000 )
#define VEXABC21_C2S_CIO2STRM_BASE  ( 0x02d41000 )
#define VEXABC22_C2S_CIO2STRM_BASE  ( 0x02d81000 )
#define VEXABC23_C2S_CIO2STRM_BASE  ( 0x02dc1000 )
#define VEXABC24_C2S_CIO2STRM_BASE  ( 0x02e01000 )
#define VEXABC25_C2S_CIO2STRM_BASE  ( 0x02e41000 )
#define VEXABC26_C2S_CIO2STRM_BASE  ( 0x02e81000 )
#define VEXABC27_C2S_CIO2STRM_BASE  ( 0x02ec1000 )
#define VEXABC28_C2S_CIO2STRM_BASE  ( 0x02f01000 )
#define VEXABC29_C2S_CIO2STRM_BASE  ( 0x02f41000 )
#define VEXABC30_C2S_CIO2STRM_BASE  ( 0x02f81000 )
#define VEXABC31_C2S_CIO2STRM_BASE  ( 0x02fc1000 )
#define VEXABC32_C2S_CIO2STRM_BASE  ( 0x03001000 )
#define VEXABC33_C2S_CIO2STRM_BASE  ( 0x03041000 )
#define VEXABC34_C2S_CIO2STRM_BASE  ( 0x03081000 )
#define VEXABC35_C2S_CIO2STRM_BASE  ( 0x030c1000 )
#define VEXABC36_C2S_CIO2STRM_BASE  ( 0x03101000 )
#define VEXABC37_C2S_CIO2STRM_BASE  ( 0x03141000 )
#define VEXABC38_C2S_CIO2STRM_BASE  ( 0x03181000 )
#define VEXABC39_C2S_CIO2STRM_BASE  ( 0x031c1000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define CIO2STRM_CREDIT_CNT_OFFSET ( 0x00000008U )
#define CIO2STRM_CREDIT_CNT_STAT_OFFSET ( 0x0000000cU )
#define CIO2STRM_FIFO_STAT_CTL_OFFSET ( 0x00000010U )
#define CIO2STRM_FIFO_STAT_OFFSET ( 0x00000014U )
#define CIO2STRM_WORD_CNT_CTL_OFFSET ( 0x00000020U )
#define CIO2STRM_WORD_CNT_OFFSET ( 0x00000024U )
#define CIO2STRM_STALL_CNT_CTL_OFFSET ( 0x00000028U )
#define CIO2STRM_STALL_CNT_OFFSET ( 0x0000002cU )
#define CIO2STRM_STRM_READY_FORCE_OFFSET ( 0x00000030U )
#define CIO2STRM_INT_STAT_OFFSET ( 0x00000040U )
#define CIO2STRM_INT_EN_OFFSET ( 0x00000044U )
#define CIO2STRM_INT_CLR_OFFSET ( 0x00000048U )
#define CIO2STRM_INT_FORCE_OFFSET ( 0x0000004cU )
#define CIO2STRM_INT_MASKED_STAT_OFFSET ( 0x00000050U )
#define CIO2STRM_RANGE_EN_OFFSET ( 0x00000060U )
#define CIO2STRM_RANGE_ERR_OFFSET ( 0x00000064U )
#define CIO2STRM_MEM_ADDR_LOW0_OFFSET ( 0x00000080U )
#define CIO2STRM_MEM_ADDR_LOW1_OFFSET ( 0x00000084U )
#define CIO2STRM_MEM_ADDR_LOW2_OFFSET ( 0x00000088U )
#define CIO2STRM_MEM_ADDR_LOW3_OFFSET ( 0x0000008cU )
#define CIO2STRM_MEM_ADDR_LOW4_OFFSET ( 0x00000090U )
#define CIO2STRM_MEM_ADDR_LOW5_OFFSET ( 0x00000094U )
#define CIO2STRM_MEM_ADDR_LOW6_OFFSET ( 0x00000098U )
#define CIO2STRM_MEM_ADDR_LOW7_OFFSET ( 0x0000009cU )
#define CIO2STRM_MEM_ADDR_LOW8_OFFSET ( 0x000000a0U )
#define CIO2STRM_MEM_ADDR_LOW9_OFFSET ( 0x000000a4U )
#define CIO2STRM_MEM_ADDR_LOW10_OFFSET ( 0x000000a8U )
#define CIO2STRM_MEM_ADDR_LOW11_OFFSET ( 0x000000acU )
#define CIO2STRM_MEM_ADDR_LOW12_OFFSET ( 0x000000b0U )
#define CIO2STRM_MEM_ADDR_LOW13_OFFSET ( 0x000000b4U )
#define CIO2STRM_MEM_ADDR_LOW14_OFFSET ( 0x000000b8U )
#define CIO2STRM_MEM_ADDR_LOW15_OFFSET ( 0x000000bcU )
#define CIO2STRM_MEM_ADDR_HIGH0_OFFSET ( 0x000000c0U )
#define CIO2STRM_MEM_ADDR_HIGH1_OFFSET ( 0x000000c4U )
#define CIO2STRM_MEM_ADDR_HIGH2_OFFSET ( 0x000000c8U )
#define CIO2STRM_MEM_ADDR_HIGH3_OFFSET ( 0x000000ccU )
#define CIO2STRM_MEM_ADDR_HIGH4_OFFSET ( 0x000000d0U )
#define CIO2STRM_MEM_ADDR_HIGH5_OFFSET ( 0x000000d4U )
#define CIO2STRM_MEM_ADDR_HIGH6_OFFSET ( 0x000000d8U )
#define CIO2STRM_MEM_ADDR_HIGH7_OFFSET ( 0x000000dcU )
#define CIO2STRM_MEM_ADDR_HIGH8_OFFSET ( 0x000000e0U )
#define CIO2STRM_MEM_ADDR_HIGH9_OFFSET ( 0x000000e4U )
#define CIO2STRM_MEM_ADDR_HIGH10_OFFSET ( 0x000000e8U )
#define CIO2STRM_MEM_ADDR_HIGH11_OFFSET ( 0x000000ecU )
#define CIO2STRM_MEM_ADDR_HIGH12_OFFSET ( 0x000000f0U )
#define CIO2STRM_MEM_ADDR_HIGH13_OFFSET ( 0x000000f4U )
#define CIO2STRM_MEM_ADDR_HIGH14_OFFSET ( 0x000000f8U )
#define CIO2STRM_MEM_ADDR_HIGH15_OFFSET ( 0x000000fcU )
#define CIO2STRM_MEM_OFFSET0_OFFSET ( 0x00000100U )
#define CIO2STRM_MEM_OFFSET1_OFFSET ( 0x00000104U )
#define CIO2STRM_MEM_OFFSET2_OFFSET ( 0x00000108U )
#define CIO2STRM_MEM_OFFSET3_OFFSET ( 0x0000010cU )
#define CIO2STRM_MEM_OFFSET4_OFFSET ( 0x00000110U )
#define CIO2STRM_MEM_OFFSET5_OFFSET ( 0x00000114U )
#define CIO2STRM_MEM_OFFSET6_OFFSET ( 0x00000118U )
#define CIO2STRM_MEM_OFFSET7_OFFSET ( 0x0000011cU )
#define CIO2STRM_MEM_OFFSET8_OFFSET ( 0x00000120U )
#define CIO2STRM_MEM_OFFSET9_OFFSET ( 0x00000124U )
#define CIO2STRM_MEM_OFFSET10_OFFSET ( 0x00000128U )
#define CIO2STRM_MEM_OFFSET11_OFFSET ( 0x0000012cU )
#define CIO2STRM_MEM_OFFSET12_OFFSET ( 0x00000130U )
#define CIO2STRM_MEM_OFFSET13_OFFSET ( 0x00000134U )
#define CIO2STRM_MEM_OFFSET14_OFFSET ( 0x00000138U )
#define CIO2STRM_MEM_OFFSET15_OFFSET ( 0x0000013cU )
#define CIO2STRM_STRM_DEST0_OFFSET ( 0x00000140U )
#define CIO2STRM_STRM_DEST1_OFFSET ( 0x00000144U )
#define CIO2STRM_STRM_DEST2_OFFSET ( 0x00000148U )
#define CIO2STRM_STRM_DEST3_OFFSET ( 0x0000014cU )
#define CIO2STRM_STRM_DEST4_OFFSET ( 0x00000150U )
#define CIO2STRM_STRM_DEST5_OFFSET ( 0x00000154U )
#define CIO2STRM_STRM_DEST6_OFFSET ( 0x00000158U )
#define CIO2STRM_STRM_DEST7_OFFSET ( 0x0000015cU )
#define CIO2STRM_STRM_DEST8_OFFSET ( 0x00000160U )
#define CIO2STRM_STRM_DEST9_OFFSET ( 0x00000164U )
#define CIO2STRM_STRM_DEST10_OFFSET ( 0x00000168U )
#define CIO2STRM_STRM_DEST11_OFFSET ( 0x0000016cU )
#define CIO2STRM_STRM_DEST12_OFFSET ( 0x00000170U )
#define CIO2STRM_STRM_DEST13_OFFSET ( 0x00000174U )
#define CIO2STRM_STRM_DEST14_OFFSET ( 0x00000178U )
#define CIO2STRM_STRM_DEST15_OFFSET ( 0x0000017cU )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define CIO2STRM_CREDIT_CNT_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_CREDIT_CNT_OFFSET ) ))
#define CIO2STRM_CREDIT_CNT_STAT_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_CREDIT_CNT_STAT_OFFSET ) ))
#define CIO2STRM_FIFO_STAT_CTL_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_FIFO_STAT_CTL_OFFSET ) ))
#define CIO2STRM_FIFO_STAT_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_FIFO_STAT_OFFSET ) ))
#define CIO2STRM_WORD_CNT_CTL_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_WORD_CNT_CTL_OFFSET ) ))
#define CIO2STRM_WORD_CNT_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_WORD_CNT_OFFSET ) ))
#define CIO2STRM_STALL_CNT_CTL_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STALL_CNT_CTL_OFFSET ) ))
#define CIO2STRM_STALL_CNT_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STALL_CNT_OFFSET ) ))
#define CIO2STRM_STRM_READY_FORCE_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_READY_FORCE_OFFSET ) ))
#define CIO2STRM_INT_STAT_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_INT_STAT_OFFSET ) ))
#define CIO2STRM_INT_EN_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_INT_EN_OFFSET ) ))
#define CIO2STRM_INT_CLR_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_INT_CLR_OFFSET ) ))
#define CIO2STRM_INT_FORCE_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_INT_FORCE_OFFSET ) ))
#define CIO2STRM_INT_MASKED_STAT_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_INT_MASKED_STAT_OFFSET ) ))
#define CIO2STRM_RANGE_EN_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_RANGE_EN_OFFSET ) ))
#define CIO2STRM_RANGE_ERR_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_RANGE_ERR_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW0_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW0_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW1_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW1_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW2_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW2_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW3_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW3_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW4_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW4_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW5_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW5_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW6_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW6_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW7_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW7_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW8_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW8_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW9_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW9_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW10_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW10_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW11_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW11_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW12_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW12_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW13_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW13_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW14_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW14_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_LOW15_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_LOW15_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH0_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH0_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH1_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH1_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH2_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH2_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH3_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH3_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH4_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH4_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH5_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH5_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH6_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH6_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH7_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH7_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH8_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH8_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH9_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH9_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH10_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH10_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH11_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH11_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH12_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH12_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH13_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH13_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH14_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH14_OFFSET ) ))
#define CIO2STRM_MEM_ADDR_HIGH15_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_ADDR_HIGH15_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET0_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET0_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET1_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET1_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET2_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET2_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET3_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET3_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET4_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET4_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET5_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET5_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET6_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET6_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET7_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET7_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET8_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET8_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET9_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET9_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET10_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET10_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET11_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET11_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET12_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET12_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET13_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET13_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET14_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET14_OFFSET ) ))
#define CIO2STRM_MEM_OFFSET15_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_MEM_OFFSET15_OFFSET ) ))
#define CIO2STRM_STRM_DEST0_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST0_OFFSET ) ))
#define CIO2STRM_STRM_DEST1_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST1_OFFSET ) ))
#define CIO2STRM_STRM_DEST2_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST2_OFFSET ) ))
#define CIO2STRM_STRM_DEST3_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST3_OFFSET ) ))
#define CIO2STRM_STRM_DEST4_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST4_OFFSET ) ))
#define CIO2STRM_STRM_DEST5_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST5_OFFSET ) ))
#define CIO2STRM_STRM_DEST6_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST6_OFFSET ) ))
#define CIO2STRM_STRM_DEST7_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST7_OFFSET ) ))
#define CIO2STRM_STRM_DEST8_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST8_OFFSET ) ))
#define CIO2STRM_STRM_DEST9_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST9_OFFSET ) ))
#define CIO2STRM_STRM_DEST10_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST10_OFFSET ) ))
#define CIO2STRM_STRM_DEST11_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST11_OFFSET ) ))
#define CIO2STRM_STRM_DEST12_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST12_OFFSET ) ))
#define CIO2STRM_STRM_DEST13_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST13_OFFSET ) ))
#define CIO2STRM_STRM_DEST14_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST14_OFFSET ) ))
#define CIO2STRM_STRM_DEST15_ADR(_BASE) (( ( _BASE ) + ( CIO2STRM_STRM_DEST15_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_CREDIT_COUNT register description at address offset 0x8
  *
  * Register default value:        0x00000004
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_credit_count
  * cio2strm_credit_count register.
  */

typedef union {
  struct {
    uint32_t CREDIT_COUNT : 5;
    ///< This register contains the Maximum number of credits for the Streaming
    ///< bus.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t  : 27;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_credit_cnt_reg_t;

#define CIO2STRM_CREDIT_CNT_DEFAULT (0x00000004U)
#define CIO2STRM_CREDIT_CNT_RD_MASK (0x0000001fU)
#define CIO2STRM_CREDIT_CNT_WR_MASK (0x0000001fU)


///< This register contains the Maximum number of credits for the Streaming
///< bus.
#define CIO2STRM_CREDIT_CNT_CREDIT_CNT_BF_OFF ( 0)
#define CIO2STRM_CREDIT_CNT_CREDIT_CNT_BF_WID ( 5)
#define CIO2STRM_CREDIT_CNT_CREDIT_CNT_BF_MSK (0x0000001F)
#define CIO2STRM_CREDIT_CNT_CREDIT_CNT_BF_DEF (0x00000004)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_CREDIT_COUNT_STAT register description at address offset 0xc
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_credit_count_stat
  * cio2strm_credit_count_stat register.
  */

typedef union {
  struct {
    uint32_t CREDIT_COUNT_STAT : 5;
    ///< This register contains the Streaming Credit Counter Status.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 27;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_credit_cnt_stat_reg_t;

#define CIO2STRM_CREDIT_CNT_STAT_DEFAULT (0x00000000U)
#define CIO2STRM_CREDIT_CNT_STAT_RD_MASK (0x0000001fU)
#define CIO2STRM_CREDIT_CNT_STAT_WR_MASK (0x00000000U)


///< This register contains the Streaming Credit Counter Status.
#define CIO2STRM_CREDIT_CNT_STAT_CREDIT_CNT_STAT_BF_OFF ( 0)
#define CIO2STRM_CREDIT_CNT_STAT_CREDIT_CNT_STAT_BF_WID ( 5)
#define CIO2STRM_CREDIT_CNT_STAT_CREDIT_CNT_STAT_BF_MSK (0x0000001F)
#define CIO2STRM_CREDIT_CNT_STAT_CREDIT_CNT_STAT_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_FIFO_STATUS_CTL register description at address offset 0x10
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_fifo_status_ctl
  * cio2strm_fifo_status_ctl register.
  */

typedef union {
  struct {
    uint32_t FIFO_STATUS_ENABLE : 1;
    ///< This register contains the FIFO Status Enable.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FIFO_STATUS_STOP : 1;
    ///< This register contains the FIFO Status Stop.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t FIFO_STATUS_CLEAR : 1;
    ///< This register contains the FIFO Status Clear (Write Only).
    ///< AccessType="WO" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_fifo_stat_ctl_reg_t;

#define CIO2STRM_FIFO_STAT_CTL_DEFAULT (0x00000000U)
#define CIO2STRM_FIFO_STAT_CTL_RD_MASK (0x00000003U)
#define CIO2STRM_FIFO_STAT_CTL_WR_MASK (0x00000007U)


///< This register contains the FIFO Status Enable.
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_EN_BF_OFF ( 0)
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_EN_BF_WID ( 1)
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_EN_BF_MSK (0x00000001)
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_EN_BF_DEF (0x00000000)

///< This register contains the FIFO Status Stop.
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_STOP_BF_OFF ( 1)
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_STOP_BF_WID ( 1)
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_STOP_BF_MSK (0x00000002)
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_STOP_BF_DEF (0x00000000)

///< This register contains the FIFO Status Clear (Write Only).
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_CLR_BF_OFF ( 2)
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_CLR_BF_WID ( 1)
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_CLR_BF_MSK (0x00000004)
#define CIO2STRM_FIFO_STAT_CTL_FIFO_STAT_CLR_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_FIFO_STATUS register description at address offset 0x14
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_fifo_status
  * cio2strm_fifo_status register.
  */

typedef union {
  struct {
    uint32_t FIFO_STATUS : 4;
    ///< This register contains the Maximum FIFO Depth Encountered.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t FIFO_UNDERFLOW : 1;
    ///< This register contains the FIFO Underflow Flag.
    ///< AccessType="RO/V" BitOffset="4" ResetValue="0x0"
    uint32_t FIFO_OVERFLOW : 1;
    ///< This register contains the FIFO Overflow Flag.
    ///< AccessType="RO/V" BitOffset="5" ResetValue="0x0"
    uint32_t DATA_TYPE_ERR : 1;
    ///< This register contains the Data Type Error Flag.
    ///< AccessType="RO/V" BitOffset="6" ResetValue="0x0"
    uint32_t  : 25;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_fifo_stat_reg_t;

#define CIO2STRM_FIFO_STAT_DEFAULT (0x00000000U)
#define CIO2STRM_FIFO_STAT_RD_MASK (0x0000007fU)
#define CIO2STRM_FIFO_STAT_WR_MASK (0x00000000U)


///< This register contains the Maximum FIFO Depth Encountered.
#define CIO2STRM_FIFO_STAT_FIFO_STAT_BF_OFF ( 0)
#define CIO2STRM_FIFO_STAT_FIFO_STAT_BF_WID ( 4)
#define CIO2STRM_FIFO_STAT_FIFO_STAT_BF_MSK (0x0000000F)
#define CIO2STRM_FIFO_STAT_FIFO_STAT_BF_DEF (0x00000000)

///< This register contains the FIFO Underflow Flag.
#define CIO2STRM_FIFO_STAT_FIFO_UNDERFLOW_BF_OFF ( 4)
#define CIO2STRM_FIFO_STAT_FIFO_UNDERFLOW_BF_WID ( 1)
#define CIO2STRM_FIFO_STAT_FIFO_UNDERFLOW_BF_MSK (0x00000010)
#define CIO2STRM_FIFO_STAT_FIFO_UNDERFLOW_BF_DEF (0x00000000)

///< This register contains the FIFO Overflow Flag.
#define CIO2STRM_FIFO_STAT_FIFO_OVERFLOW_BF_OFF ( 5)
#define CIO2STRM_FIFO_STAT_FIFO_OVERFLOW_BF_WID ( 1)
#define CIO2STRM_FIFO_STAT_FIFO_OVERFLOW_BF_MSK (0x00000020)
#define CIO2STRM_FIFO_STAT_FIFO_OVERFLOW_BF_DEF (0x00000000)

///< This register contains the Data Type Error Flag.
#define CIO2STRM_FIFO_STAT_DATA_TYPE_ERR_BF_OFF ( 6)
#define CIO2STRM_FIFO_STAT_DATA_TYPE_ERR_BF_WID ( 1)
#define CIO2STRM_FIFO_STAT_DATA_TYPE_ERR_BF_MSK (0x00000040)
#define CIO2STRM_FIFO_STAT_DATA_TYPE_ERR_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_WORD_CNT_CTL register description at address offset 0x20
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_word_cnt_ctl
  * cio2strm_word_cnt_ctl register.
  */

typedef union {
  struct {
    uint32_t WORD_CNT_ENABLE : 1;
    ///< This register contains the Word Counter Enable.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WORD_CNT_STOP : 1;
    ///< This register contains the Word Counter Stop.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t WORD_CNT_CLEAR : 1;
    ///< This register contains the Word Counter Clear (Write Only).
    ///< AccessType="WO" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_word_cnt_ctl_reg_t;

#define CIO2STRM_WORD_CNT_CTL_DEFAULT (0x00000000U)
#define CIO2STRM_WORD_CNT_CTL_RD_MASK (0x00000003U)
#define CIO2STRM_WORD_CNT_CTL_WR_MASK (0x00000007U)


///< This register contains the Word Counter Enable.
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_EN_BF_OFF ( 0)
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_EN_BF_WID ( 1)
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_EN_BF_MSK (0x00000001)
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_EN_BF_DEF (0x00000000)

///< This register contains the Word Counter Stop.
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_STOP_BF_OFF ( 1)
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_STOP_BF_WID ( 1)
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_STOP_BF_MSK (0x00000002)
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_STOP_BF_DEF (0x00000000)

///< This register contains the Word Counter Clear (Write Only).
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_CLR_BF_OFF ( 2)
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_CLR_BF_WID ( 1)
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_CLR_BF_MSK (0x00000004)
#define CIO2STRM_WORD_CNT_CTL_WORD_CNT_CLR_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_WORD_CNT register description at address offset 0x24
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_word_cnt
  * cio2strm_word_cnt register.
  */

typedef union {
  struct {
    uint32_t WORD_CNT : 32;
    ///< This register contains the Maximum FIFO Depth Encountered.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} cio2strm_word_cnt_reg_t;

#define CIO2STRM_WORD_CNT_DEFAULT (0x00000000U)
#define CIO2STRM_WORD_CNT_RD_MASK (0xffffffffU)
#define CIO2STRM_WORD_CNT_WR_MASK (0x00000000U)


///< This register contains the Maximum FIFO Depth Encountered.
#define CIO2STRM_WORD_CNT_WORD_CNT_BF_OFF ( 0)
#define CIO2STRM_WORD_CNT_WORD_CNT_BF_WID (32)
#define CIO2STRM_WORD_CNT_WORD_CNT_BF_MSK (0xFFFFFFFF)
#define CIO2STRM_WORD_CNT_WORD_CNT_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_STALL_CNT_CTL register description at address offset 0x28
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_stall_cnt_ctl
  * cio2strm_stall_cnt_ctl register.
  */

typedef union {
  struct {
    uint32_t STALL_CNT_ENABLE : 1;
    ///< This register contains the Stall Counter Enable.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t STALL_CNT_STOP : 1;
    ///< This register contains the Stall Counter Stop.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t STALL_CNT_CLEAR : 1;
    ///< This register contains the Stall Counter Clear (Write Only).
    ///< AccessType="WO" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_stall_cnt_ctl_reg_t;

#define CIO2STRM_STALL_CNT_CTL_DEFAULT (0x00000000U)
#define CIO2STRM_STALL_CNT_CTL_RD_MASK (0x00000003U)
#define CIO2STRM_STALL_CNT_CTL_WR_MASK (0x00000007U)


///< This register contains the Stall Counter Enable.
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_EN_BF_OFF ( 0)
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_EN_BF_WID ( 1)
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_EN_BF_MSK (0x00000001)
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_EN_BF_DEF (0x00000000)

///< This register contains the Stall Counter Stop.
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_STOP_BF_OFF ( 1)
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_STOP_BF_WID ( 1)
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_STOP_BF_MSK (0x00000002)
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_STOP_BF_DEF (0x00000000)

///< This register contains the Stall Counter Clear (Write Only).
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_CLR_BF_OFF ( 2)
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_CLR_BF_WID ( 1)
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_CLR_BF_MSK (0x00000004)
#define CIO2STRM_STALL_CNT_CTL_STALL_CNT_CLR_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_STALL_CNT register description at address offset 0x2c
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_stall_cnt
  * cio2strm_stall_cnt register.
  */

typedef union {
  struct {
    uint32_t STALL_CNT : 32;
    ///< This register contains the number of clocks the Streaming bus Stalls
    ///< from the CRUX Fabric backpressure.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} cio2strm_stall_cnt_reg_t;

#define CIO2STRM_STALL_CNT_DEFAULT (0x00000000U)
#define CIO2STRM_STALL_CNT_RD_MASK (0xffffffffU)
#define CIO2STRM_STALL_CNT_WR_MASK (0x00000000U)


///< This register contains the number of clocks the Streaming bus Stalls
///< from the CRUX Fabric backpressure.
#define CIO2STRM_STALL_CNT_STALL_CNT_BF_OFF ( 0)
#define CIO2STRM_STALL_CNT_STALL_CNT_BF_WID (32)
#define CIO2STRM_STALL_CNT_STALL_CNT_BF_MSK (0xFFFFFFFF)
#define CIO2STRM_STALL_CNT_STALL_CNT_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_STRM_READY_FORCE register description at address offset 0x30
  *
  * Register default value:        0x00000001
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_strm_ready_force
  * cio2strm_strm_ready_force register.
  */

typedef union {
  struct {
    uint32_t STRM_READY_FORCE : 1;
    ///< This register contains the Streaming Ready Force (1 = Force ON (default),
    ///< 0 = NO force).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x1"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_strm_ready_force_reg_t;

#define CIO2STRM_STRM_READY_FORCE_DEFAULT (0x00000001U)
#define CIO2STRM_STRM_READY_FORCE_RD_MASK (0x00000001U)
#define CIO2STRM_STRM_READY_FORCE_WR_MASK (0x00000001U)


///< This register contains the Streaming Ready Force (1 = Force ON (default),
///< 0 = NO force).
#define CIO2STRM_STRM_READY_FORCE_STRM_READY_FORCE_BF_OFF ( 0)
#define CIO2STRM_STRM_READY_FORCE_STRM_READY_FORCE_BF_WID ( 1)
#define CIO2STRM_STRM_READY_FORCE_STRM_READY_FORCE_BF_MSK (0x00000001)
#define CIO2STRM_STRM_READY_FORCE_STRM_READY_FORCE_BF_DEF (0x00000001)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_INT_STATUS register description at address offset 0x40
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_int_status
  * cio2strm_int_status register.
  */

typedef union {
  struct {
    uint32_t UNDERFLOW_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for Streaming FIFO
    ///< Underflow (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t OVERFLOW_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for Streaming FIFO
    ///< Overflow (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="1" ResetValue="0x0"
    uint32_t PROTOCOL_FIRST_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for CIO Protocol First
    ///< Error (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="2" ResetValue="0x0"
    uint32_t PROTOCOL_LAST_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for CIO Protocol Last
    ///< Error (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="3" ResetValue="0x0"
    uint32_t RANGE_ERROR_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for Address Range
    ///< Error (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="4" ResetValue="0x0"
    uint32_t CREDIT_COUNT_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for Credit Count Error
    ///< (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="5" ResetValue="0x0"
    uint32_t  : 26;
    ///< Reserved
    ///< AccessType="RO" BitOffset="6" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_int_stat_reg_t;

#define CIO2STRM_INT_STAT_DEFAULT (0x00000000U)
#define CIO2STRM_INT_STAT_RD_MASK (0x0000003fU)
#define CIO2STRM_INT_STAT_WR_MASK (0x00000000U)


///< This register contains the Interrupt RAW Status for Streaming FIFO
///< Underflow (1 = active, 0 = inactive).
#define CIO2STRM_INT_STAT_UNDERFLOW_INT_STAT_BF_OFF ( 0)
#define CIO2STRM_INT_STAT_UNDERFLOW_INT_STAT_BF_WID ( 1)
#define CIO2STRM_INT_STAT_UNDERFLOW_INT_STAT_BF_MSK (0x00000001)
#define CIO2STRM_INT_STAT_UNDERFLOW_INT_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt RAW Status for Streaming FIFO
///< Overflow (1 = active, 0 = inactive).
#define CIO2STRM_INT_STAT_OVERFLOW_INT_STAT_BF_OFF ( 1)
#define CIO2STRM_INT_STAT_OVERFLOW_INT_STAT_BF_WID ( 1)
#define CIO2STRM_INT_STAT_OVERFLOW_INT_STAT_BF_MSK (0x00000002)
#define CIO2STRM_INT_STAT_OVERFLOW_INT_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt RAW Status for CIO Protocol First
///< Error (1 = active, 0 = inactive).
#define CIO2STRM_INT_STAT_PROTOCOL_FIRST_INT_STAT_BF_OFF ( 2)
#define CIO2STRM_INT_STAT_PROTOCOL_FIRST_INT_STAT_BF_WID ( 1)
#define CIO2STRM_INT_STAT_PROTOCOL_FIRST_INT_STAT_BF_MSK (0x00000004)
#define CIO2STRM_INT_STAT_PROTOCOL_FIRST_INT_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt RAW Status for CIO Protocol Last
///< Error (1 = active, 0 = inactive).
#define CIO2STRM_INT_STAT_PROTOCOL_LAST_INT_STAT_BF_OFF ( 3)
#define CIO2STRM_INT_STAT_PROTOCOL_LAST_INT_STAT_BF_WID ( 1)
#define CIO2STRM_INT_STAT_PROTOCOL_LAST_INT_STAT_BF_MSK (0x00000008)
#define CIO2STRM_INT_STAT_PROTOCOL_LAST_INT_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt RAW Status for Address Range
///< Error (1 = active, 0 = inactive).
#define CIO2STRM_INT_STAT_RANGE_ERR_INT_STAT_BF_OFF ( 4)
#define CIO2STRM_INT_STAT_RANGE_ERR_INT_STAT_BF_WID ( 1)
#define CIO2STRM_INT_STAT_RANGE_ERR_INT_STAT_BF_MSK (0x00000010)
#define CIO2STRM_INT_STAT_RANGE_ERR_INT_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt RAW Status for Credit Count Error
///< (1 = active, 0 = inactive).
#define CIO2STRM_INT_STAT_CREDIT_CNT_INT_STAT_BF_OFF ( 5)
#define CIO2STRM_INT_STAT_CREDIT_CNT_INT_STAT_BF_WID ( 1)
#define CIO2STRM_INT_STAT_CREDIT_CNT_INT_STAT_BF_MSK (0x00000020)
#define CIO2STRM_INT_STAT_CREDIT_CNT_INT_STAT_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_INT_ENABLE register description at address offset 0x44
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_int_enable
  * cio2strm_int_enable register.
  */

typedef union {
  struct {
    uint32_t UNDERFLOW_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for Streaming FIFO Underflow
    ///< (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t OVERFLOW_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for Streaming FIFO Overflow
    ///< (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t PROTOCOL_FIRST_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for CIO Protocol First
    ///< Error (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t PROTOCOL_LAST_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for CIO Protocol Last
    ///< Error (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t RANGE_ERROR_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for Address Range Error
    ///< (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t CREDIT_COUNT_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for Credit Count Error
    ///< (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t  : 26;
    ///< Reserved
    ///< AccessType="RO" BitOffset="6" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_int_en_reg_t;

#define CIO2STRM_INT_EN_DEFAULT (0x00000000U)
#define CIO2STRM_INT_EN_RD_MASK (0x0000003fU)
#define CIO2STRM_INT_EN_WR_MASK (0x0000003fU)


///< This register contains the Interrupt Enable for Streaming FIFO Underflow
///< (1 = enable, 0 = disable).
#define CIO2STRM_INT_EN_UNDERFLOW_INT_EN_BF_OFF ( 0)
#define CIO2STRM_INT_EN_UNDERFLOW_INT_EN_BF_WID ( 1)
#define CIO2STRM_INT_EN_UNDERFLOW_INT_EN_BF_MSK (0x00000001)
#define CIO2STRM_INT_EN_UNDERFLOW_INT_EN_BF_DEF (0x00000000)

///< This register contains the Interrupt Enable for Streaming FIFO Overflow
///< (1 = enable, 0 = disable).
#define CIO2STRM_INT_EN_OVERFLOW_INT_EN_BF_OFF ( 1)
#define CIO2STRM_INT_EN_OVERFLOW_INT_EN_BF_WID ( 1)
#define CIO2STRM_INT_EN_OVERFLOW_INT_EN_BF_MSK (0x00000002)
#define CIO2STRM_INT_EN_OVERFLOW_INT_EN_BF_DEF (0x00000000)

///< This register contains the Interrupt Enable for CIO Protocol First
///< Error (1 = enable, 0 = disable).
#define CIO2STRM_INT_EN_PROTOCOL_FIRST_INT_EN_BF_OFF ( 2)
#define CIO2STRM_INT_EN_PROTOCOL_FIRST_INT_EN_BF_WID ( 1)
#define CIO2STRM_INT_EN_PROTOCOL_FIRST_INT_EN_BF_MSK (0x00000004)
#define CIO2STRM_INT_EN_PROTOCOL_FIRST_INT_EN_BF_DEF (0x00000000)

///< This register contains the Interrupt Enable for CIO Protocol Last
///< Error (1 = enable, 0 = disable).
#define CIO2STRM_INT_EN_PROTOCOL_LAST_INT_EN_BF_OFF ( 3)
#define CIO2STRM_INT_EN_PROTOCOL_LAST_INT_EN_BF_WID ( 1)
#define CIO2STRM_INT_EN_PROTOCOL_LAST_INT_EN_BF_MSK (0x00000008)
#define CIO2STRM_INT_EN_PROTOCOL_LAST_INT_EN_BF_DEF (0x00000000)

///< This register contains the Interrupt Enable for Address Range Error
///< (1 = enable, 0 = disable).
#define CIO2STRM_INT_EN_RANGE_ERR_INT_EN_BF_OFF ( 4)
#define CIO2STRM_INT_EN_RANGE_ERR_INT_EN_BF_WID ( 1)
#define CIO2STRM_INT_EN_RANGE_ERR_INT_EN_BF_MSK (0x00000010)
#define CIO2STRM_INT_EN_RANGE_ERR_INT_EN_BF_DEF (0x00000000)

///< This register contains the Interrupt Enable for Credit Count Error
///< (1 = enable, 0 = disable).
#define CIO2STRM_INT_EN_CREDIT_CNT_INT_EN_BF_OFF ( 5)
#define CIO2STRM_INT_EN_CREDIT_CNT_INT_EN_BF_WID ( 1)
#define CIO2STRM_INT_EN_CREDIT_CNT_INT_EN_BF_MSK (0x00000020)
#define CIO2STRM_INT_EN_CREDIT_CNT_INT_EN_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_INT_CLEAR register description at address offset 0x48
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_int_clear
  * cio2strm_int_clear register.
  */

typedef union {
  struct {
    uint32_t UNDERFLOW_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for Streaming FIFO Underflow
    ///< (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t OVERFLOW_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for Streaming FIFO Overflow
    ///< (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t PROTOCOL_FIRST_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for CIO Protocol First
    ///< Error (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t PROTOCOL_LAST_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for CIO Protocol Last Error
    ///< (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t RANGE_ERROR_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for Address Range Error
    ///< (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t CREDIT_COUNT_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for Credit Count Error
    ///< (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t  : 26;
    ///< Reserved
    ///< AccessType="RO" BitOffset="6" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_int_clr_reg_t;

#define CIO2STRM_INT_CLR_DEFAULT (0x00000000U)
#define CIO2STRM_INT_CLR_RD_MASK (0x0000003fU)
#define CIO2STRM_INT_CLR_WR_MASK (0x0000003fU)


///< This register contains the Interrupt Clear for Streaming FIFO Underflow
///< (1 = clear, 0 = no action).
#define CIO2STRM_INT_CLR_UNDERFLOW_INT_CLR_BF_OFF ( 0)
#define CIO2STRM_INT_CLR_UNDERFLOW_INT_CLR_BF_WID ( 1)
#define CIO2STRM_INT_CLR_UNDERFLOW_INT_CLR_BF_MSK (0x00000001)
#define CIO2STRM_INT_CLR_UNDERFLOW_INT_CLR_BF_DEF (0x00000000)

///< This register contains the Interrupt Clear for Streaming FIFO Overflow
///< (1 = clear, 0 = no action).
#define CIO2STRM_INT_CLR_OVERFLOW_INT_CLR_BF_OFF ( 1)
#define CIO2STRM_INT_CLR_OVERFLOW_INT_CLR_BF_WID ( 1)
#define CIO2STRM_INT_CLR_OVERFLOW_INT_CLR_BF_MSK (0x00000002)
#define CIO2STRM_INT_CLR_OVERFLOW_INT_CLR_BF_DEF (0x00000000)

///< This register contains the Interrupt Clear for CIO Protocol First
///< Error (1 = clear, 0 = no action).
#define CIO2STRM_INT_CLR_PROTOCOL_FIRST_INT_CLR_BF_OFF ( 2)
#define CIO2STRM_INT_CLR_PROTOCOL_FIRST_INT_CLR_BF_WID ( 1)
#define CIO2STRM_INT_CLR_PROTOCOL_FIRST_INT_CLR_BF_MSK (0x00000004)
#define CIO2STRM_INT_CLR_PROTOCOL_FIRST_INT_CLR_BF_DEF (0x00000000)

///< This register contains the Interrupt Clear for CIO Protocol Last Error
///< (1 = clear, 0 = no action).
#define CIO2STRM_INT_CLR_PROTOCOL_LAST_INT_CLR_BF_OFF ( 3)
#define CIO2STRM_INT_CLR_PROTOCOL_LAST_INT_CLR_BF_WID ( 1)
#define CIO2STRM_INT_CLR_PROTOCOL_LAST_INT_CLR_BF_MSK (0x00000008)
#define CIO2STRM_INT_CLR_PROTOCOL_LAST_INT_CLR_BF_DEF (0x00000000)

///< This register contains the Interrupt Clear for Address Range Error
///< (1 = clear, 0 = no action).
#define CIO2STRM_INT_CLR_RANGE_ERR_INT_CLR_BF_OFF ( 4)
#define CIO2STRM_INT_CLR_RANGE_ERR_INT_CLR_BF_WID ( 1)
#define CIO2STRM_INT_CLR_RANGE_ERR_INT_CLR_BF_MSK (0x00000010)
#define CIO2STRM_INT_CLR_RANGE_ERR_INT_CLR_BF_DEF (0x00000000)

///< This register contains the Interrupt Clear for Credit Count Error
///< (1 = clear, 0 = no action).
#define CIO2STRM_INT_CLR_CREDIT_CNT_INT_CLR_BF_OFF ( 5)
#define CIO2STRM_INT_CLR_CREDIT_CNT_INT_CLR_BF_WID ( 1)
#define CIO2STRM_INT_CLR_CREDIT_CNT_INT_CLR_BF_MSK (0x00000020)
#define CIO2STRM_INT_CLR_CREDIT_CNT_INT_CLR_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_INT_FORCE register description at address offset 0x4c
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_int_force
  * cio2strm_int_force register.
  */

typedef union {
  struct {
    uint32_t UNDERFLOW_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for Streaming FIFO Underflow
    ///< (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t OVERFLOW_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for Streaming FIFO Overflow
    ///< (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t PROTOCOL_FIRST_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for CIO Protocol First
    ///< Error (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t PROTOCOL_LAST_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for CIO Protocol Last Error
    ///< (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t RANGE_ERROR_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for Address Range Error
    ///< (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t CREDIT_COUNT_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for Credit Count Error
    ///< (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t  : 26;
    ///< Reserved
    ///< AccessType="RO" BitOffset="6" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_int_force_reg_t;

#define CIO2STRM_INT_FORCE_DEFAULT (0x00000000U)
#define CIO2STRM_INT_FORCE_RD_MASK (0x0000003fU)
#define CIO2STRM_INT_FORCE_WR_MASK (0x0000003fU)


///< This register contains the Interrupt Force for Streaming FIFO Underflow
///< (1 = force, 0 = no action).
#define CIO2STRM_INT_FORCE_UNDERFLOW_INT_FORCE_BF_OFF ( 0)
#define CIO2STRM_INT_FORCE_UNDERFLOW_INT_FORCE_BF_WID ( 1)
#define CIO2STRM_INT_FORCE_UNDERFLOW_INT_FORCE_BF_MSK (0x00000001)
#define CIO2STRM_INT_FORCE_UNDERFLOW_INT_FORCE_BF_DEF (0x00000000)

///< This register contains the Interrupt Force for Streaming FIFO Overflow
///< (1 = force, 0 = no action).
#define CIO2STRM_INT_FORCE_OVERFLOW_INT_FORCE_BF_OFF ( 1)
#define CIO2STRM_INT_FORCE_OVERFLOW_INT_FORCE_BF_WID ( 1)
#define CIO2STRM_INT_FORCE_OVERFLOW_INT_FORCE_BF_MSK (0x00000002)
#define CIO2STRM_INT_FORCE_OVERFLOW_INT_FORCE_BF_DEF (0x00000000)

///< This register contains the Interrupt Force for CIO Protocol First
///< Error (1 = force, 0 = no action).
#define CIO2STRM_INT_FORCE_PROTOCOL_FIRST_INT_FORCE_BF_OFF ( 2)
#define CIO2STRM_INT_FORCE_PROTOCOL_FIRST_INT_FORCE_BF_WID ( 1)
#define CIO2STRM_INT_FORCE_PROTOCOL_FIRST_INT_FORCE_BF_MSK (0x00000004)
#define CIO2STRM_INT_FORCE_PROTOCOL_FIRST_INT_FORCE_BF_DEF (0x00000000)

///< This register contains the Interrupt Force for CIO Protocol Last Error
///< (1 = force, 0 = no action).
#define CIO2STRM_INT_FORCE_PROTOCOL_LAST_INT_FORCE_BF_OFF ( 3)
#define CIO2STRM_INT_FORCE_PROTOCOL_LAST_INT_FORCE_BF_WID ( 1)
#define CIO2STRM_INT_FORCE_PROTOCOL_LAST_INT_FORCE_BF_MSK (0x00000008)
#define CIO2STRM_INT_FORCE_PROTOCOL_LAST_INT_FORCE_BF_DEF (0x00000000)

///< This register contains the Interrupt Force for Address Range Error
///< (1 = force, 0 = no action).
#define CIO2STRM_INT_FORCE_RANGE_ERR_INT_FORCE_BF_OFF ( 4)
#define CIO2STRM_INT_FORCE_RANGE_ERR_INT_FORCE_BF_WID ( 1)
#define CIO2STRM_INT_FORCE_RANGE_ERR_INT_FORCE_BF_MSK (0x00000010)
#define CIO2STRM_INT_FORCE_RANGE_ERR_INT_FORCE_BF_DEF (0x00000000)

///< This register contains the Interrupt Force for Credit Count Error
///< (1 = force, 0 = no action).
#define CIO2STRM_INT_FORCE_CREDIT_CNT_INT_FORCE_BF_OFF ( 5)
#define CIO2STRM_INT_FORCE_CREDIT_CNT_INT_FORCE_BF_WID ( 1)
#define CIO2STRM_INT_FORCE_CREDIT_CNT_INT_FORCE_BF_MSK (0x00000020)
#define CIO2STRM_INT_FORCE_CREDIT_CNT_INT_FORCE_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_INT_MASKED_STAT register description at address offset 0x50
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_int_masked_stat
  * cio2strm_int_masked_stat register.
  */

typedef union {
  struct {
    uint32_t UNDERFLOW_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Masked Status for Streaming FIFO
    ///< Underflow (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t OVERFLOW_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Masked Status for Streaming FIFO
    ///< Overflow (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="1" ResetValue="0x0"
    uint32_t PROTOCOL_FIRST_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Masked Status for CIO Protocol
    ///< First Error (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="2" ResetValue="0x0"
    uint32_t PROTOCOL_LAST_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Masked Status for CIO Protocol
    ///< Last Error (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="3" ResetValue="0x0"
    uint32_t RANGE_ERROR_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Status for Address Range Error
    ///< (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="4" ResetValue="0x0"
    uint32_t CREDIT_COUNT_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Status for Credit Count Error
    ///< (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="5" ResetValue="0x0"
    uint32_t  : 26;
    ///< Reserved
    ///< AccessType="RO" BitOffset="6" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_int_masked_stat_reg_t;

#define CIO2STRM_INT_MASKED_STAT_DEFAULT (0x00000000U)
#define CIO2STRM_INT_MASKED_STAT_RD_MASK (0x0000003fU)
#define CIO2STRM_INT_MASKED_STAT_WR_MASK (0x00000000U)


///< This register contains the Interrupt Masked Status for Streaming FIFO
///< Underflow (1 = active, 0 = inactive).
#define CIO2STRM_INT_MASKED_STAT_UNDERFLOW_INT_MASKED_STAT_BF_OFF ( 0)
#define CIO2STRM_INT_MASKED_STAT_UNDERFLOW_INT_MASKED_STAT_BF_WID ( 1)
#define CIO2STRM_INT_MASKED_STAT_UNDERFLOW_INT_MASKED_STAT_BF_MSK (0x00000001)
#define CIO2STRM_INT_MASKED_STAT_UNDERFLOW_INT_MASKED_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt Masked Status for Streaming FIFO
///< Overflow (1 = active, 0 = inactive).
#define CIO2STRM_INT_MASKED_STAT_OVERFLOW_INT_MASKED_STAT_BF_OFF ( 1)
#define CIO2STRM_INT_MASKED_STAT_OVERFLOW_INT_MASKED_STAT_BF_WID ( 1)
#define CIO2STRM_INT_MASKED_STAT_OVERFLOW_INT_MASKED_STAT_BF_MSK (0x00000002)
#define CIO2STRM_INT_MASKED_STAT_OVERFLOW_INT_MASKED_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt Masked Status for CIO Protocol
///< First Error (1 = active, 0 = inactive).
#define CIO2STRM_INT_MASKED_STAT_PROTOCOL_FIRST_INT_MASKED_STAT_BF_OFF ( 2)
#define CIO2STRM_INT_MASKED_STAT_PROTOCOL_FIRST_INT_MASKED_STAT_BF_WID ( 1)
#define CIO2STRM_INT_MASKED_STAT_PROTOCOL_FIRST_INT_MASKED_STAT_BF_MSK (0x00000004)
#define CIO2STRM_INT_MASKED_STAT_PROTOCOL_FIRST_INT_MASKED_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt Masked Status for CIO Protocol
///< Last Error (1 = active, 0 = inactive).
#define CIO2STRM_INT_MASKED_STAT_PROTOCOL_LAST_INT_MASKED_STAT_BF_OFF ( 3)
#define CIO2STRM_INT_MASKED_STAT_PROTOCOL_LAST_INT_MASKED_STAT_BF_WID ( 1)
#define CIO2STRM_INT_MASKED_STAT_PROTOCOL_LAST_INT_MASKED_STAT_BF_MSK (0x00000008)
#define CIO2STRM_INT_MASKED_STAT_PROTOCOL_LAST_INT_MASKED_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt Status for Address Range Error
///< (1 = active, 0 = inactive).
#define CIO2STRM_INT_MASKED_STAT_RANGE_ERR_INT_MASKED_STAT_BF_OFF ( 4)
#define CIO2STRM_INT_MASKED_STAT_RANGE_ERR_INT_MASKED_STAT_BF_WID ( 1)
#define CIO2STRM_INT_MASKED_STAT_RANGE_ERR_INT_MASKED_STAT_BF_MSK (0x00000010)
#define CIO2STRM_INT_MASKED_STAT_RANGE_ERR_INT_MASKED_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt Status for Credit Count Error
///< (1 = active, 0 = inactive).
#define CIO2STRM_INT_MASKED_STAT_CREDIT_CNT_INT_MASKED_STAT_BF_OFF ( 5)
#define CIO2STRM_INT_MASKED_STAT_CREDIT_CNT_INT_MASKED_STAT_BF_WID ( 1)
#define CIO2STRM_INT_MASKED_STAT_CREDIT_CNT_INT_MASKED_STAT_BF_MSK (0x00000020)
#define CIO2STRM_INT_MASKED_STAT_CREDIT_CNT_INT_MASKED_STAT_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_RANGE_EN register description at address offset 0x60
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_range_en
  * cio2strm_range_en register.
  */

typedef union {
  struct {
    uint32_t RANGE_EN0 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 0.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t RANGE_EN1 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 1.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t RANGE_EN2 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 2.
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t RANGE_EN3 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 3.
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t RANGE_EN4 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 4.
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t RANGE_EN5 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 5.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t RANGE_EN6 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 6.
    ///< AccessType="RW" BitOffset="6" ResetValue="0x0"
    uint32_t RANGE_EN7 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 7.
    ///< AccessType="RW" BitOffset="7" ResetValue="0x0"
    uint32_t RANGE_EN8 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 8.
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t RANGE_EN9 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 9.
    ///< AccessType="RW" BitOffset="9" ResetValue="0x0"
    uint32_t RANGE_EN10 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 10.
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t RANGE_EN11 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 11.
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t RANGE_EN12 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 12.
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t RANGE_EN13 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 13.
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t RANGE_EN14 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 14.
    ///< AccessType="RW" BitOffset="14" ResetValue="0x0"
    uint32_t RANGE_EN15 : 1;
    ///< This register contains the CIO Memory Address Range Compare Enable
    ///< for set 15.
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_range_en_reg_t;

#define CIO2STRM_RANGE_EN_DEFAULT (0x00000000U)
#define CIO2STRM_RANGE_EN_RD_MASK (0x0000ffffU)
#define CIO2STRM_RANGE_EN_WR_MASK (0x0000ffffU)


///< This register contains the CIO Memory Address Range Compare Enable
///< for set 0.
#define CIO2STRM_RANGE_EN_RANGE_EN0_BF_OFF ( 0)
#define CIO2STRM_RANGE_EN_RANGE_EN0_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN0_BF_MSK (0x00000001)
#define CIO2STRM_RANGE_EN_RANGE_EN0_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 1.
#define CIO2STRM_RANGE_EN_RANGE_EN1_BF_OFF ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN1_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN1_BF_MSK (0x00000002)
#define CIO2STRM_RANGE_EN_RANGE_EN1_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 2.
#define CIO2STRM_RANGE_EN_RANGE_EN2_BF_OFF ( 2)
#define CIO2STRM_RANGE_EN_RANGE_EN2_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN2_BF_MSK (0x00000004)
#define CIO2STRM_RANGE_EN_RANGE_EN2_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 3.
#define CIO2STRM_RANGE_EN_RANGE_EN3_BF_OFF ( 3)
#define CIO2STRM_RANGE_EN_RANGE_EN3_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN3_BF_MSK (0x00000008)
#define CIO2STRM_RANGE_EN_RANGE_EN3_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 4.
#define CIO2STRM_RANGE_EN_RANGE_EN4_BF_OFF ( 4)
#define CIO2STRM_RANGE_EN_RANGE_EN4_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN4_BF_MSK (0x00000010)
#define CIO2STRM_RANGE_EN_RANGE_EN4_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 5.
#define CIO2STRM_RANGE_EN_RANGE_EN5_BF_OFF ( 5)
#define CIO2STRM_RANGE_EN_RANGE_EN5_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN5_BF_MSK (0x00000020)
#define CIO2STRM_RANGE_EN_RANGE_EN5_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 6.
#define CIO2STRM_RANGE_EN_RANGE_EN6_BF_OFF ( 6)
#define CIO2STRM_RANGE_EN_RANGE_EN6_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN6_BF_MSK (0x00000040)
#define CIO2STRM_RANGE_EN_RANGE_EN6_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 7.
#define CIO2STRM_RANGE_EN_RANGE_EN7_BF_OFF ( 7)
#define CIO2STRM_RANGE_EN_RANGE_EN7_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN7_BF_MSK (0x00000080)
#define CIO2STRM_RANGE_EN_RANGE_EN7_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 8.
#define CIO2STRM_RANGE_EN_RANGE_EN8_BF_OFF ( 8)
#define CIO2STRM_RANGE_EN_RANGE_EN8_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN8_BF_MSK (0x00000100)
#define CIO2STRM_RANGE_EN_RANGE_EN8_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 9.
#define CIO2STRM_RANGE_EN_RANGE_EN9_BF_OFF ( 9)
#define CIO2STRM_RANGE_EN_RANGE_EN9_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN9_BF_MSK (0x00000200)
#define CIO2STRM_RANGE_EN_RANGE_EN9_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 10.
#define CIO2STRM_RANGE_EN_RANGE_EN10_BF_OFF (10)
#define CIO2STRM_RANGE_EN_RANGE_EN10_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN10_BF_MSK (0x00000400)
#define CIO2STRM_RANGE_EN_RANGE_EN10_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 11.
#define CIO2STRM_RANGE_EN_RANGE_EN11_BF_OFF (11)
#define CIO2STRM_RANGE_EN_RANGE_EN11_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN11_BF_MSK (0x00000800)
#define CIO2STRM_RANGE_EN_RANGE_EN11_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 12.
#define CIO2STRM_RANGE_EN_RANGE_EN12_BF_OFF (12)
#define CIO2STRM_RANGE_EN_RANGE_EN12_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN12_BF_MSK (0x00001000)
#define CIO2STRM_RANGE_EN_RANGE_EN12_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 13.
#define CIO2STRM_RANGE_EN_RANGE_EN13_BF_OFF (13)
#define CIO2STRM_RANGE_EN_RANGE_EN13_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN13_BF_MSK (0x00002000)
#define CIO2STRM_RANGE_EN_RANGE_EN13_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 14.
#define CIO2STRM_RANGE_EN_RANGE_EN14_BF_OFF (14)
#define CIO2STRM_RANGE_EN_RANGE_EN14_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN14_BF_MSK (0x00004000)
#define CIO2STRM_RANGE_EN_RANGE_EN14_BF_DEF (0x00000000)

///< This register contains the CIO Memory Address Range Compare Enable
///< for set 15.
#define CIO2STRM_RANGE_EN_RANGE_EN15_BF_OFF (15)
#define CIO2STRM_RANGE_EN_RANGE_EN15_BF_WID ( 1)
#define CIO2STRM_RANGE_EN_RANGE_EN15_BF_MSK (0x00008000)
#define CIO2STRM_RANGE_EN_RANGE_EN15_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_RANGE_ERROR register description at address offset 0x64
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_range_error
  * cio2strm_range_error register.
  */

typedef union {
  struct {
    uint32_t RANGE_ERROR : 32;
    ///< This register contains the CIO Address for the Range Compare Error.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} cio2strm_range_err_reg_t;

#define CIO2STRM_RANGE_ERR_DEFAULT (0x00000000U)
#define CIO2STRM_RANGE_ERR_RD_MASK (0xffffffffU)
#define CIO2STRM_RANGE_ERR_WR_MASK (0x00000000U)


///< This register contains the CIO Address for the Range Compare Error.
#define CIO2STRM_RANGE_ERR_RANGE_ERR_BF_OFF ( 0)
#define CIO2STRM_RANGE_ERR_RANGE_ERR_BF_WID (32)
#define CIO2STRM_RANGE_ERR_RANGE_ERR_BF_MSK (0xFFFFFFFF)
#define CIO2STRM_RANGE_ERR_RANGE_ERR_BF_DEF (0x00000000)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_MEM_ADDR_LOW[16] register description at address offset 0x80
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_mem_addr_low
  * cio2strm_mem_addr_low register.
  */

typedef union {
  struct {
    uint32_t MEM_ADDR_LOW : 32;
    ///< This register contains the Low Range of the CIO Memory Address Compare
    ///< Register.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} cio2strm_mem_addr_low_reg_t;

#define CIO2STRM_MEM_ADDR_LOW_DEFAULT (0x00000000U)
#define CIO2STRM_MEM_ADDR_LOW_RD_MASK (0xffffffffU)
#define CIO2STRM_MEM_ADDR_LOW_WR_MASK (0xffffffffU)


///< This register contains the Low Range of the CIO Memory Address Compare
///< Register.
#define CIO2STRM_MEM_ADDR_LOW_MEM_ADDR_LOW_BF_OFF ( 0)
#define CIO2STRM_MEM_ADDR_LOW_MEM_ADDR_LOW_BF_WID (32)
#define CIO2STRM_MEM_ADDR_LOW_MEM_ADDR_LOW_BF_MSK (0xFFFFFFFF)
#define CIO2STRM_MEM_ADDR_LOW_MEM_ADDR_LOW_BF_DEF (0x00000000)
#define CIO2STRM_MEM_ADDR_LOW_ARR_SZ0 (16)
#define CIO2STRM_MEM_ADDR_LOW_ARRAY_STRIDE0 (0x0004)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_MEM_ADDR_HIGH[16] register description at address offset 0xc0
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_mem_addr_high
  * cio2strm_mem_addr_high register.
  */

typedef union {
  struct {
    uint32_t MEM_ADDR_HIGH : 32;
    ///< This register contains the High Range of the CIO Memory Address Compare
    ///< Register.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} cio2strm_mem_addr_high_reg_t;

#define CIO2STRM_MEM_ADDR_HIGH_DEFAULT (0x00000000U)
#define CIO2STRM_MEM_ADDR_HIGH_RD_MASK (0xffffffffU)
#define CIO2STRM_MEM_ADDR_HIGH_WR_MASK (0xffffffffU)


///< This register contains the High Range of the CIO Memory Address Compare
///< Register.
#define CIO2STRM_MEM_ADDR_HIGH_MEM_ADDR_HIGH_BF_OFF ( 0)
#define CIO2STRM_MEM_ADDR_HIGH_MEM_ADDR_HIGH_BF_WID (32)
#define CIO2STRM_MEM_ADDR_HIGH_MEM_ADDR_HIGH_BF_MSK (0xFFFFFFFF)
#define CIO2STRM_MEM_ADDR_HIGH_MEM_ADDR_HIGH_BF_DEF (0x00000000)
#define CIO2STRM_MEM_ADDR_HIGH_ARR_SZ0 (16)
#define CIO2STRM_MEM_ADDR_HIGH_ARRAY_STRIDE0 (0x0004)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_MEM_OFFSET[16] register description at address offset 0x100
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_mem_offset
  * cio2strm_mem_offset register.
  */

typedef union {
  struct {
    uint32_t MEM_OFFSET : 28;
    ///< This register contains the Memory Address Offset for a byte address.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_mem_offset_reg_t;

#define CIO2STRM_MEM_OFFSET_DEFAULT (0x00000000U)
#define CIO2STRM_MEM_OFFSET_RD_MASK (0x0fffffffU)
#define CIO2STRM_MEM_OFFSET_WR_MASK (0x0fffffffU)


///< This register contains the Memory Address Offset for a byte address.
#define CIO2STRM_MEM_OFFSET_MEM_OFFSET_BF_OFF ( 0)
#define CIO2STRM_MEM_OFFSET_MEM_OFFSET_BF_WID (28)
#define CIO2STRM_MEM_OFFSET_MEM_OFFSET_BF_MSK (0x0FFFFFFF)
#define CIO2STRM_MEM_OFFSET_MEM_OFFSET_BF_DEF (0x00000000)
#define CIO2STRM_MEM_OFFSET_ARR_SZ0 (16)
#define CIO2STRM_MEM_OFFSET_ARRAY_STRIDE0 (0x0004)


/** @brief CIO2STRM_REG_MAP_MEM_CIO2STRM_REG_MAP_CIO2STRM_STRM_DEST[16] register description at address offset 0x140
  *
  * Register default value:        0x00000000
  * Register full path in IP: cio2strm_reg_map_MEM/cio2strm_reg_map/cio2strm_strm_dest
  * cio2strm_strm_dest register.
  */

typedef union {
  struct {
    uint32_t STRM_DEST_ID : 11;
    ///< This register contains the Streaming Destination ID Value.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t STRM_DEST_INT : 3;
    ///< This register contains the Streaming Destination Interface ID Value.
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t  : 18;
    ///< Reserved
    ///< AccessType="RO" BitOffset="14" ResetValue="None"
  } ;
  uint32_t value;
} cio2strm_strm_dest_reg_t;

#define CIO2STRM_STRM_DEST_DEFAULT (0x00000000U)
#define CIO2STRM_STRM_DEST_RD_MASK (0x00003fffU)
#define CIO2STRM_STRM_DEST_WR_MASK (0x00003fffU)


///< This register contains the Streaming Destination ID Value.
#define CIO2STRM_STRM_DEST_STRM_DEST_ID_BF_OFF ( 0)
#define CIO2STRM_STRM_DEST_STRM_DEST_ID_BF_WID (11)
#define CIO2STRM_STRM_DEST_STRM_DEST_ID_BF_MSK (0x000007FF)
#define CIO2STRM_STRM_DEST_STRM_DEST_ID_BF_DEF (0x00000000)

///< This register contains the Streaming Destination Interface ID Value.
#define CIO2STRM_STRM_DEST_STRM_DEST_INT_BF_OFF (11)
#define CIO2STRM_STRM_DEST_STRM_DEST_INT_BF_WID ( 3)
#define CIO2STRM_STRM_DEST_STRM_DEST_INT_BF_MSK (0x00003800)
#define CIO2STRM_STRM_DEST_STRM_DEST_INT_BF_DEF (0x00000000)
#define CIO2STRM_STRM_DEST_ARR_SZ0 (16)
#define CIO2STRM_STRM_DEST_ARRAY_STRIDE0 (0x0004)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define CIO2STRM_CREDIT_CNT_REG(_BASE) ((cio2strm_credit_cnt_reg_t*) CIO2STRM_CREDIT_CNT_ADR(_BASE))
#define CIO2STRM_CREDIT_CNT_STAT_REG(_BASE) ((cio2strm_credit_cnt_stat_reg_t*) CIO2STRM_CREDIT_CNT_STAT_ADR(_BASE))
#define CIO2STRM_FIFO_STAT_CTL_REG(_BASE) ((cio2strm_fifo_stat_ctl_reg_t*) CIO2STRM_FIFO_STAT_CTL_ADR(_BASE))
#define CIO2STRM_FIFO_STAT_REG(_BASE) ((cio2strm_fifo_stat_reg_t*) CIO2STRM_FIFO_STAT_ADR(_BASE))
#define CIO2STRM_WORD_CNT_CTL_REG(_BASE) ((cio2strm_word_cnt_ctl_reg_t*) CIO2STRM_WORD_CNT_CTL_ADR(_BASE))
#define CIO2STRM_WORD_CNT_REG(_BASE) ((cio2strm_word_cnt_reg_t*) CIO2STRM_WORD_CNT_ADR(_BASE))
#define CIO2STRM_STALL_CNT_CTL_REG(_BASE) ((cio2strm_stall_cnt_ctl_reg_t*) CIO2STRM_STALL_CNT_CTL_ADR(_BASE))
#define CIO2STRM_STALL_CNT_REG(_BASE) ((cio2strm_stall_cnt_reg_t*) CIO2STRM_STALL_CNT_ADR(_BASE))
#define CIO2STRM_STRM_READY_FORCE_REG(_BASE) ((cio2strm_strm_ready_force_reg_t*) CIO2STRM_STRM_READY_FORCE_ADR(_BASE))
#define CIO2STRM_INT_STAT_REG(_BASE) ((cio2strm_int_stat_reg_t*) CIO2STRM_INT_STAT_ADR(_BASE))
#define CIO2STRM_INT_EN_REG(_BASE) ((cio2strm_int_en_reg_t*) CIO2STRM_INT_EN_ADR(_BASE))
#define CIO2STRM_INT_CLR_REG(_BASE) ((cio2strm_int_clr_reg_t*) CIO2STRM_INT_CLR_ADR(_BASE))
#define CIO2STRM_INT_FORCE_REG(_BASE) ((cio2strm_int_force_reg_t*) CIO2STRM_INT_FORCE_ADR(_BASE))
#define CIO2STRM_INT_MASKED_STAT_REG(_BASE) ((cio2strm_int_masked_stat_reg_t*) CIO2STRM_INT_MASKED_STAT_ADR(_BASE))
#define CIO2STRM_RANGE_EN_REG(_BASE) ((cio2strm_range_en_reg_t*) CIO2STRM_RANGE_EN_ADR(_BASE))
#define CIO2STRM_RANGE_ERR_REG(_BASE) ((cio2strm_range_err_reg_t*) CIO2STRM_RANGE_ERR_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW0_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW0_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW1_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW1_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW2_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW2_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW3_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW3_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW4_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW4_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW5_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW5_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW6_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW6_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW7_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW7_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW8_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW8_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW9_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW9_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW10_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW10_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW11_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW11_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW12_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW12_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW13_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW13_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW14_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW14_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_LOW15_REG(_BASE) ((cio2strm_mem_addr_low_reg_t*) CIO2STRM_MEM_ADDR_LOW15_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH0_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH0_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH1_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH1_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH2_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH2_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH3_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH3_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH4_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH4_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH5_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH5_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH6_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH6_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH7_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH7_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH8_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH8_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH9_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH9_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH10_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH10_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH11_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH11_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH12_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH12_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH13_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH13_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH14_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH14_ADR(_BASE))
#define CIO2STRM_MEM_ADDR_HIGH15_REG(_BASE) ((cio2strm_mem_addr_high_reg_t*) CIO2STRM_MEM_ADDR_HIGH15_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET0_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET0_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET1_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET1_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET2_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET2_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET3_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET3_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET4_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET4_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET5_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET5_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET6_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET6_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET7_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET7_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET8_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET8_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET9_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET9_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET10_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET10_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET11_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET11_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET12_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET12_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET13_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET13_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET14_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET14_ADR(_BASE))
#define CIO2STRM_MEM_OFFSET15_REG(_BASE) ((cio2strm_mem_offset_reg_t*) CIO2STRM_MEM_OFFSET15_ADR(_BASE))
#define CIO2STRM_STRM_DEST0_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST0_ADR(_BASE))
#define CIO2STRM_STRM_DEST1_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST1_ADR(_BASE))
#define CIO2STRM_STRM_DEST2_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST2_ADR(_BASE))
#define CIO2STRM_STRM_DEST3_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST3_ADR(_BASE))
#define CIO2STRM_STRM_DEST4_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST4_ADR(_BASE))
#define CIO2STRM_STRM_DEST5_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST5_ADR(_BASE))
#define CIO2STRM_STRM_DEST6_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST6_ADR(_BASE))
#define CIO2STRM_STRM_DEST7_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST7_ADR(_BASE))
#define CIO2STRM_STRM_DEST8_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST8_ADR(_BASE))
#define CIO2STRM_STRM_DEST9_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST9_ADR(_BASE))
#define CIO2STRM_STRM_DEST10_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST10_ADR(_BASE))
#define CIO2STRM_STRM_DEST11_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST11_ADR(_BASE))
#define CIO2STRM_STRM_DEST12_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST12_ADR(_BASE))
#define CIO2STRM_STRM_DEST13_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST13_ADR(_BASE))
#define CIO2STRM_STRM_DEST14_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST14_ADR(_BASE))
#define CIO2STRM_STRM_DEST15_REG(_BASE) ((cio2strm_strm_dest_reg_t*) CIO2STRM_STRM_DEST15_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    const uint8_t        reservedArea0 [8];   /*< Address offset = 0x0 */
    cio2strm_credit_cnt_reg_t CIO2STRM_CREDIT_CNT; /*< Address offset = 0x8 */
    cio2strm_credit_cnt_stat_reg_t CIO2STRM_CREDIT_CNT_STAT; /*< Address offset = 0xc */
    cio2strm_fifo_stat_ctl_reg_t CIO2STRM_FIFO_STAT_CTL; /*< Address offset = 0x10 */
    cio2strm_fifo_stat_reg_t CIO2STRM_FIFO_STAT; /*< Address offset = 0x14 */
    const uint8_t        reservedArea1 [8];   /*< Address offset = 0x18 */
    cio2strm_word_cnt_ctl_reg_t CIO2STRM_WORD_CNT_CTL; /*< Address offset = 0x20 */
    cio2strm_word_cnt_reg_t CIO2STRM_WORD_CNT; /*< Address offset = 0x24 */
    cio2strm_stall_cnt_ctl_reg_t CIO2STRM_STALL_CNT_CTL; /*< Address offset = 0x28 */
    cio2strm_stall_cnt_reg_t CIO2STRM_STALL_CNT; /*< Address offset = 0x2c */
    cio2strm_strm_ready_force_reg_t CIO2STRM_STRM_READY_FORCE; /*< Address offset = 0x30 */
    const uint8_t        reservedArea2 [12];  /*< Address offset = 0x34 */
    cio2strm_int_stat_reg_t CIO2STRM_INT_STAT; /*< Address offset = 0x40 */
    cio2strm_int_en_reg_t CIO2STRM_INT_EN; /*< Address offset = 0x44 */
    cio2strm_int_clr_reg_t CIO2STRM_INT_CLR; /*< Address offset = 0x48 */
    cio2strm_int_force_reg_t CIO2STRM_INT_FORCE; /*< Address offset = 0x4c */
    cio2strm_int_masked_stat_reg_t CIO2STRM_INT_MASKED_STAT; /*< Address offset = 0x50 */
    const uint8_t        reservedArea3 [12];  /*< Address offset = 0x54 */
    cio2strm_range_en_reg_t CIO2STRM_RANGE_EN; /*< Address offset = 0x60 */
    cio2strm_range_err_reg_t CIO2STRM_RANGE_ERR; /*< Address offset = 0x64 */
    const uint8_t        reservedArea4 [24];  /*< Address offset = 0x68 */
    cio2strm_mem_addr_low_reg_t CIO2STRM_MEM_ADDR_LOW[16]; /*< Address offset = 0x80 */
    cio2strm_mem_addr_high_reg_t CIO2STRM_MEM_ADDR_HIGH[16]; /*< Address offset = 0xc0 */
    cio2strm_mem_offset_reg_t CIO2STRM_MEM_OFFSET[16]; /*< Address offset = 0x100 */
    cio2strm_strm_dest_reg_t CIO2STRM_STRM_DEST[16]; /*< Address offset = 0x140 */
} cio2strm_t;     // size: 0x0050

// AddressSpace struct pointer
//
#define VEXABC0_C2S_CIO2STRM   ((cio2strm_t*) VEXABC0_C2S_CIO2STRM_BASE)
#define VEXABC1_C2S_CIO2STRM   ((cio2strm_t*) VEXABC1_C2S_CIO2STRM_BASE)
#define VEXABC2_C2S_CIO2STRM   ((cio2strm_t*) VEXABC2_C2S_CIO2STRM_BASE)
#define VEXABC3_C2S_CIO2STRM   ((cio2strm_t*) VEXABC3_C2S_CIO2STRM_BASE)
#define VEXABC4_C2S_CIO2STRM   ((cio2strm_t*) VEXABC4_C2S_CIO2STRM_BASE)
#define VEXABC5_C2S_CIO2STRM   ((cio2strm_t*) VEXABC5_C2S_CIO2STRM_BASE)
#define VEXABC6_C2S_CIO2STRM   ((cio2strm_t*) VEXABC6_C2S_CIO2STRM_BASE)
#define VEXABC7_C2S_CIO2STRM   ((cio2strm_t*) VEXABC7_C2S_CIO2STRM_BASE)
#define VEXABC8_C2S_CIO2STRM   ((cio2strm_t*) VEXABC8_C2S_CIO2STRM_BASE)
#define VEXABC9_C2S_CIO2STRM   ((cio2strm_t*) VEXABC9_C2S_CIO2STRM_BASE)
#define VEXABC10_C2S_CIO2STRM  ((cio2strm_t*) VEXABC10_C2S_CIO2STRM_BASE)
#define VEXABC11_C2S_CIO2STRM  ((cio2strm_t*) VEXABC11_C2S_CIO2STRM_BASE)
#define VEXABC12_C2S_CIO2STRM  ((cio2strm_t*) VEXABC12_C2S_CIO2STRM_BASE)
#define VEXABC13_C2S_CIO2STRM  ((cio2strm_t*) VEXABC13_C2S_CIO2STRM_BASE)
#define VEXABC14_C2S_CIO2STRM  ((cio2strm_t*) VEXABC14_C2S_CIO2STRM_BASE)
#define VEXABC15_C2S_CIO2STRM  ((cio2strm_t*) VEXABC15_C2S_CIO2STRM_BASE)
#define VEXABC16_C2S_CIO2STRM  ((cio2strm_t*) VEXABC16_C2S_CIO2STRM_BASE)
#define VEXABC17_C2S_CIO2STRM  ((cio2strm_t*) VEXABC17_C2S_CIO2STRM_BASE)
#define VEXABC18_C2S_CIO2STRM  ((cio2strm_t*) VEXABC18_C2S_CIO2STRM_BASE)
#define VEXABC19_C2S_CIO2STRM  ((cio2strm_t*) VEXABC19_C2S_CIO2STRM_BASE)
#define VEXABC20_C2S_CIO2STRM  ((cio2strm_t*) VEXABC20_C2S_CIO2STRM_BASE)
#define VEXABC21_C2S_CIO2STRM  ((cio2strm_t*) VEXABC21_C2S_CIO2STRM_BASE)
#define VEXABC22_C2S_CIO2STRM  ((cio2strm_t*) VEXABC22_C2S_CIO2STRM_BASE)
#define VEXABC23_C2S_CIO2STRM  ((cio2strm_t*) VEXABC23_C2S_CIO2STRM_BASE)
#define VEXABC24_C2S_CIO2STRM  ((cio2strm_t*) VEXABC24_C2S_CIO2STRM_BASE)
#define VEXABC25_C2S_CIO2STRM  ((cio2strm_t*) VEXABC25_C2S_CIO2STRM_BASE)
#define VEXABC26_C2S_CIO2STRM  ((cio2strm_t*) VEXABC26_C2S_CIO2STRM_BASE)
#define VEXABC27_C2S_CIO2STRM  ((cio2strm_t*) VEXABC27_C2S_CIO2STRM_BASE)
#define VEXABC28_C2S_CIO2STRM  ((cio2strm_t*) VEXABC28_C2S_CIO2STRM_BASE)
#define VEXABC29_C2S_CIO2STRM  ((cio2strm_t*) VEXABC29_C2S_CIO2STRM_BASE)
#define VEXABC30_C2S_CIO2STRM  ((cio2strm_t*) VEXABC30_C2S_CIO2STRM_BASE)
#define VEXABC31_C2S_CIO2STRM  ((cio2strm_t*) VEXABC31_C2S_CIO2STRM_BASE)
#define VEXABC32_C2S_CIO2STRM  ((cio2strm_t*) VEXABC32_C2S_CIO2STRM_BASE)
#define VEXABC33_C2S_CIO2STRM  ((cio2strm_t*) VEXABC33_C2S_CIO2STRM_BASE)
#define VEXABC34_C2S_CIO2STRM  ((cio2strm_t*) VEXABC34_C2S_CIO2STRM_BASE)
#define VEXABC35_C2S_CIO2STRM  ((cio2strm_t*) VEXABC35_C2S_CIO2STRM_BASE)
#define VEXABC36_C2S_CIO2STRM  ((cio2strm_t*) VEXABC36_C2S_CIO2STRM_BASE)
#define VEXABC37_C2S_CIO2STRM  ((cio2strm_t*) VEXABC37_C2S_CIO2STRM_BASE)
#define VEXABC38_C2S_CIO2STRM  ((cio2strm_t*) VEXABC38_C2S_CIO2STRM_BASE)
#define VEXABC39_C2S_CIO2STRM  ((cio2strm_t*) VEXABC39_C2S_CIO2STRM_BASE)

// ******************************************* /Address Space

#endif      // _CIO2STRM_H_

