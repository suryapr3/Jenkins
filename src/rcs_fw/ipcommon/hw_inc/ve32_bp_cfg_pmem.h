#ifndef _VE32_BP_CFG_PMEM_H_
#define _VE32_BP_CFG_PMEM_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define VEXABC0_PMEM_VE32_BP_CFG_BASE   ( 0x02808000 )
#define VEXABC1_PMEM_VE32_BP_CFG_BASE   ( 0x02848000 )
#define VEXABC2_PMEM_VE32_BP_CFG_BASE   ( 0x02888000 )
#define VEXABC3_PMEM_VE32_BP_CFG_BASE   ( 0x028c8000 )
#define VEXABC4_PMEM_VE32_BP_CFG_BASE   ( 0x02908000 )
#define VEXABC5_PMEM_VE32_BP_CFG_BASE   ( 0x02948000 )
#define VEXABC6_PMEM_VE32_BP_CFG_BASE   ( 0x02988000 )
#define VEXABC7_PMEM_VE32_BP_CFG_BASE   ( 0x029c8000 )
#define VEXABC8_PMEM_VE32_BP_CFG_BASE   ( 0x02a08000 )
#define VEXABC9_PMEM_VE32_BP_CFG_BASE   ( 0x02a48000 )
#define VEXABC10_PMEM_VE32_BP_CFG_BASE  ( 0x02a88000 )
#define VEXABC11_PMEM_VE32_BP_CFG_BASE  ( 0x02ac8000 )
#define VEXABC12_PMEM_VE32_BP_CFG_BASE  ( 0x02b08000 )
#define VEXABC13_PMEM_VE32_BP_CFG_BASE  ( 0x02b48000 )
#define VEXABC14_PMEM_VE32_BP_CFG_BASE  ( 0x02b88000 )
#define VEXABC15_PMEM_VE32_BP_CFG_BASE  ( 0x02bc8000 )
#define VEXABC16_PMEM_VE32_BP_CFG_BASE  ( 0x02c08000 )
#define VEXABC17_PMEM_VE32_BP_CFG_BASE  ( 0x02c48000 )
#define VEXABC18_PMEM_VE32_BP_CFG_BASE  ( 0x02c88000 )
#define VEXABC19_PMEM_VE32_BP_CFG_BASE  ( 0x02cc8000 )
#define VEXABC20_PMEM_VE32_BP_CFG_BASE  ( 0x02d08000 )
#define VEXABC21_PMEM_VE32_BP_CFG_BASE  ( 0x02d48000 )
#define VEXABC22_PMEM_VE32_BP_CFG_BASE  ( 0x02d88000 )
#define VEXABC23_PMEM_VE32_BP_CFG_BASE  ( 0x02dc8000 )
#define VEXABC24_PMEM_VE32_BP_CFG_BASE  ( 0x02e08000 )
#define VEXABC25_PMEM_VE32_BP_CFG_BASE  ( 0x02e48000 )
#define VEXABC26_PMEM_VE32_BP_CFG_BASE  ( 0x02e88000 )
#define VEXABC27_PMEM_VE32_BP_CFG_BASE  ( 0x02ec8000 )
#define VEXABC28_PMEM_VE32_BP_CFG_BASE  ( 0x02f08000 )
#define VEXABC29_PMEM_VE32_BP_CFG_BASE  ( 0x02f48000 )
#define VEXABC30_PMEM_VE32_BP_CFG_BASE  ( 0x02f88000 )
#define VEXABC31_PMEM_VE32_BP_CFG_BASE  ( 0x02fc8000 )
#define VEXABC32_PMEM_VE32_BP_CFG_BASE  ( 0x03008000 )
#define VEXABC33_PMEM_VE32_BP_CFG_BASE  ( 0x03048000 )
#define VEXABC34_PMEM_VE32_BP_CFG_BASE  ( 0x03088000 )
#define VEXABC35_PMEM_VE32_BP_CFG_BASE  ( 0x030c8000 )
#define VEXABC36_PMEM_VE32_BP_CFG_BASE  ( 0x03108000 )
#define VEXABC37_PMEM_VE32_BP_CFG_BASE  ( 0x03148000 )
#define VEXABC38_PMEM_VE32_BP_CFG_BASE  ( 0x03188000 )
#define VEXABC39_PMEM_VE32_BP_CFG_BASE  ( 0x031c8000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define VE32_BP_CFG_PMEM_FIRST_OFFSET ( 0x00000000U )
#define VE32_BP_CFG_PMEM_LAST_OFFSET ( 0x0000fffcU )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define VE32_BP_CFG_PMEM_FIRST_ADR(_BASE) (( ( _BASE ) + ( VE32_BP_CFG_PMEM_FIRST_OFFSET ) ))
#define VE32_BP_CFG_PMEM_LAST_ADR(_BASE) (( ( _BASE ) + ( VE32_BP_CFG_PMEM_LAST_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief VE32_BP_CONFIG_PMEM_MAP_MEM_VE32_BP_CONFIG_PMEM_MAP_VE32_BP_CONFIG_PMEM_FIRST register description at address offset 0x0
  *
  * Register default value:        0x00000000
  * Register full path in IP: ve32_bp_config_pmem_map_MEM/ve32_bp_config_pmem_map/ve32_bp_config_pmem_first
  * bp_config_pmem_word register.
  */

typedef union {
  struct {
    uint32_t PMEM_WORD : 32;
    ///< Program memory word.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} ve32_bp_cfg_pmem_first_reg_t;

#define VE32_BP_CFG_PMEM_FIRST_DEFAULT (0x00000000U)
#define VE32_BP_CFG_PMEM_FIRST_RD_MASK (0xffffffffU)
#define VE32_BP_CFG_PMEM_FIRST_WR_MASK (0xffffffffU)


///< Program memory word.
#define VE32_BP_CFG_PMEM_FIRST_WORD_BF_OFF ( 0)
#define VE32_BP_CFG_PMEM_FIRST_WORD_BF_WID (32)
#define VE32_BP_CFG_PMEM_FIRST_WORD_BF_MSK (0xFFFFFFFF)
#define VE32_BP_CFG_PMEM_FIRST_WORD_BF_DEF (0x00000000)


/** @brief VE32_BP_CONFIG_PMEM_MAP_MEM_VE32_BP_CONFIG_PMEM_MAP_VE32_BP_CONFIG_PMEM_LAST register description at address offset 0xfffc
  *
  * Register default value:        0x00000000
  * Register full path in IP: ve32_bp_config_pmem_map_MEM/ve32_bp_config_pmem_map/ve32_bp_config_pmem_last
  * bp_config_pmem_word register.
  */

typedef union {
  struct {
    uint32_t PMEM_WORD : 32;
    ///< Program memory word.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} ve32_bp_cfg_pmem_last_reg_t;

#define VE32_BP_CFG_PMEM_LAST_DEFAULT (0x00000000U)
#define VE32_BP_CFG_PMEM_LAST_RD_MASK (0xffffffffU)
#define VE32_BP_CFG_PMEM_LAST_WR_MASK (0xffffffffU)


///< Program memory word.
#define VE32_BP_CFG_PMEM_LAST_WORD_BF_OFF ( 0)
#define VE32_BP_CFG_PMEM_LAST_WORD_BF_WID (32)
#define VE32_BP_CFG_PMEM_LAST_WORD_BF_MSK (0xFFFFFFFF)
#define VE32_BP_CFG_PMEM_LAST_WORD_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define VE32_BP_CFG_PMEM_FIRST_REG(_BASE) ((ve32_bp_cfg_pmem_first_reg_t*) VE32_BP_CFG_PMEM_FIRST_ADR(_BASE))
#define VE32_BP_CFG_PMEM_LAST_REG(_BASE) ((ve32_bp_cfg_pmem_last_reg_t*) VE32_BP_CFG_PMEM_LAST_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    ve32_bp_cfg_pmem_first_reg_t VE32_BP_CFG_PMEM_FIRST; /*< Address offset = 0x0 */
    const uint8_t        reservedArea0 [65528]; /*< Address offset = 0x4 */
    ve32_bp_cfg_pmem_last_reg_t VE32_BP_CFG_PMEM_LAST; /*< Address offset = 0xfffc */
} ve32_bp_cfg_pmem_t;     // size: 0x0008

// AddressSpace struct pointer
//
#define VEXABC0_PMEM_VE32_BP_CFG   ((ve32_bp_cfg_pmem_t*) VEXABC0_PMEM_VE32_BP_CFG_BASE)
#define VEXABC1_PMEM_VE32_BP_CFG   ((ve32_bp_cfg_pmem_t*) VEXABC1_PMEM_VE32_BP_CFG_BASE)
#define VEXABC2_PMEM_VE32_BP_CFG   ((ve32_bp_cfg_pmem_t*) VEXABC2_PMEM_VE32_BP_CFG_BASE)
#define VEXABC3_PMEM_VE32_BP_CFG   ((ve32_bp_cfg_pmem_t*) VEXABC3_PMEM_VE32_BP_CFG_BASE)
#define VEXABC4_PMEM_VE32_BP_CFG   ((ve32_bp_cfg_pmem_t*) VEXABC4_PMEM_VE32_BP_CFG_BASE)
#define VEXABC5_PMEM_VE32_BP_CFG   ((ve32_bp_cfg_pmem_t*) VEXABC5_PMEM_VE32_BP_CFG_BASE)
#define VEXABC6_PMEM_VE32_BP_CFG   ((ve32_bp_cfg_pmem_t*) VEXABC6_PMEM_VE32_BP_CFG_BASE)
#define VEXABC7_PMEM_VE32_BP_CFG   ((ve32_bp_cfg_pmem_t*) VEXABC7_PMEM_VE32_BP_CFG_BASE)
#define VEXABC8_PMEM_VE32_BP_CFG   ((ve32_bp_cfg_pmem_t*) VEXABC8_PMEM_VE32_BP_CFG_BASE)
#define VEXABC9_PMEM_VE32_BP_CFG   ((ve32_bp_cfg_pmem_t*) VEXABC9_PMEM_VE32_BP_CFG_BASE)
#define VEXABC10_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC10_PMEM_VE32_BP_CFG_BASE)
#define VEXABC11_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC11_PMEM_VE32_BP_CFG_BASE)
#define VEXABC12_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC12_PMEM_VE32_BP_CFG_BASE)
#define VEXABC13_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC13_PMEM_VE32_BP_CFG_BASE)
#define VEXABC14_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC14_PMEM_VE32_BP_CFG_BASE)
#define VEXABC15_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC15_PMEM_VE32_BP_CFG_BASE)
#define VEXABC16_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC16_PMEM_VE32_BP_CFG_BASE)
#define VEXABC17_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC17_PMEM_VE32_BP_CFG_BASE)
#define VEXABC18_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC18_PMEM_VE32_BP_CFG_BASE)
#define VEXABC19_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC19_PMEM_VE32_BP_CFG_BASE)
#define VEXABC20_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC20_PMEM_VE32_BP_CFG_BASE)
#define VEXABC21_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC21_PMEM_VE32_BP_CFG_BASE)
#define VEXABC22_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC22_PMEM_VE32_BP_CFG_BASE)
#define VEXABC23_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC23_PMEM_VE32_BP_CFG_BASE)
#define VEXABC24_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC24_PMEM_VE32_BP_CFG_BASE)
#define VEXABC25_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC25_PMEM_VE32_BP_CFG_BASE)
#define VEXABC26_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC26_PMEM_VE32_BP_CFG_BASE)
#define VEXABC27_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC27_PMEM_VE32_BP_CFG_BASE)
#define VEXABC28_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC28_PMEM_VE32_BP_CFG_BASE)
#define VEXABC29_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC29_PMEM_VE32_BP_CFG_BASE)
#define VEXABC30_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC30_PMEM_VE32_BP_CFG_BASE)
#define VEXABC31_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC31_PMEM_VE32_BP_CFG_BASE)
#define VEXABC32_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC32_PMEM_VE32_BP_CFG_BASE)
#define VEXABC33_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC33_PMEM_VE32_BP_CFG_BASE)
#define VEXABC34_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC34_PMEM_VE32_BP_CFG_BASE)
#define VEXABC35_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC35_PMEM_VE32_BP_CFG_BASE)
#define VEXABC36_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC36_PMEM_VE32_BP_CFG_BASE)
#define VEXABC37_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC37_PMEM_VE32_BP_CFG_BASE)
#define VEXABC38_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC38_PMEM_VE32_BP_CFG_BASE)
#define VEXABC39_PMEM_VE32_BP_CFG  ((ve32_bp_cfg_pmem_t*) VEXABC39_PMEM_VE32_BP_CFG_BASE)

// ******************************************* /Address Space

#endif      // _VE32_BP_CFG_PMEM_H_

