#ifndef _STRM2CIO_H_
#define _STRM2CIO_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define VEXABC0_S2C_STRM2CIO_BASE   ( 0x02802000 )
#define VEXABC1_S2C_STRM2CIO_BASE   ( 0x02842000 )
#define VEXABC2_S2C_STRM2CIO_BASE   ( 0x02882000 )
#define VEXABC3_S2C_STRM2CIO_BASE   ( 0x028c2000 )
#define VEXABC4_S2C_STRM2CIO_BASE   ( 0x02902000 )
#define VEXABC5_S2C_STRM2CIO_BASE   ( 0x02942000 )
#define VEXABC6_S2C_STRM2CIO_BASE   ( 0x02982000 )
#define VEXABC7_S2C_STRM2CIO_BASE   ( 0x029c2000 )
#define VEXABC8_S2C_STRM2CIO_BASE   ( 0x02a02000 )
#define VEXABC9_S2C_STRM2CIO_BASE   ( 0x02a42000 )
#define VEXABC10_S2C_STRM2CIO_BASE  ( 0x02a82000 )
#define VEXABC11_S2C_STRM2CIO_BASE  ( 0x02ac2000 )
#define VEXABC12_S2C_STRM2CIO_BASE  ( 0x02b02000 )
#define VEXABC13_S2C_STRM2CIO_BASE  ( 0x02b42000 )
#define VEXABC14_S2C_STRM2CIO_BASE  ( 0x02b82000 )
#define VEXABC15_S2C_STRM2CIO_BASE  ( 0x02bc2000 )
#define VEXABC16_S2C_STRM2CIO_BASE  ( 0x02c02000 )
#define VEXABC17_S2C_STRM2CIO_BASE  ( 0x02c42000 )
#define VEXABC18_S2C_STRM2CIO_BASE  ( 0x02c82000 )
#define VEXABC19_S2C_STRM2CIO_BASE  ( 0x02cc2000 )
#define VEXABC20_S2C_STRM2CIO_BASE  ( 0x02d02000 )
#define VEXABC21_S2C_STRM2CIO_BASE  ( 0x02d42000 )
#define VEXABC22_S2C_STRM2CIO_BASE  ( 0x02d82000 )
#define VEXABC23_S2C_STRM2CIO_BASE  ( 0x02dc2000 )
#define VEXABC24_S2C_STRM2CIO_BASE  ( 0x02e02000 )
#define VEXABC25_S2C_STRM2CIO_BASE  ( 0x02e42000 )
#define VEXABC26_S2C_STRM2CIO_BASE  ( 0x02e82000 )
#define VEXABC27_S2C_STRM2CIO_BASE  ( 0x02ec2000 )
#define VEXABC28_S2C_STRM2CIO_BASE  ( 0x02f02000 )
#define VEXABC29_S2C_STRM2CIO_BASE  ( 0x02f42000 )
#define VEXABC30_S2C_STRM2CIO_BASE  ( 0x02f82000 )
#define VEXABC31_S2C_STRM2CIO_BASE  ( 0x02fc2000 )
#define VEXABC32_S2C_STRM2CIO_BASE  ( 0x03002000 )
#define VEXABC33_S2C_STRM2CIO_BASE  ( 0x03042000 )
#define VEXABC34_S2C_STRM2CIO_BASE  ( 0x03082000 )
#define VEXABC35_S2C_STRM2CIO_BASE  ( 0x030c2000 )
#define VEXABC36_S2C_STRM2CIO_BASE  ( 0x03102000 )
#define VEXABC37_S2C_STRM2CIO_BASE  ( 0x03142000 )
#define VEXABC38_S2C_STRM2CIO_BASE  ( 0x03182000 )
#define VEXABC39_S2C_STRM2CIO_BASE  ( 0x031c2000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define STRM2CIO_MEM_BAR_OFFSET ( 0x00000008U )
#define STRM2CIO_CREDIT_CNT_OFFSET ( 0x0000000cU )
#define STRM2CIO_FIFO_STAT_CTL_OFFSET ( 0x00000010U )
#define STRM2CIO_FIFO_STAT_OFFSET ( 0x00000014U )
#define STRM2CIO_CIO_STALL_CTL_OFFSET ( 0x00000018U )
#define STRM2CIO_CIO_STALL_CNT_OFFSET ( 0x0000001cU )
#define STRM2CIO_WORD_CNT_CTL_OFFSET ( 0x00000020U )
#define STRM2CIO_WORD_CNT_OFFSET ( 0x00000024U )
#define STRM2CIO_STRM_READY_FORCE_OFFSET ( 0x00000030U )
#define STRM2CIO_STOP_EN_OFFSET ( 0x00000034U )
#define STRM2CIO_INT_STAT_OFFSET ( 0x00000040U )
#define STRM2CIO_INT_EN_OFFSET ( 0x00000044U )
#define STRM2CIO_INT_CLR_OFFSET ( 0x00000048U )
#define STRM2CIO_INT_FORCE_OFFSET ( 0x0000004cU )
#define STRM2CIO_INT_MASKED_STAT_OFFSET ( 0x00000050U )
#define STRM2CIO_A2C_INT_STAT_OFFSET ( 0x00000060U )
#define STRM2CIO_A2C_INT_EN_OFFSET ( 0x00000064U )
#define STRM2CIO_A2C_INT_CLR_OFFSET ( 0x00000068U )
#define STRM2CIO_A2C_INT_FORCE_OFFSET ( 0x0000006cU )
#define STRM2CIO_A2C_INT_MASKED_STAT_OFFSET ( 0x00000070U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define STRM2CIO_MEM_BAR_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_MEM_BAR_OFFSET ) ))
#define STRM2CIO_CREDIT_CNT_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_CREDIT_CNT_OFFSET ) ))
#define STRM2CIO_FIFO_STAT_CTL_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_FIFO_STAT_CTL_OFFSET ) ))
#define STRM2CIO_FIFO_STAT_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_FIFO_STAT_OFFSET ) ))
#define STRM2CIO_CIO_STALL_CTL_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_CIO_STALL_CTL_OFFSET ) ))
#define STRM2CIO_CIO_STALL_CNT_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_CIO_STALL_CNT_OFFSET ) ))
#define STRM2CIO_WORD_CNT_CTL_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_WORD_CNT_CTL_OFFSET ) ))
#define STRM2CIO_WORD_CNT_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_WORD_CNT_OFFSET ) ))
#define STRM2CIO_STRM_READY_FORCE_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_STRM_READY_FORCE_OFFSET ) ))
#define STRM2CIO_STOP_EN_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_STOP_EN_OFFSET ) ))
#define STRM2CIO_INT_STAT_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_INT_STAT_OFFSET ) ))
#define STRM2CIO_INT_EN_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_INT_EN_OFFSET ) ))
#define STRM2CIO_INT_CLR_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_INT_CLR_OFFSET ) ))
#define STRM2CIO_INT_FORCE_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_INT_FORCE_OFFSET ) ))
#define STRM2CIO_INT_MASKED_STAT_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_INT_MASKED_STAT_OFFSET ) ))
#define STRM2CIO_A2C_INT_STAT_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_A2C_INT_STAT_OFFSET ) ))
#define STRM2CIO_A2C_INT_EN_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_A2C_INT_EN_OFFSET ) ))
#define STRM2CIO_A2C_INT_CLR_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_A2C_INT_CLR_OFFSET ) ))
#define STRM2CIO_A2C_INT_FORCE_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_A2C_INT_FORCE_OFFSET ) ))
#define STRM2CIO_A2C_INT_MASKED_STAT_ADR(_BASE) (( ( _BASE ) + ( STRM2CIO_A2C_INT_MASKED_STAT_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_MEM_BAR register description at address offset 0x8
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_mem_bar
  * strm2cio_mem_bar register.
  */

typedef union {
  struct {
    uint32_t MEM_BAR : 28;
    ///< This register contains the Memory Base Address Offset for a byte address.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_mem_bar_reg_t;

#define STRM2CIO_MEM_BAR_DEFAULT (0x00000000U)
#define STRM2CIO_MEM_BAR_RD_MASK (0x0fffffffU)
#define STRM2CIO_MEM_BAR_WR_MASK (0x0fffffffU)


///< This register contains the Memory Base Address Offset for a byte address.
#define STRM2CIO_MEM_BAR_MEM_BAR_BF_OFF ( 0)
#define STRM2CIO_MEM_BAR_MEM_BAR_BF_WID (28)
#define STRM2CIO_MEM_BAR_MEM_BAR_BF_MSK (0x0FFFFFFF)
#define STRM2CIO_MEM_BAR_MEM_BAR_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_CREDIT_COUNT register description at address offset 0xc
  *
  * Register default value:        0x00000008
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_credit_count
  * strm2cio_credit_count register.
  */

typedef union {
  struct {
    uint32_t CREDIT_COUNT : 4;
    ///< This register contains the Streaming Credit Counter.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x8"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_credit_cnt_reg_t;

#define STRM2CIO_CREDIT_CNT_DEFAULT (0x00000008U)
#define STRM2CIO_CREDIT_CNT_RD_MASK (0x0000000fU)
#define STRM2CIO_CREDIT_CNT_WR_MASK (0x00000000U)


///< This register contains the Streaming Credit Counter.
#define STRM2CIO_CREDIT_CNT_CREDIT_CNT_BF_OFF ( 0)
#define STRM2CIO_CREDIT_CNT_CREDIT_CNT_BF_WID ( 4)
#define STRM2CIO_CREDIT_CNT_CREDIT_CNT_BF_MSK (0x0000000F)
#define STRM2CIO_CREDIT_CNT_CREDIT_CNT_BF_DEF (0x00000008)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_FIFO_STATUS_CTL register description at address offset 0x10
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_fifo_status_ctl
  * strm2cio_fifo_status_ctl register.
  */

typedef union {
  struct {
    uint32_t FIFO_STATUS_ENABLE : 1;
    ///< This register contains the FIFO Status Enable.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FIFO_STATUS_STOP : 1;
    ///< This register contains the FIFO Status Stop.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t FIFO_STATUS_CLEAR : 1;
    ///< This register contains the FIFO Status Clear (Write Only).
    ///< AccessType="WO" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_fifo_stat_ctl_reg_t;

#define STRM2CIO_FIFO_STAT_CTL_DEFAULT (0x00000000U)
#define STRM2CIO_FIFO_STAT_CTL_RD_MASK (0x00000003U)
#define STRM2CIO_FIFO_STAT_CTL_WR_MASK (0x00000007U)


///< This register contains the FIFO Status Enable.
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_EN_BF_OFF ( 0)
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_EN_BF_WID ( 1)
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_EN_BF_MSK (0x00000001)
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_EN_BF_DEF (0x00000000)

///< This register contains the FIFO Status Stop.
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_STOP_BF_OFF ( 1)
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_STOP_BF_WID ( 1)
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_STOP_BF_MSK (0x00000002)
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_STOP_BF_DEF (0x00000000)

///< This register contains the FIFO Status Clear (Write Only).
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_CLR_BF_OFF ( 2)
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_CLR_BF_WID ( 1)
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_CLR_BF_MSK (0x00000004)
#define STRM2CIO_FIFO_STAT_CTL_FIFO_STAT_CLR_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_FIFO_STATUS register description at address offset 0x14
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_fifo_status
  * strm2cio_fifo_status register.
  */

typedef union {
  struct {
    uint32_t FIFO_STATUS : 4;
    ///< This register contains the Maximum FIFO Depth Encountered.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t FIFO_UNDERFLOW : 1;
    ///< This register contains the FIFO Underflow Flag.
    ///< AccessType="RO/V" BitOffset="4" ResetValue="0x0"
    uint32_t FIFO_OVERFLOW : 1;
    ///< This register contains the FIFO Overflow Flag.
    ///< AccessType="RO/V" BitOffset="5" ResetValue="0x0"
    uint32_t DATA_TYPE_ERR : 1;
    ///< This register contains the Data Type Error Flag.
    ///< AccessType="RO/V" BitOffset="6" ResetValue="0x0"
    uint32_t  : 25;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_fifo_stat_reg_t;

#define STRM2CIO_FIFO_STAT_DEFAULT (0x00000000U)
#define STRM2CIO_FIFO_STAT_RD_MASK (0x0000007fU)
#define STRM2CIO_FIFO_STAT_WR_MASK (0x00000000U)


///< This register contains the Maximum FIFO Depth Encountered.
#define STRM2CIO_FIFO_STAT_FIFO_STAT_BF_OFF ( 0)
#define STRM2CIO_FIFO_STAT_FIFO_STAT_BF_WID ( 4)
#define STRM2CIO_FIFO_STAT_FIFO_STAT_BF_MSK (0x0000000F)
#define STRM2CIO_FIFO_STAT_FIFO_STAT_BF_DEF (0x00000000)

///< This register contains the FIFO Underflow Flag.
#define STRM2CIO_FIFO_STAT_FIFO_UNDERFLOW_BF_OFF ( 4)
#define STRM2CIO_FIFO_STAT_FIFO_UNDERFLOW_BF_WID ( 1)
#define STRM2CIO_FIFO_STAT_FIFO_UNDERFLOW_BF_MSK (0x00000010)
#define STRM2CIO_FIFO_STAT_FIFO_UNDERFLOW_BF_DEF (0x00000000)

///< This register contains the FIFO Overflow Flag.
#define STRM2CIO_FIFO_STAT_FIFO_OVERFLOW_BF_OFF ( 5)
#define STRM2CIO_FIFO_STAT_FIFO_OVERFLOW_BF_WID ( 1)
#define STRM2CIO_FIFO_STAT_FIFO_OVERFLOW_BF_MSK (0x00000020)
#define STRM2CIO_FIFO_STAT_FIFO_OVERFLOW_BF_DEF (0x00000000)

///< This register contains the Data Type Error Flag.
#define STRM2CIO_FIFO_STAT_DATA_TYPE_ERR_BF_OFF ( 6)
#define STRM2CIO_FIFO_STAT_DATA_TYPE_ERR_BF_WID ( 1)
#define STRM2CIO_FIFO_STAT_DATA_TYPE_ERR_BF_MSK (0x00000040)
#define STRM2CIO_FIFO_STAT_DATA_TYPE_ERR_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_CIO_STALL_CTL register description at address offset 0x18
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_cio_stall_ctl
  * strm2cio_cio_stall_ctl register.
  */

typedef union {
  struct {
    uint32_t CIO_STALL_ENABLE : 1;
    ///< This register contains the CIO Stall Counter Enable.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t CIO_STALL_STOP : 1;
    ///< This register contains the CIO Stall Counter Stop.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t CIO_STALL_CLEAR : 1;
    ///< This register contains the CIO Stall Counter Clear (Write Only).
    ///< AccessType="WO" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_cio_stall_ctl_reg_t;

#define STRM2CIO_CIO_STALL_CTL_DEFAULT (0x00000000U)
#define STRM2CIO_CIO_STALL_CTL_RD_MASK (0x00000003U)
#define STRM2CIO_CIO_STALL_CTL_WR_MASK (0x00000007U)


///< This register contains the CIO Stall Counter Enable.
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_EN_BF_OFF ( 0)
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_EN_BF_WID ( 1)
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_EN_BF_MSK (0x00000001)
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_EN_BF_DEF (0x00000000)

///< This register contains the CIO Stall Counter Stop.
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_STOP_BF_OFF ( 1)
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_STOP_BF_WID ( 1)
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_STOP_BF_MSK (0x00000002)
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_STOP_BF_DEF (0x00000000)

///< This register contains the CIO Stall Counter Clear (Write Only).
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_CLR_BF_OFF ( 2)
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_CLR_BF_WID ( 1)
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_CLR_BF_MSK (0x00000004)
#define STRM2CIO_CIO_STALL_CTL_CIO_STALL_CLR_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_CIO_STALL_CNT register description at address offset 0x1c
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_cio_stall_cnt
  * strm2cio_cio_stall_cnt register.
  */

typedef union {
  struct {
    uint32_t CIO_STALL : 24;
    ///< This register contains the total amount of time the CIO Interface
    ///< has Stalled.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t MAX_STALL : 8;
    ///< This register contains the Maximum single time the CIO INterface has
    ///< Stall.
    ///< AccessType="RO/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} strm2cio_cio_stall_cnt_reg_t;

#define STRM2CIO_CIO_STALL_CNT_DEFAULT (0x00000000U)
#define STRM2CIO_CIO_STALL_CNT_RD_MASK (0xffffffffU)
#define STRM2CIO_CIO_STALL_CNT_WR_MASK (0x00000000U)


///< This register contains the total amount of time the CIO Interface
///< has Stalled.
#define STRM2CIO_CIO_STALL_CNT_CIO_STALL_BF_OFF ( 0)
#define STRM2CIO_CIO_STALL_CNT_CIO_STALL_BF_WID (24)
#define STRM2CIO_CIO_STALL_CNT_CIO_STALL_BF_MSK (0x00FFFFFF)
#define STRM2CIO_CIO_STALL_CNT_CIO_STALL_BF_DEF (0x00000000)

///< This register contains the Maximum single time the CIO INterface has
///< Stall.
#define STRM2CIO_CIO_STALL_CNT_MAX_STALL_BF_OFF (24)
#define STRM2CIO_CIO_STALL_CNT_MAX_STALL_BF_WID ( 8)
#define STRM2CIO_CIO_STALL_CNT_MAX_STALL_BF_MSK (0xFF000000)
#define STRM2CIO_CIO_STALL_CNT_MAX_STALL_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_WORD_CNT_CTL register description at address offset 0x20
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_word_cnt_ctl
  * strm2cio_word_cnt_ctl register.
  */

typedef union {
  struct {
    uint32_t WORD_CNT_ENABLE : 1;
    ///< This register contains the Word Counter Enable.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WORD_CNT_STOP : 1;
    ///< This register contains the Word Counter Stop.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t WORD_CNT_CLEAR : 1;
    ///< This register contains the Word Counter Clear (Write Only).
    ///< AccessType="WO" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_word_cnt_ctl_reg_t;

#define STRM2CIO_WORD_CNT_CTL_DEFAULT (0x00000000U)
#define STRM2CIO_WORD_CNT_CTL_RD_MASK (0x00000003U)
#define STRM2CIO_WORD_CNT_CTL_WR_MASK (0x00000007U)


///< This register contains the Word Counter Enable.
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_EN_BF_OFF ( 0)
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_EN_BF_WID ( 1)
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_EN_BF_MSK (0x00000001)
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_EN_BF_DEF (0x00000000)

///< This register contains the Word Counter Stop.
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_STOP_BF_OFF ( 1)
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_STOP_BF_WID ( 1)
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_STOP_BF_MSK (0x00000002)
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_STOP_BF_DEF (0x00000000)

///< This register contains the Word Counter Clear (Write Only).
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_CLR_BF_OFF ( 2)
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_CLR_BF_WID ( 1)
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_CLR_BF_MSK (0x00000004)
#define STRM2CIO_WORD_CNT_CTL_WORD_CNT_CLR_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_WORD_CNT register description at address offset 0x24
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_word_cnt
  * strm2cio_word_cnt register.
  */

typedef union {
  struct {
    uint32_t WORD_CNT : 32;
    ///< This register contains the Maximum FIFO Depth Encountered.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} strm2cio_word_cnt_reg_t;

#define STRM2CIO_WORD_CNT_DEFAULT (0x00000000U)
#define STRM2CIO_WORD_CNT_RD_MASK (0xffffffffU)
#define STRM2CIO_WORD_CNT_WR_MASK (0x00000000U)


///< This register contains the Maximum FIFO Depth Encountered.
#define STRM2CIO_WORD_CNT_WORD_CNT_BF_OFF ( 0)
#define STRM2CIO_WORD_CNT_WORD_CNT_BF_WID (32)
#define STRM2CIO_WORD_CNT_WORD_CNT_BF_MSK (0xFFFFFFFF)
#define STRM2CIO_WORD_CNT_WORD_CNT_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_STRM_READY_FORCE register description at address offset 0x30
  *
  * Register default value:        0x00000001
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_strm_ready_force
  * strm2cio_strm_ready_force register.
  */

typedef union {
  struct {
    uint32_t STRM_READY_FORCE : 1;
    ///< This register contains the Streaming Ready Force (1 = Force Ready
    ///< (default), 0 = NO Force).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x1"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_strm_ready_force_reg_t;

#define STRM2CIO_STRM_READY_FORCE_DEFAULT (0x00000001U)
#define STRM2CIO_STRM_READY_FORCE_RD_MASK (0x00000001U)
#define STRM2CIO_STRM_READY_FORCE_WR_MASK (0x00000001U)


///< This register contains the Streaming Ready Force (1 = Force Ready
///< (default), 0 = NO Force).
#define STRM2CIO_STRM_READY_FORCE_STRM_READY_FORCE_BF_OFF ( 0)
#define STRM2CIO_STRM_READY_FORCE_STRM_READY_FORCE_BF_WID ( 1)
#define STRM2CIO_STRM_READY_FORCE_STRM_READY_FORCE_BF_MSK (0x00000001)
#define STRM2CIO_STRM_READY_FORCE_STRM_READY_FORCE_BF_DEF (0x00000001)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_STOP_ENABLE register description at address offset 0x34
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_stop_enable
  * strm2cio_stop_enable register.
  */

typedef union {
  struct {
    uint32_t STOP_ENABLE : 1;
    ///< This register contains the CTI Stop Enable (1 = enable, 0 = disable
    ///< (default)).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t START_ENABLE : 1;
    ///< This register contains the CTI Re-Start Enable (1 = enable, 0 = disable
    ///< (default)).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_stop_en_reg_t;

#define STRM2CIO_STOP_EN_DEFAULT (0x00000000U)
#define STRM2CIO_STOP_EN_RD_MASK (0x00000003U)
#define STRM2CIO_STOP_EN_WR_MASK (0x00000003U)


///< This register contains the CTI Stop Enable (1 = enable, 0 = disable
///< (default)).
#define STRM2CIO_STOP_EN_STOP_EN_BF_OFF ( 0)
#define STRM2CIO_STOP_EN_STOP_EN_BF_WID ( 1)
#define STRM2CIO_STOP_EN_STOP_EN_BF_MSK (0x00000001)
#define STRM2CIO_STOP_EN_STOP_EN_BF_DEF (0x00000000)

///< This register contains the CTI Re-Start Enable (1 = enable, 0 = disable
///< (default)).
#define STRM2CIO_STOP_EN_START_EN_BF_OFF ( 1)
#define STRM2CIO_STOP_EN_START_EN_BF_WID ( 1)
#define STRM2CIO_STOP_EN_START_EN_BF_MSK (0x00000002)
#define STRM2CIO_STOP_EN_START_EN_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_INT_STATUS register description at address offset 0x40
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_int_status
  * strm2cio_int_status register.
  */

typedef union {
  struct {
    uint32_t UNDERFLOW_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for Streaming FIFO
    ///< Underflow (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t OVERFLOW_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for Streaming FIFO
    ///< Overflow (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="1" ResetValue="0x0"
    uint32_t PROTOCOL_SOP_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for CIO Protocol SOP
    ///< Error (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="2" ResetValue="0x0"
    uint32_t PROTOCOL_EOP_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for CIO Protocol EOP
    ///< Error (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="3" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_int_stat_reg_t;

#define STRM2CIO_INT_STAT_DEFAULT (0x00000000U)
#define STRM2CIO_INT_STAT_RD_MASK (0x0000000fU)
#define STRM2CIO_INT_STAT_WR_MASK (0x00000000U)


///< This register contains the Interrupt RAW Status for Streaming FIFO
///< Underflow (1 = active, 0 = inactive).
#define STRM2CIO_INT_STAT_UNDERFLOW_INT_STAT_BF_OFF ( 0)
#define STRM2CIO_INT_STAT_UNDERFLOW_INT_STAT_BF_WID ( 1)
#define STRM2CIO_INT_STAT_UNDERFLOW_INT_STAT_BF_MSK (0x00000001)
#define STRM2CIO_INT_STAT_UNDERFLOW_INT_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt RAW Status for Streaming FIFO
///< Overflow (1 = active, 0 = inactive).
#define STRM2CIO_INT_STAT_OVERFLOW_INT_STAT_BF_OFF ( 1)
#define STRM2CIO_INT_STAT_OVERFLOW_INT_STAT_BF_WID ( 1)
#define STRM2CIO_INT_STAT_OVERFLOW_INT_STAT_BF_MSK (0x00000002)
#define STRM2CIO_INT_STAT_OVERFLOW_INT_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt RAW Status for CIO Protocol SOP
///< Error (1 = active, 0 = inactive).
#define STRM2CIO_INT_STAT_PROTOCOL_SOP_INT_STAT_BF_OFF ( 2)
#define STRM2CIO_INT_STAT_PROTOCOL_SOP_INT_STAT_BF_WID ( 1)
#define STRM2CIO_INT_STAT_PROTOCOL_SOP_INT_STAT_BF_MSK (0x00000004)
#define STRM2CIO_INT_STAT_PROTOCOL_SOP_INT_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt RAW Status for CIO Protocol EOP
///< Error (1 = active, 0 = inactive).
#define STRM2CIO_INT_STAT_PROTOCOL_EOP_INT_STAT_BF_OFF ( 3)
#define STRM2CIO_INT_STAT_PROTOCOL_EOP_INT_STAT_BF_WID ( 1)
#define STRM2CIO_INT_STAT_PROTOCOL_EOP_INT_STAT_BF_MSK (0x00000008)
#define STRM2CIO_INT_STAT_PROTOCOL_EOP_INT_STAT_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_INT_ENABLE register description at address offset 0x44
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_int_enable
  * strm2cio_int_enable register.
  */

typedef union {
  struct {
    uint32_t UNDERFLOW_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for Streaming FIFO Underflow
    ///< (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t OVERFLOW_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for Streaming FIFO Overflow
    ///< (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t PROTOCOL_SOP_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for CIO Protocol SOP Error
    ///< (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t PROTOCOL_EOP_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for CIO Protocol EOP Error
    ///< (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_int_en_reg_t;

#define STRM2CIO_INT_EN_DEFAULT (0x00000000U)
#define STRM2CIO_INT_EN_RD_MASK (0x0000000fU)
#define STRM2CIO_INT_EN_WR_MASK (0x0000000fU)


///< This register contains the Interrupt Enable for Streaming FIFO Underflow
///< (1 = enable, 0 = disable).
#define STRM2CIO_INT_EN_UNDERFLOW_INT_EN_BF_OFF ( 0)
#define STRM2CIO_INT_EN_UNDERFLOW_INT_EN_BF_WID ( 1)
#define STRM2CIO_INT_EN_UNDERFLOW_INT_EN_BF_MSK (0x00000001)
#define STRM2CIO_INT_EN_UNDERFLOW_INT_EN_BF_DEF (0x00000000)

///< This register contains the Interrupt Enable for Streaming FIFO Overflow
///< (1 = enable, 0 = disable).
#define STRM2CIO_INT_EN_OVERFLOW_INT_EN_BF_OFF ( 1)
#define STRM2CIO_INT_EN_OVERFLOW_INT_EN_BF_WID ( 1)
#define STRM2CIO_INT_EN_OVERFLOW_INT_EN_BF_MSK (0x00000002)
#define STRM2CIO_INT_EN_OVERFLOW_INT_EN_BF_DEF (0x00000000)

///< This register contains the Interrupt Enable for CIO Protocol SOP Error
///< (1 = enable, 0 = disable).
#define STRM2CIO_INT_EN_PROTOCOL_SOP_INT_EN_BF_OFF ( 2)
#define STRM2CIO_INT_EN_PROTOCOL_SOP_INT_EN_BF_WID ( 1)
#define STRM2CIO_INT_EN_PROTOCOL_SOP_INT_EN_BF_MSK (0x00000004)
#define STRM2CIO_INT_EN_PROTOCOL_SOP_INT_EN_BF_DEF (0x00000000)

///< This register contains the Interrupt Enable for CIO Protocol EOP Error
///< (1 = enable, 0 = disable).
#define STRM2CIO_INT_EN_PROTOCOL_EOP_INT_EN_BF_OFF ( 3)
#define STRM2CIO_INT_EN_PROTOCOL_EOP_INT_EN_BF_WID ( 1)
#define STRM2CIO_INT_EN_PROTOCOL_EOP_INT_EN_BF_MSK (0x00000008)
#define STRM2CIO_INT_EN_PROTOCOL_EOP_INT_EN_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_INT_CLEAR register description at address offset 0x48
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_int_clear
  * strm2cio_int_clear register.
  */

typedef union {
  struct {
    uint32_t UNDERFLOW_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for Streaming FIFO Underflow
    ///< (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t OVERFLOW_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for Streaming FIFO Overflow
    ///< (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t PROTOCOL_SOP_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for CIO Protocol SOP Error
    ///< (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t PROTOCOL_EOP_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for CIO Protocol EOP Error
    ///< (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_int_clr_reg_t;

#define STRM2CIO_INT_CLR_DEFAULT (0x00000000U)
#define STRM2CIO_INT_CLR_RD_MASK (0x0000000fU)
#define STRM2CIO_INT_CLR_WR_MASK (0x0000000fU)


///< This register contains the Interrupt Clear for Streaming FIFO Underflow
///< (1 = clear, 0 = no action).
#define STRM2CIO_INT_CLR_UNDERFLOW_INT_CLR_BF_OFF ( 0)
#define STRM2CIO_INT_CLR_UNDERFLOW_INT_CLR_BF_WID ( 1)
#define STRM2CIO_INT_CLR_UNDERFLOW_INT_CLR_BF_MSK (0x00000001)
#define STRM2CIO_INT_CLR_UNDERFLOW_INT_CLR_BF_DEF (0x00000000)

///< This register contains the Interrupt Clear for Streaming FIFO Overflow
///< (1 = clear, 0 = no action).
#define STRM2CIO_INT_CLR_OVERFLOW_INT_CLR_BF_OFF ( 1)
#define STRM2CIO_INT_CLR_OVERFLOW_INT_CLR_BF_WID ( 1)
#define STRM2CIO_INT_CLR_OVERFLOW_INT_CLR_BF_MSK (0x00000002)
#define STRM2CIO_INT_CLR_OVERFLOW_INT_CLR_BF_DEF (0x00000000)

///< This register contains the Interrupt Clear for CIO Protocol SOP Error
///< (1 = clear, 0 = no action).
#define STRM2CIO_INT_CLR_PROTOCOL_SOP_INT_CLR_BF_OFF ( 2)
#define STRM2CIO_INT_CLR_PROTOCOL_SOP_INT_CLR_BF_WID ( 1)
#define STRM2CIO_INT_CLR_PROTOCOL_SOP_INT_CLR_BF_MSK (0x00000004)
#define STRM2CIO_INT_CLR_PROTOCOL_SOP_INT_CLR_BF_DEF (0x00000000)

///< This register contains the Interrupt Clear for CIO Protocol EOP Error
///< (1 = clear, 0 = no action).
#define STRM2CIO_INT_CLR_PROTOCOL_EOP_INT_CLR_BF_OFF ( 3)
#define STRM2CIO_INT_CLR_PROTOCOL_EOP_INT_CLR_BF_WID ( 1)
#define STRM2CIO_INT_CLR_PROTOCOL_EOP_INT_CLR_BF_MSK (0x00000008)
#define STRM2CIO_INT_CLR_PROTOCOL_EOP_INT_CLR_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_INT_FORCE register description at address offset 0x4c
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_int_force
  * strm2cio_int_force register.
  */

typedef union {
  struct {
    uint32_t UNDERFLOW_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for Streaming FIFO Underflow
    ///< (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t OVERFLOW_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for Streaming FIFO Overflow
    ///< (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t PROTOCOL_SOP_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for CIO Protocol SOP Error
    ///< (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t PROTOCOL_EOP_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for CIO Protocol EOP Error
    ///< (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_int_force_reg_t;

#define STRM2CIO_INT_FORCE_DEFAULT (0x00000000U)
#define STRM2CIO_INT_FORCE_RD_MASK (0x0000000fU)
#define STRM2CIO_INT_FORCE_WR_MASK (0x0000000fU)


///< This register contains the Interrupt Force for Streaming FIFO Underflow
///< (1 = force, 0 = no action).
#define STRM2CIO_INT_FORCE_UNDERFLOW_INT_FORCE_BF_OFF ( 0)
#define STRM2CIO_INT_FORCE_UNDERFLOW_INT_FORCE_BF_WID ( 1)
#define STRM2CIO_INT_FORCE_UNDERFLOW_INT_FORCE_BF_MSK (0x00000001)
#define STRM2CIO_INT_FORCE_UNDERFLOW_INT_FORCE_BF_DEF (0x00000000)

///< This register contains the Interrupt Force for Streaming FIFO Overflow
///< (1 = force, 0 = no action).
#define STRM2CIO_INT_FORCE_OVERFLOW_INT_FORCE_BF_OFF ( 1)
#define STRM2CIO_INT_FORCE_OVERFLOW_INT_FORCE_BF_WID ( 1)
#define STRM2CIO_INT_FORCE_OVERFLOW_INT_FORCE_BF_MSK (0x00000002)
#define STRM2CIO_INT_FORCE_OVERFLOW_INT_FORCE_BF_DEF (0x00000000)

///< This register contains the Interrupt Force for CIO Protocol SOP Error
///< (1 = force, 0 = no action).
#define STRM2CIO_INT_FORCE_PROTOCOL_SOP_INT_FORCE_BF_OFF ( 2)
#define STRM2CIO_INT_FORCE_PROTOCOL_SOP_INT_FORCE_BF_WID ( 1)
#define STRM2CIO_INT_FORCE_PROTOCOL_SOP_INT_FORCE_BF_MSK (0x00000004)
#define STRM2CIO_INT_FORCE_PROTOCOL_SOP_INT_FORCE_BF_DEF (0x00000000)

///< This register contains the Interrupt Force for CIO Protocol EOP Error
///< (1 = force, 0 = no action).
#define STRM2CIO_INT_FORCE_PROTOCOL_EOP_INT_FORCE_BF_OFF ( 3)
#define STRM2CIO_INT_FORCE_PROTOCOL_EOP_INT_FORCE_BF_WID ( 1)
#define STRM2CIO_INT_FORCE_PROTOCOL_EOP_INT_FORCE_BF_MSK (0x00000008)
#define STRM2CIO_INT_FORCE_PROTOCOL_EOP_INT_FORCE_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_INT_MASKED_STAT register description at address offset 0x50
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_int_masked_stat
  * strm2cio_int_masked_stat register.
  */

typedef union {
  struct {
    uint32_t UNDERFLOW_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Masked Status for Streaming FIFO
    ///< Underflow (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t OVERFLOW_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Masked Status for Streaming FIFO
    ///< Overflow (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="1" ResetValue="0x0"
    uint32_t PROTOCOL_SOP_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Masked Status for CIO Protocol
    ///< SOP Error (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="2" ResetValue="0x0"
    uint32_t PROTOCOL_EOP_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Masked Status for CIO Protocol
    ///< EOP Error (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="3" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_int_masked_stat_reg_t;

#define STRM2CIO_INT_MASKED_STAT_DEFAULT (0x00000000U)
#define STRM2CIO_INT_MASKED_STAT_RD_MASK (0x0000000fU)
#define STRM2CIO_INT_MASKED_STAT_WR_MASK (0x00000000U)


///< This register contains the Interrupt Masked Status for Streaming FIFO
///< Underflow (1 = active, 0 = inactive).
#define STRM2CIO_INT_MASKED_STAT_UNDERFLOW_INT_MASKED_STAT_BF_OFF ( 0)
#define STRM2CIO_INT_MASKED_STAT_UNDERFLOW_INT_MASKED_STAT_BF_WID ( 1)
#define STRM2CIO_INT_MASKED_STAT_UNDERFLOW_INT_MASKED_STAT_BF_MSK (0x00000001)
#define STRM2CIO_INT_MASKED_STAT_UNDERFLOW_INT_MASKED_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt Masked Status for Streaming FIFO
///< Overflow (1 = active, 0 = inactive).
#define STRM2CIO_INT_MASKED_STAT_OVERFLOW_INT_MASKED_STAT_BF_OFF ( 1)
#define STRM2CIO_INT_MASKED_STAT_OVERFLOW_INT_MASKED_STAT_BF_WID ( 1)
#define STRM2CIO_INT_MASKED_STAT_OVERFLOW_INT_MASKED_STAT_BF_MSK (0x00000002)
#define STRM2CIO_INT_MASKED_STAT_OVERFLOW_INT_MASKED_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt Masked Status for CIO Protocol
///< SOP Error (1 = active, 0 = inactive).
#define STRM2CIO_INT_MASKED_STAT_PROTOCOL_SOP_INT_MASKED_STAT_BF_OFF ( 2)
#define STRM2CIO_INT_MASKED_STAT_PROTOCOL_SOP_INT_MASKED_STAT_BF_WID ( 1)
#define STRM2CIO_INT_MASKED_STAT_PROTOCOL_SOP_INT_MASKED_STAT_BF_MSK (0x00000004)
#define STRM2CIO_INT_MASKED_STAT_PROTOCOL_SOP_INT_MASKED_STAT_BF_DEF (0x00000000)

///< This register contains the Interrupt Masked Status for CIO Protocol
///< EOP Error (1 = active, 0 = inactive).
#define STRM2CIO_INT_MASKED_STAT_PROTOCOL_EOP_INT_MASKED_STAT_BF_OFF ( 3)
#define STRM2CIO_INT_MASKED_STAT_PROTOCOL_EOP_INT_MASKED_STAT_BF_WID ( 1)
#define STRM2CIO_INT_MASKED_STAT_PROTOCOL_EOP_INT_MASKED_STAT_BF_MSK (0x00000008)
#define STRM2CIO_INT_MASKED_STAT_PROTOCOL_EOP_INT_MASKED_STAT_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_A2C_INT_STATUS register description at address offset 0x60
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_a2c_int_status
  * strm2cio_a2c_int_status register.
  */

typedef union {
  struct {
    uint32_t A2C_INT_STATUS : 1;
    ///< This register contains the Interrupt RAW Status for the AXI2CIO Interrupt
    ///< (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_a2c_int_stat_reg_t;

#define STRM2CIO_A2C_INT_STAT_DEFAULT (0x00000000U)
#define STRM2CIO_A2C_INT_STAT_RD_MASK (0x00000001U)
#define STRM2CIO_A2C_INT_STAT_WR_MASK (0x00000000U)


///< This register contains the Interrupt RAW Status for the AXI2CIO Interrupt
///< (1 = active, 0 = inactive).
#define STRM2CIO_A2C_INT_STAT_A2C_INT_STAT_BF_OFF ( 0)
#define STRM2CIO_A2C_INT_STAT_A2C_INT_STAT_BF_WID ( 1)
#define STRM2CIO_A2C_INT_STAT_A2C_INT_STAT_BF_MSK (0x00000001)
#define STRM2CIO_A2C_INT_STAT_A2C_INT_STAT_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_A2C_INT_ENABLE register description at address offset 0x64
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_a2c_int_enable
  * strm2cio_a2c_int_enable register.
  */

typedef union {
  struct {
    uint32_t A2C_INT_ENABLE : 1;
    ///< This register contains the Interrupt Enable for the AXI2CIO Interrupt
    ///< (1 = enable, 0 = disable).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_a2c_int_en_reg_t;

#define STRM2CIO_A2C_INT_EN_DEFAULT (0x00000000U)
#define STRM2CIO_A2C_INT_EN_RD_MASK (0x00000001U)
#define STRM2CIO_A2C_INT_EN_WR_MASK (0x00000001U)


///< This register contains the Interrupt Enable for the AXI2CIO Interrupt
///< (1 = enable, 0 = disable).
#define STRM2CIO_A2C_INT_EN_A2C_INT_EN_BF_OFF ( 0)
#define STRM2CIO_A2C_INT_EN_A2C_INT_EN_BF_WID ( 1)
#define STRM2CIO_A2C_INT_EN_A2C_INT_EN_BF_MSK (0x00000001)
#define STRM2CIO_A2C_INT_EN_A2C_INT_EN_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_A2C_INT_CLEAR register description at address offset 0x68
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_a2c_int_clear
  * strm2cio_a2c_int_clear register.
  */

typedef union {
  struct {
    uint32_t A2C_INT_CLEAR : 1;
    ///< This register contains the Interrupt Clear for the AXI2CIO Interrupt
    ///< (1 = clear, 0 = no action).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_a2c_int_clr_reg_t;

#define STRM2CIO_A2C_INT_CLR_DEFAULT (0x00000000U)
#define STRM2CIO_A2C_INT_CLR_RD_MASK (0x00000001U)
#define STRM2CIO_A2C_INT_CLR_WR_MASK (0x00000001U)


///< This register contains the Interrupt Clear for the AXI2CIO Interrupt
///< (1 = clear, 0 = no action).
#define STRM2CIO_A2C_INT_CLR_A2C_INT_CLR_BF_OFF ( 0)
#define STRM2CIO_A2C_INT_CLR_A2C_INT_CLR_BF_WID ( 1)
#define STRM2CIO_A2C_INT_CLR_A2C_INT_CLR_BF_MSK (0x00000001)
#define STRM2CIO_A2C_INT_CLR_A2C_INT_CLR_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_A2C_INT_FORCE register description at address offset 0x6c
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_a2c_int_force
  * strm2cio_a2c_int_force register.
  */

typedef union {
  struct {
    uint32_t A2C_INT_FORCE : 1;
    ///< This register contains the Interrupt Force for the AXI2CIO Interrupt
    ///< (1 = force, 0 = no action).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_a2c_int_force_reg_t;

#define STRM2CIO_A2C_INT_FORCE_DEFAULT (0x00000000U)
#define STRM2CIO_A2C_INT_FORCE_RD_MASK (0x00000001U)
#define STRM2CIO_A2C_INT_FORCE_WR_MASK (0x00000001U)


///< This register contains the Interrupt Force for the AXI2CIO Interrupt
///< (1 = force, 0 = no action).
#define STRM2CIO_A2C_INT_FORCE_A2C_INT_FORCE_BF_OFF ( 0)
#define STRM2CIO_A2C_INT_FORCE_A2C_INT_FORCE_BF_WID ( 1)
#define STRM2CIO_A2C_INT_FORCE_A2C_INT_FORCE_BF_MSK (0x00000001)
#define STRM2CIO_A2C_INT_FORCE_A2C_INT_FORCE_BF_DEF (0x00000000)


/** @brief STRM2CIO_REG_MAP_MEM_STRM2CIO_REG_MAP_STRM2CIO_A2C_INT_MASKED_STAT register description at address offset 0x70
  *
  * Register default value:        0x00000000
  * Register full path in IP: strm2cio_reg_map_MEM/strm2cio_reg_map/strm2cio_a2c_int_masked_stat
  * strm2cio_a2c_int_masked_stat register.
  */

typedef union {
  struct {
    uint32_t A2C_INT_MASKED_STAT : 1;
    ///< This register contains the Interrupt Masked Status for the AXI2CIO
    ///< Interrupt (1 = active, 0 = inactive).
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} strm2cio_a2c_int_masked_stat_reg_t;

#define STRM2CIO_A2C_INT_MASKED_STAT_DEFAULT (0x00000000U)
#define STRM2CIO_A2C_INT_MASKED_STAT_RD_MASK (0x00000001U)
#define STRM2CIO_A2C_INT_MASKED_STAT_WR_MASK (0x00000000U)


///< This register contains the Interrupt Masked Status for the AXI2CIO
///< Interrupt (1 = active, 0 = inactive).
#define STRM2CIO_A2C_INT_MASKED_STAT_A2C_INT_MASKED_STAT_BF_OFF ( 0)
#define STRM2CIO_A2C_INT_MASKED_STAT_A2C_INT_MASKED_STAT_BF_WID ( 1)
#define STRM2CIO_A2C_INT_MASKED_STAT_A2C_INT_MASKED_STAT_BF_MSK (0x00000001)
#define STRM2CIO_A2C_INT_MASKED_STAT_A2C_INT_MASKED_STAT_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define STRM2CIO_MEM_BAR_REG(_BASE) ((strm2cio_mem_bar_reg_t*) STRM2CIO_MEM_BAR_ADR(_BASE))
#define STRM2CIO_CREDIT_CNT_REG(_BASE) ((strm2cio_credit_cnt_reg_t*) STRM2CIO_CREDIT_CNT_ADR(_BASE))
#define STRM2CIO_FIFO_STAT_CTL_REG(_BASE) ((strm2cio_fifo_stat_ctl_reg_t*) STRM2CIO_FIFO_STAT_CTL_ADR(_BASE))
#define STRM2CIO_FIFO_STAT_REG(_BASE) ((strm2cio_fifo_stat_reg_t*) STRM2CIO_FIFO_STAT_ADR(_BASE))
#define STRM2CIO_CIO_STALL_CTL_REG(_BASE) ((strm2cio_cio_stall_ctl_reg_t*) STRM2CIO_CIO_STALL_CTL_ADR(_BASE))
#define STRM2CIO_CIO_STALL_CNT_REG(_BASE) ((strm2cio_cio_stall_cnt_reg_t*) STRM2CIO_CIO_STALL_CNT_ADR(_BASE))
#define STRM2CIO_WORD_CNT_CTL_REG(_BASE) ((strm2cio_word_cnt_ctl_reg_t*) STRM2CIO_WORD_CNT_CTL_ADR(_BASE))
#define STRM2CIO_WORD_CNT_REG(_BASE) ((strm2cio_word_cnt_reg_t*) STRM2CIO_WORD_CNT_ADR(_BASE))
#define STRM2CIO_STRM_READY_FORCE_REG(_BASE) ((strm2cio_strm_ready_force_reg_t*) STRM2CIO_STRM_READY_FORCE_ADR(_BASE))
#define STRM2CIO_STOP_EN_REG(_BASE) ((strm2cio_stop_en_reg_t*) STRM2CIO_STOP_EN_ADR(_BASE))
#define STRM2CIO_INT_STAT_REG(_BASE) ((strm2cio_int_stat_reg_t*) STRM2CIO_INT_STAT_ADR(_BASE))
#define STRM2CIO_INT_EN_REG(_BASE) ((strm2cio_int_en_reg_t*) STRM2CIO_INT_EN_ADR(_BASE))
#define STRM2CIO_INT_CLR_REG(_BASE) ((strm2cio_int_clr_reg_t*) STRM2CIO_INT_CLR_ADR(_BASE))
#define STRM2CIO_INT_FORCE_REG(_BASE) ((strm2cio_int_force_reg_t*) STRM2CIO_INT_FORCE_ADR(_BASE))
#define STRM2CIO_INT_MASKED_STAT_REG(_BASE) ((strm2cio_int_masked_stat_reg_t*) STRM2CIO_INT_MASKED_STAT_ADR(_BASE))
#define STRM2CIO_A2C_INT_STAT_REG(_BASE) ((strm2cio_a2c_int_stat_reg_t*) STRM2CIO_A2C_INT_STAT_ADR(_BASE))
#define STRM2CIO_A2C_INT_EN_REG(_BASE) ((strm2cio_a2c_int_en_reg_t*) STRM2CIO_A2C_INT_EN_ADR(_BASE))
#define STRM2CIO_A2C_INT_CLR_REG(_BASE) ((strm2cio_a2c_int_clr_reg_t*) STRM2CIO_A2C_INT_CLR_ADR(_BASE))
#define STRM2CIO_A2C_INT_FORCE_REG(_BASE) ((strm2cio_a2c_int_force_reg_t*) STRM2CIO_A2C_INT_FORCE_ADR(_BASE))
#define STRM2CIO_A2C_INT_MASKED_STAT_REG(_BASE) ((strm2cio_a2c_int_masked_stat_reg_t*) STRM2CIO_A2C_INT_MASKED_STAT_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    const uint8_t        reservedArea0 [8];   /*< Address offset = 0x0 */
    strm2cio_mem_bar_reg_t STRM2CIO_MEM_BAR; /*< Address offset = 0x8 */
    strm2cio_credit_cnt_reg_t STRM2CIO_CREDIT_CNT; /*< Address offset = 0xc */
    strm2cio_fifo_stat_ctl_reg_t STRM2CIO_FIFO_STAT_CTL; /*< Address offset = 0x10 */
    strm2cio_fifo_stat_reg_t STRM2CIO_FIFO_STAT; /*< Address offset = 0x14 */
    strm2cio_cio_stall_ctl_reg_t STRM2CIO_CIO_STALL_CTL; /*< Address offset = 0x18 */
    strm2cio_cio_stall_cnt_reg_t STRM2CIO_CIO_STALL_CNT; /*< Address offset = 0x1c */
    strm2cio_word_cnt_ctl_reg_t STRM2CIO_WORD_CNT_CTL; /*< Address offset = 0x20 */
    strm2cio_word_cnt_reg_t STRM2CIO_WORD_CNT; /*< Address offset = 0x24 */
    const uint8_t        reservedArea1 [8];   /*< Address offset = 0x28 */
    strm2cio_strm_ready_force_reg_t STRM2CIO_STRM_READY_FORCE; /*< Address offset = 0x30 */
    strm2cio_stop_en_reg_t STRM2CIO_STOP_EN; /*< Address offset = 0x34 */
    const uint8_t        reservedArea2 [8];   /*< Address offset = 0x38 */
    strm2cio_int_stat_reg_t STRM2CIO_INT_STAT; /*< Address offset = 0x40 */
    strm2cio_int_en_reg_t STRM2CIO_INT_EN; /*< Address offset = 0x44 */
    strm2cio_int_clr_reg_t STRM2CIO_INT_CLR; /*< Address offset = 0x48 */
    strm2cio_int_force_reg_t STRM2CIO_INT_FORCE; /*< Address offset = 0x4c */
    strm2cio_int_masked_stat_reg_t STRM2CIO_INT_MASKED_STAT; /*< Address offset = 0x50 */
    const uint8_t        reservedArea3 [12];  /*< Address offset = 0x54 */
    strm2cio_a2c_int_stat_reg_t STRM2CIO_A2C_INT_STAT; /*< Address offset = 0x60 */
    strm2cio_a2c_int_en_reg_t STRM2CIO_A2C_INT_EN; /*< Address offset = 0x64 */
    strm2cio_a2c_int_clr_reg_t STRM2CIO_A2C_INT_CLR; /*< Address offset = 0x68 */
    strm2cio_a2c_int_force_reg_t STRM2CIO_A2C_INT_FORCE; /*< Address offset = 0x6c */
    strm2cio_a2c_int_masked_stat_reg_t STRM2CIO_A2C_INT_MASKED_STAT; /*< Address offset = 0x70 */
} strm2cio_t;     // size: 0x0050

// AddressSpace struct pointer
//
#define VEXABC0_S2C_STRM2CIO   ((strm2cio_t*) VEXABC0_S2C_STRM2CIO_BASE)
#define VEXABC1_S2C_STRM2CIO   ((strm2cio_t*) VEXABC1_S2C_STRM2CIO_BASE)
#define VEXABC2_S2C_STRM2CIO   ((strm2cio_t*) VEXABC2_S2C_STRM2CIO_BASE)
#define VEXABC3_S2C_STRM2CIO   ((strm2cio_t*) VEXABC3_S2C_STRM2CIO_BASE)
#define VEXABC4_S2C_STRM2CIO   ((strm2cio_t*) VEXABC4_S2C_STRM2CIO_BASE)
#define VEXABC5_S2C_STRM2CIO   ((strm2cio_t*) VEXABC5_S2C_STRM2CIO_BASE)
#define VEXABC6_S2C_STRM2CIO   ((strm2cio_t*) VEXABC6_S2C_STRM2CIO_BASE)
#define VEXABC7_S2C_STRM2CIO   ((strm2cio_t*) VEXABC7_S2C_STRM2CIO_BASE)
#define VEXABC8_S2C_STRM2CIO   ((strm2cio_t*) VEXABC8_S2C_STRM2CIO_BASE)
#define VEXABC9_S2C_STRM2CIO   ((strm2cio_t*) VEXABC9_S2C_STRM2CIO_BASE)
#define VEXABC10_S2C_STRM2CIO  ((strm2cio_t*) VEXABC10_S2C_STRM2CIO_BASE)
#define VEXABC11_S2C_STRM2CIO  ((strm2cio_t*) VEXABC11_S2C_STRM2CIO_BASE)
#define VEXABC12_S2C_STRM2CIO  ((strm2cio_t*) VEXABC12_S2C_STRM2CIO_BASE)
#define VEXABC13_S2C_STRM2CIO  ((strm2cio_t*) VEXABC13_S2C_STRM2CIO_BASE)
#define VEXABC14_S2C_STRM2CIO  ((strm2cio_t*) VEXABC14_S2C_STRM2CIO_BASE)
#define VEXABC15_S2C_STRM2CIO  ((strm2cio_t*) VEXABC15_S2C_STRM2CIO_BASE)
#define VEXABC16_S2C_STRM2CIO  ((strm2cio_t*) VEXABC16_S2C_STRM2CIO_BASE)
#define VEXABC17_S2C_STRM2CIO  ((strm2cio_t*) VEXABC17_S2C_STRM2CIO_BASE)
#define VEXABC18_S2C_STRM2CIO  ((strm2cio_t*) VEXABC18_S2C_STRM2CIO_BASE)
#define VEXABC19_S2C_STRM2CIO  ((strm2cio_t*) VEXABC19_S2C_STRM2CIO_BASE)
#define VEXABC20_S2C_STRM2CIO  ((strm2cio_t*) VEXABC20_S2C_STRM2CIO_BASE)
#define VEXABC21_S2C_STRM2CIO  ((strm2cio_t*) VEXABC21_S2C_STRM2CIO_BASE)
#define VEXABC22_S2C_STRM2CIO  ((strm2cio_t*) VEXABC22_S2C_STRM2CIO_BASE)
#define VEXABC23_S2C_STRM2CIO  ((strm2cio_t*) VEXABC23_S2C_STRM2CIO_BASE)
#define VEXABC24_S2C_STRM2CIO  ((strm2cio_t*) VEXABC24_S2C_STRM2CIO_BASE)
#define VEXABC25_S2C_STRM2CIO  ((strm2cio_t*) VEXABC25_S2C_STRM2CIO_BASE)
#define VEXABC26_S2C_STRM2CIO  ((strm2cio_t*) VEXABC26_S2C_STRM2CIO_BASE)
#define VEXABC27_S2C_STRM2CIO  ((strm2cio_t*) VEXABC27_S2C_STRM2CIO_BASE)
#define VEXABC28_S2C_STRM2CIO  ((strm2cio_t*) VEXABC28_S2C_STRM2CIO_BASE)
#define VEXABC29_S2C_STRM2CIO  ((strm2cio_t*) VEXABC29_S2C_STRM2CIO_BASE)
#define VEXABC30_S2C_STRM2CIO  ((strm2cio_t*) VEXABC30_S2C_STRM2CIO_BASE)
#define VEXABC31_S2C_STRM2CIO  ((strm2cio_t*) VEXABC31_S2C_STRM2CIO_BASE)
#define VEXABC32_S2C_STRM2CIO  ((strm2cio_t*) VEXABC32_S2C_STRM2CIO_BASE)
#define VEXABC33_S2C_STRM2CIO  ((strm2cio_t*) VEXABC33_S2C_STRM2CIO_BASE)
#define VEXABC34_S2C_STRM2CIO  ((strm2cio_t*) VEXABC34_S2C_STRM2CIO_BASE)
#define VEXABC35_S2C_STRM2CIO  ((strm2cio_t*) VEXABC35_S2C_STRM2CIO_BASE)
#define VEXABC36_S2C_STRM2CIO  ((strm2cio_t*) VEXABC36_S2C_STRM2CIO_BASE)
#define VEXABC37_S2C_STRM2CIO  ((strm2cio_t*) VEXABC37_S2C_STRM2CIO_BASE)
#define VEXABC38_S2C_STRM2CIO  ((strm2cio_t*) VEXABC38_S2C_STRM2CIO_BASE)
#define VEXABC39_S2C_STRM2CIO  ((strm2cio_t*) VEXABC39_S2C_STRM2CIO_BASE)

// ******************************************* /Address Space

#endif      // _STRM2CIO_H_

