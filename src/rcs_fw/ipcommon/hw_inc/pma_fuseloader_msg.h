#ifndef _PMA_FUSELOADER_MSG_H_
#define _PMA_FUSELOADER_MSG_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_JESD0_PHY_PMA0_FUSELOADER_BASE  ( 0x06020c00 )
#define DLNK_JESD1_PHY_PMA0_FUSELOADER_BASE  ( 0x06820c00 )
#define DLNK_JESD2_PHY_PMA0_FUSELOADER_BASE  ( 0x07020c00 )
#define DLNK_JESD3_PHY_PMA0_FUSELOADER_BASE  ( 0x07820c00 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define PMA_FUSELOADER_MSG_CTRL_STAT_OFFSET ( 0x00000000U )
#define PMA_FUSELOADER_MSG_CTRL_OFFSET ( 0x00000004U )
#define PMA_FUSELOADER_MSG_ADDR_0_OFFSET ( 0x00000008U )
#define PMA_FUSELOADER_MSG_VAL_0_OFFSET ( 0x0000000cU )
#define PMA_FUSELOADER_MSG_ADDR_1_OFFSET ( 0x00000010U )
#define PMA_FUSELOADER_MSG_VAL_1_OFFSET ( 0x00000014U )
#define PMA_FUSELOADER_MSG_ADDR_2_OFFSET ( 0x00000018U )
#define PMA_FUSELOADER_MSG_VAL_2_OFFSET ( 0x0000001cU )
#define PMA_FUSELOADER_MSG_ADDR_3_OFFSET ( 0x00000020U )
#define PMA_FUSELOADER_MSG_VAL_3_OFFSET ( 0x00000024U )
#define PMA_FUSELOADER_MSG_ADDR_4_OFFSET ( 0x00000028U )
#define PMA_FUSELOADER_MSG_VAL_4_OFFSET ( 0x0000002cU )
#define PMA_FUSELOADER_MSG_ADDR_5_OFFSET ( 0x00000030U )
#define PMA_FUSELOADER_MSG_VAL_5_OFFSET ( 0x00000034U )
#define PMA_FUSELOADER_MSG_ADDR_6_OFFSET ( 0x00000038U )
#define PMA_FUSELOADER_MSG_VAL_6_OFFSET ( 0x0000003cU )
#define PMA_FUSELOADER_MSG_ADDR_7_OFFSET ( 0x00000040U )
#define PMA_FUSELOADER_MSG_VAL_7_OFFSET ( 0x00000044U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define PMA_FUSELOADER_MSG_CTRL_STAT_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_CTRL_STAT_OFFSET ) ))
#define PMA_FUSELOADER_MSG_CTRL_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_CTRL_OFFSET ) ))
#define PMA_FUSELOADER_MSG_ADDR_0_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_ADDR_0_OFFSET ) ))
#define PMA_FUSELOADER_MSG_VAL_0_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_VAL_0_OFFSET ) ))
#define PMA_FUSELOADER_MSG_ADDR_1_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_ADDR_1_OFFSET ) ))
#define PMA_FUSELOADER_MSG_VAL_1_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_VAL_1_OFFSET ) ))
#define PMA_FUSELOADER_MSG_ADDR_2_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_ADDR_2_OFFSET ) ))
#define PMA_FUSELOADER_MSG_VAL_2_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_VAL_2_OFFSET ) ))
#define PMA_FUSELOADER_MSG_ADDR_3_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_ADDR_3_OFFSET ) ))
#define PMA_FUSELOADER_MSG_VAL_3_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_VAL_3_OFFSET ) ))
#define PMA_FUSELOADER_MSG_ADDR_4_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_ADDR_4_OFFSET ) ))
#define PMA_FUSELOADER_MSG_VAL_4_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_VAL_4_OFFSET ) ))
#define PMA_FUSELOADER_MSG_ADDR_5_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_ADDR_5_OFFSET ) ))
#define PMA_FUSELOADER_MSG_VAL_5_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_VAL_5_OFFSET ) ))
#define PMA_FUSELOADER_MSG_ADDR_6_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_ADDR_6_OFFSET ) ))
#define PMA_FUSELOADER_MSG_VAL_6_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_VAL_6_OFFSET ) ))
#define PMA_FUSELOADER_MSG_ADDR_7_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_ADDR_7_OFFSET ) ))
#define PMA_FUSELOADER_MSG_VAL_7_ADR(_BASE) (( ( _BASE ) + ( PMA_FUSELOADER_MSG_VAL_7_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_CTRL_STATUS register description at address offset 0x0
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_ctrl_status
  * Fuse Loader Control Status Registers
  */

typedef union {
  struct {
    uint32_t FUSELOADER_DONE : 1;
    ///< Fuseloader Done
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t FUSELOADER_ERROR : 8;
    ///< Fuseloader Error
    ///< AccessType="RO/V" BitOffset="1" ResetValue="0x0"
    uint32_t FUSELOADER_LOAD_REQ : 1;
    ///< Status if there is a fuseloader request
    ///< AccessType="RO/V" BitOffset="9" ResetValue="0x0"
    uint32_t FUSELOADER_LOAD_IN_PROGRESS : 1;
    ///< Status if fuseloader is in progress
    ///< AccessType="RO/V" BitOffset="10" ResetValue="0x0"
    uint32_t  : 21;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
  } ;
  uint32_t value;
} pma_fuseloader_msg_ctrl_stat_reg_t;

#define PMA_FUSELOADER_MSG_CTRL_STAT_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_CTRL_STAT_RD_MASK (0x000007ffU)
#define PMA_FUSELOADER_MSG_CTRL_STAT_WR_MASK (0x00000000U)


///< Fuseloader Done
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_DONE_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_DONE_BF_WID ( 1)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_DONE_BF_MSK (0x00000001)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_DONE_BF_DEF (0x00000000)

///< Fuseloader Error
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_ERR_BF_OFF ( 1)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_ERR_BF_WID ( 8)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_ERR_BF_MSK (0x000001FE)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_ERR_BF_DEF (0x00000000)

///< Status if there is a fuseloader request
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_LOAD_REQ_BF_OFF ( 9)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_LOAD_REQ_BF_WID ( 1)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_LOAD_REQ_BF_MSK (0x00000200)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_LOAD_REQ_BF_DEF (0x00000000)

///< Status if fuseloader is in progress
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_LOAD_IN_PROGRESS_BF_OFF (10)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_LOAD_IN_PROGRESS_BF_WID ( 1)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_LOAD_IN_PROGRESS_BF_MSK (0x00000400)
#define PMA_FUSELOADER_MSG_CTRL_STAT_FUSELOADER_LOAD_IN_PROGRESS_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_CTRL register description at address offset 0x4
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_ctrl
  * Fuse Loader Control Registers
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_DISABLE : 1;
    ///< Fuseloader Disable
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FUSELOADER_LOAD_REQ_LOCOVR : 1;
    ///< Override Value for fuseloader_load_req
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t FUSELOADER_LOAD_REQ_LOCOVREN : 1;
    ///< Override Enable for fuseloader_load_req
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t FUSELOADER_LOAD_IN_PROGRESS_LOCOVR : 1;
    ///< Override Value for fuseloader_load_in_progress
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t FUSELOADER_LOAD_IN_PROGRESS_LOCOVREN : 1;
    ///< Override Enable for fuseloader_load_in_progress
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t  : 27;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
  } ;
  uint32_t value;
} pma_fuseloader_msg_ctrl_reg_t;

#define PMA_FUSELOADER_MSG_CTRL_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_CTRL_RD_MASK (0x0000001fU)
#define PMA_FUSELOADER_MSG_CTRL_WR_MASK (0x0000001fU)


///< Fuseloader Disable
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_FUSE_DIS_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_FUSE_DIS_BF_WID ( 1)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_FUSE_DIS_BF_MSK (0x00000001)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_FUSE_DIS_BF_DEF (0x00000000)

///< Override Value for fuseloader_load_req
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_REQ_LOCOVR_BF_OFF ( 1)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_REQ_LOCOVR_BF_WID ( 1)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_REQ_LOCOVR_BF_MSK (0x00000002)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_REQ_LOCOVR_BF_DEF (0x00000000)

///< Override Enable for fuseloader_load_req
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_REQ_LOCOVREN_BF_OFF ( 2)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_REQ_LOCOVREN_BF_WID ( 1)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_REQ_LOCOVREN_BF_MSK (0x00000004)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_REQ_LOCOVREN_BF_DEF (0x00000000)

///< Override Value for fuseloader_load_in_progress
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_IN_PROGRESS_LOCOVR_BF_OFF ( 3)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_IN_PROGRESS_LOCOVR_BF_WID ( 1)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_IN_PROGRESS_LOCOVR_BF_MSK (0x00000008)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_IN_PROGRESS_LOCOVR_BF_DEF (0x00000000)

///< Override Enable for fuseloader_load_in_progress
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_IN_PROGRESS_LOCOVREN_BF_OFF ( 4)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_IN_PROGRESS_LOCOVREN_BF_WID ( 1)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_IN_PROGRESS_LOCOVREN_BF_MSK (0x00000010)
#define PMA_FUSELOADER_MSG_CTRL_FUSELOADER_LOAD_IN_PROGRESS_LOCOVREN_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_ADDR_0 register description at address offset 0x8
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_addr_0
  * Fuse Loader Address Entry 0
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_ADDR0 : 18;
    ///< General purpose fuse 0 address index
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FUSELOADER_FUSE_POS0 : 5;
    ///< General purpose fuse 0 lsb position
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t FUSELOADER_FUSE_SIZE0 : 6;
    ///< General purpose fuse 0 field size
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} pma_fuseloader_msg_addr_0_reg_t;

#define PMA_FUSELOADER_MSG_ADDR_0_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_ADDR_0_RD_MASK (0x3f7fffffU)
#define PMA_FUSELOADER_MSG_ADDR_0_WR_MASK (0x3f7fffffU)


///< General purpose fuse 0 address index
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_ADDR0_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_ADDR0_BF_WID (18)
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_ADDR0_BF_MSK (0x0003FFFF)
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_ADDR0_BF_DEF (0x00000000)

///< General purpose fuse 0 lsb position
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_POS0_BF_OFF (18)
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_POS0_BF_WID ( 5)
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_POS0_BF_MSK (0x007C0000)
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_POS0_BF_DEF (0x00000000)

///< General purpose fuse 0 field size
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_SIZE0_BF_OFF (24)
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_SIZE0_BF_WID ( 6)
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_SIZE0_BF_MSK (0x3F000000)
#define PMA_FUSELOADER_MSG_ADDR_0_FUSELOADER_FUSE_SIZE0_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_VAL_0 register description at address offset 0xc
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_val_0
  * Fuse Loader Value Entry 0
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_VALUE0 : 32;
    ///< General purpose fuse 0 value
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_fuseloader_msg_val_0_reg_t;

#define PMA_FUSELOADER_MSG_VAL_0_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_VAL_0_RD_MASK (0xffffffffU)
#define PMA_FUSELOADER_MSG_VAL_0_WR_MASK (0xffffffffU)


///< General purpose fuse 0 value
#define PMA_FUSELOADER_MSG_VAL_0_FUSELOADER_FUSE_VAL0_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_VAL_0_FUSELOADER_FUSE_VAL0_BF_WID (32)
#define PMA_FUSELOADER_MSG_VAL_0_FUSELOADER_FUSE_VAL0_BF_MSK (0xFFFFFFFF)
#define PMA_FUSELOADER_MSG_VAL_0_FUSELOADER_FUSE_VAL0_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_ADDR_1 register description at address offset 0x10
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_addr_1
  * Fuse Loader Address Entry 1
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_ADDR1 : 18;
    ///< General purpose fuse 1 address index
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FUSELOADER_FUSE_POS1 : 5;
    ///< General purpose fuse 1 lsb position
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t FUSELOADER_FUSE_SIZE1 : 6;
    ///< General purpose fuse 1 field size
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} pma_fuseloader_msg_addr_1_reg_t;

#define PMA_FUSELOADER_MSG_ADDR_1_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_ADDR_1_RD_MASK (0x3f7fffffU)
#define PMA_FUSELOADER_MSG_ADDR_1_WR_MASK (0x3f7fffffU)


///< General purpose fuse 1 address index
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_ADDR1_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_ADDR1_BF_WID (18)
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_ADDR1_BF_MSK (0x0003FFFF)
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_ADDR1_BF_DEF (0x00000000)

///< General purpose fuse 1 lsb position
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_POS1_BF_OFF (18)
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_POS1_BF_WID ( 5)
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_POS1_BF_MSK (0x007C0000)
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_POS1_BF_DEF (0x00000000)

///< General purpose fuse 1 field size
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_SIZE1_BF_OFF (24)
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_SIZE1_BF_WID ( 6)
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_SIZE1_BF_MSK (0x3F000000)
#define PMA_FUSELOADER_MSG_ADDR_1_FUSELOADER_FUSE_SIZE1_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_VAL_1 register description at address offset 0x14
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_val_1
  * Fuse Loader Value Entry 1
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_VALUE1 : 32;
    ///< General purpose fuse 1 value
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_fuseloader_msg_val_1_reg_t;

#define PMA_FUSELOADER_MSG_VAL_1_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_VAL_1_RD_MASK (0xffffffffU)
#define PMA_FUSELOADER_MSG_VAL_1_WR_MASK (0xffffffffU)


///< General purpose fuse 1 value
#define PMA_FUSELOADER_MSG_VAL_1_FUSELOADER_FUSE_VAL1_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_VAL_1_FUSELOADER_FUSE_VAL1_BF_WID (32)
#define PMA_FUSELOADER_MSG_VAL_1_FUSELOADER_FUSE_VAL1_BF_MSK (0xFFFFFFFF)
#define PMA_FUSELOADER_MSG_VAL_1_FUSELOADER_FUSE_VAL1_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_ADDR_2 register description at address offset 0x18
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_addr_2
  * Fuse Loader Address Entry 2
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_ADDR2 : 18;
    ///< General purpose fuse 2 address index
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FUSELOADER_FUSE_POS2 : 5;
    ///< General purpose fuse 2 lsb position
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t FUSELOADER_FUSE_SIZE2 : 6;
    ///< General purpose fuse 2 field size
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} pma_fuseloader_msg_addr_2_reg_t;

#define PMA_FUSELOADER_MSG_ADDR_2_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_ADDR_2_RD_MASK (0x3f7fffffU)
#define PMA_FUSELOADER_MSG_ADDR_2_WR_MASK (0x3f7fffffU)


///< General purpose fuse 2 address index
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_ADDR2_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_ADDR2_BF_WID (18)
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_ADDR2_BF_MSK (0x0003FFFF)
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_ADDR2_BF_DEF (0x00000000)

///< General purpose fuse 2 lsb position
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_POS2_BF_OFF (18)
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_POS2_BF_WID ( 5)
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_POS2_BF_MSK (0x007C0000)
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_POS2_BF_DEF (0x00000000)

///< General purpose fuse 2 field size
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_SIZE2_BF_OFF (24)
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_SIZE2_BF_WID ( 6)
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_SIZE2_BF_MSK (0x3F000000)
#define PMA_FUSELOADER_MSG_ADDR_2_FUSELOADER_FUSE_SIZE2_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_VAL_2 register description at address offset 0x1c
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_val_2
  * Fuse Loader Value Entry 2
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_VALUE2 : 32;
    ///< General purpose fuse 2 value
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_fuseloader_msg_val_2_reg_t;

#define PMA_FUSELOADER_MSG_VAL_2_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_VAL_2_RD_MASK (0xffffffffU)
#define PMA_FUSELOADER_MSG_VAL_2_WR_MASK (0xffffffffU)


///< General purpose fuse 2 value
#define PMA_FUSELOADER_MSG_VAL_2_FUSELOADER_FUSE_VAL2_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_VAL_2_FUSELOADER_FUSE_VAL2_BF_WID (32)
#define PMA_FUSELOADER_MSG_VAL_2_FUSELOADER_FUSE_VAL2_BF_MSK (0xFFFFFFFF)
#define PMA_FUSELOADER_MSG_VAL_2_FUSELOADER_FUSE_VAL2_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_ADDR_3 register description at address offset 0x20
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_addr_3
  * Fuse Loader Address Entry 3
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_ADDR3 : 18;
    ///< General purpose fuse 3 address index
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FUSELOADER_FUSE_POS3 : 5;
    ///< General purpose fuse 3 lsb position
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t FUSELOADER_FUSE_SIZE3 : 6;
    ///< General purpose fuse 3 field size
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} pma_fuseloader_msg_addr_3_reg_t;

#define PMA_FUSELOADER_MSG_ADDR_3_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_ADDR_3_RD_MASK (0x3f7fffffU)
#define PMA_FUSELOADER_MSG_ADDR_3_WR_MASK (0x3f7fffffU)


///< General purpose fuse 3 address index
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_ADDR3_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_ADDR3_BF_WID (18)
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_ADDR3_BF_MSK (0x0003FFFF)
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_ADDR3_BF_DEF (0x00000000)

///< General purpose fuse 3 lsb position
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_POS3_BF_OFF (18)
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_POS3_BF_WID ( 5)
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_POS3_BF_MSK (0x007C0000)
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_POS3_BF_DEF (0x00000000)

///< General purpose fuse 3 field size
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_SIZE3_BF_OFF (24)
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_SIZE3_BF_WID ( 6)
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_SIZE3_BF_MSK (0x3F000000)
#define PMA_FUSELOADER_MSG_ADDR_3_FUSELOADER_FUSE_SIZE3_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_VAL_3 register description at address offset 0x24
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_val_3
  * Fuse Loader Value Entry 3
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_VALUE3 : 32;
    ///< General purpose fuse 3 value
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_fuseloader_msg_val_3_reg_t;

#define PMA_FUSELOADER_MSG_VAL_3_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_VAL_3_RD_MASK (0xffffffffU)
#define PMA_FUSELOADER_MSG_VAL_3_WR_MASK (0xffffffffU)


///< General purpose fuse 3 value
#define PMA_FUSELOADER_MSG_VAL_3_FUSELOADER_FUSE_VAL3_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_VAL_3_FUSELOADER_FUSE_VAL3_BF_WID (32)
#define PMA_FUSELOADER_MSG_VAL_3_FUSELOADER_FUSE_VAL3_BF_MSK (0xFFFFFFFF)
#define PMA_FUSELOADER_MSG_VAL_3_FUSELOADER_FUSE_VAL3_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_ADDR_4 register description at address offset 0x28
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_addr_4
  * Fuse Loader Address Entry 4
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_ADDR4 : 18;
    ///< General purpose fuse 4 address index
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FUSELOADER_FUSE_POS4 : 5;
    ///< General purpose fuse 4 lsb position
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t FUSELOADER_FUSE_SIZE4 : 6;
    ///< General purpose fuse 4 field size
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} pma_fuseloader_msg_addr_4_reg_t;

#define PMA_FUSELOADER_MSG_ADDR_4_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_ADDR_4_RD_MASK (0x3f7fffffU)
#define PMA_FUSELOADER_MSG_ADDR_4_WR_MASK (0x3f7fffffU)


///< General purpose fuse 4 address index
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_ADDR4_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_ADDR4_BF_WID (18)
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_ADDR4_BF_MSK (0x0003FFFF)
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_ADDR4_BF_DEF (0x00000000)

///< General purpose fuse 4 lsb position
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_POS4_BF_OFF (18)
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_POS4_BF_WID ( 5)
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_POS4_BF_MSK (0x007C0000)
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_POS4_BF_DEF (0x00000000)

///< General purpose fuse 4 field size
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_SIZE4_BF_OFF (24)
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_SIZE4_BF_WID ( 6)
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_SIZE4_BF_MSK (0x3F000000)
#define PMA_FUSELOADER_MSG_ADDR_4_FUSELOADER_FUSE_SIZE4_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_VAL_4 register description at address offset 0x2c
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_val_4
  * Fuse Loader Value Entry 4
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_VALUE4 : 32;
    ///< General purpose fuse 4 value
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_fuseloader_msg_val_4_reg_t;

#define PMA_FUSELOADER_MSG_VAL_4_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_VAL_4_RD_MASK (0xffffffffU)
#define PMA_FUSELOADER_MSG_VAL_4_WR_MASK (0xffffffffU)


///< General purpose fuse 4 value
#define PMA_FUSELOADER_MSG_VAL_4_FUSELOADER_FUSE_VAL4_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_VAL_4_FUSELOADER_FUSE_VAL4_BF_WID (32)
#define PMA_FUSELOADER_MSG_VAL_4_FUSELOADER_FUSE_VAL4_BF_MSK (0xFFFFFFFF)
#define PMA_FUSELOADER_MSG_VAL_4_FUSELOADER_FUSE_VAL4_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_ADDR_5 register description at address offset 0x30
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_addr_5
  * Fuse Loader Address Entry 5
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_ADDR5 : 18;
    ///< General purpose fuse 5 address index
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FUSELOADER_FUSE_POS5 : 5;
    ///< General purpose fuse 5 lsb position
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t FUSELOADER_FUSE_SIZE5 : 6;
    ///< General purpose fuse 5 field size
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} pma_fuseloader_msg_addr_5_reg_t;

#define PMA_FUSELOADER_MSG_ADDR_5_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_ADDR_5_RD_MASK (0x3f7fffffU)
#define PMA_FUSELOADER_MSG_ADDR_5_WR_MASK (0x3f7fffffU)


///< General purpose fuse 5 address index
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_ADDR5_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_ADDR5_BF_WID (18)
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_ADDR5_BF_MSK (0x0003FFFF)
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_ADDR5_BF_DEF (0x00000000)

///< General purpose fuse 5 lsb position
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_POS5_BF_OFF (18)
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_POS5_BF_WID ( 5)
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_POS5_BF_MSK (0x007C0000)
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_POS5_BF_DEF (0x00000000)

///< General purpose fuse 5 field size
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_SIZE5_BF_OFF (24)
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_SIZE5_BF_WID ( 6)
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_SIZE5_BF_MSK (0x3F000000)
#define PMA_FUSELOADER_MSG_ADDR_5_FUSELOADER_FUSE_SIZE5_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_VAL_5 register description at address offset 0x34
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_val_5
  * Fuse Loader Value Entry 5
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_VALUE5 : 32;
    ///< General purpose fuse 5 value
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_fuseloader_msg_val_5_reg_t;

#define PMA_FUSELOADER_MSG_VAL_5_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_VAL_5_RD_MASK (0xffffffffU)
#define PMA_FUSELOADER_MSG_VAL_5_WR_MASK (0xffffffffU)


///< General purpose fuse 5 value
#define PMA_FUSELOADER_MSG_VAL_5_FUSELOADER_FUSE_VAL5_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_VAL_5_FUSELOADER_FUSE_VAL5_BF_WID (32)
#define PMA_FUSELOADER_MSG_VAL_5_FUSELOADER_FUSE_VAL5_BF_MSK (0xFFFFFFFF)
#define PMA_FUSELOADER_MSG_VAL_5_FUSELOADER_FUSE_VAL5_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_ADDR_6 register description at address offset 0x38
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_addr_6
  * Fuse Loader Address Entry 6
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_ADDR6 : 18;
    ///< General purpose fuse 6 address index
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FUSELOADER_FUSE_POS6 : 5;
    ///< General purpose fuse 6 lsb position
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t FUSELOADER_FUSE_SIZE6 : 6;
    ///< General purpose fuse 6 field size
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} pma_fuseloader_msg_addr_6_reg_t;

#define PMA_FUSELOADER_MSG_ADDR_6_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_ADDR_6_RD_MASK (0x3f7fffffU)
#define PMA_FUSELOADER_MSG_ADDR_6_WR_MASK (0x3f7fffffU)


///< General purpose fuse 6 address index
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_ADDR6_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_ADDR6_BF_WID (18)
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_ADDR6_BF_MSK (0x0003FFFF)
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_ADDR6_BF_DEF (0x00000000)

///< General purpose fuse 6 lsb position
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_POS6_BF_OFF (18)
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_POS6_BF_WID ( 5)
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_POS6_BF_MSK (0x007C0000)
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_POS6_BF_DEF (0x00000000)

///< General purpose fuse 6 field size
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_SIZE6_BF_OFF (24)
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_SIZE6_BF_WID ( 6)
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_SIZE6_BF_MSK (0x3F000000)
#define PMA_FUSELOADER_MSG_ADDR_6_FUSELOADER_FUSE_SIZE6_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_VAL_6 register description at address offset 0x3c
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_val_6
  * Fuse Loader Value Entry 6
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_VALUE6 : 32;
    ///< General purpose fuse 6 value
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_fuseloader_msg_val_6_reg_t;

#define PMA_FUSELOADER_MSG_VAL_6_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_VAL_6_RD_MASK (0xffffffffU)
#define PMA_FUSELOADER_MSG_VAL_6_WR_MASK (0xffffffffU)


///< General purpose fuse 6 value
#define PMA_FUSELOADER_MSG_VAL_6_FUSELOADER_FUSE_VAL6_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_VAL_6_FUSELOADER_FUSE_VAL6_BF_WID (32)
#define PMA_FUSELOADER_MSG_VAL_6_FUSELOADER_FUSE_VAL6_BF_MSK (0xFFFFFFFF)
#define PMA_FUSELOADER_MSG_VAL_6_FUSELOADER_FUSE_VAL6_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_ADDR_7 register description at address offset 0x40
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_addr_7
  * Fuse Loader Address Entry 7
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_ADDR7 : 18;
    ///< General purpose fuse 7 address index
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FUSELOADER_FUSE_POS7 : 5;
    ///< General purpose fuse 7 lsb position
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t FUSELOADER_FUSE_SIZE7 : 6;
    ///< General purpose fuse 7 field size
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} pma_fuseloader_msg_addr_7_reg_t;

#define PMA_FUSELOADER_MSG_ADDR_7_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_ADDR_7_RD_MASK (0x3f7fffffU)
#define PMA_FUSELOADER_MSG_ADDR_7_WR_MASK (0x3f7fffffU)


///< General purpose fuse 7 address index
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_ADDR7_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_ADDR7_BF_WID (18)
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_ADDR7_BF_MSK (0x0003FFFF)
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_ADDR7_BF_DEF (0x00000000)

///< General purpose fuse 7 lsb position
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_POS7_BF_OFF (18)
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_POS7_BF_WID ( 5)
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_POS7_BF_MSK (0x007C0000)
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_POS7_BF_DEF (0x00000000)

///< General purpose fuse 7 field size
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_SIZE7_BF_OFF (24)
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_SIZE7_BF_WID ( 6)
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_SIZE7_BF_MSK (0x3F000000)
#define PMA_FUSELOADER_MSG_ADDR_7_FUSELOADER_FUSE_SIZE7_BF_DEF (0x00000000)


/** @brief PMA_FUSELOADER_REGS_MSG_PMA_FUSELOADER_REGS_FUSELOADER_VAL_7 register description at address offset 0x44
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_FUSELOADER_regs_MSG/PMA_FUSELOADER_regs/fuseloader_val_7
  * Fuse Loader Value Entry 7
  */

typedef union {
  struct {
    uint32_t FUSELOADER_FUSE_VALUE7 : 32;
    ///< General purpose fuse 7 value
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_fuseloader_msg_val_7_reg_t;

#define PMA_FUSELOADER_MSG_VAL_7_DEFAULT (0x00000000U)
#define PMA_FUSELOADER_MSG_VAL_7_RD_MASK (0xffffffffU)
#define PMA_FUSELOADER_MSG_VAL_7_WR_MASK (0xffffffffU)


///< General purpose fuse 7 value
#define PMA_FUSELOADER_MSG_VAL_7_FUSELOADER_FUSE_VAL7_BF_OFF ( 0)
#define PMA_FUSELOADER_MSG_VAL_7_FUSELOADER_FUSE_VAL7_BF_WID (32)
#define PMA_FUSELOADER_MSG_VAL_7_FUSELOADER_FUSE_VAL7_BF_MSK (0xFFFFFFFF)
#define PMA_FUSELOADER_MSG_VAL_7_FUSELOADER_FUSE_VAL7_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define PMA_FUSELOADER_MSG_CTRL_STAT_REG(_BASE) ((pma_fuseloader_msg_ctrl_stat_reg_t*) PMA_FUSELOADER_MSG_CTRL_STAT_ADR(_BASE))
#define PMA_FUSELOADER_MSG_CTRL_REG(_BASE) ((pma_fuseloader_msg_ctrl_reg_t*) PMA_FUSELOADER_MSG_CTRL_ADR(_BASE))
#define PMA_FUSELOADER_MSG_ADDR_0_REG(_BASE) ((pma_fuseloader_msg_addr_0_reg_t*) PMA_FUSELOADER_MSG_ADDR_0_ADR(_BASE))
#define PMA_FUSELOADER_MSG_VAL_0_REG(_BASE) ((pma_fuseloader_msg_val_0_reg_t*) PMA_FUSELOADER_MSG_VAL_0_ADR(_BASE))
#define PMA_FUSELOADER_MSG_ADDR_1_REG(_BASE) ((pma_fuseloader_msg_addr_1_reg_t*) PMA_FUSELOADER_MSG_ADDR_1_ADR(_BASE))
#define PMA_FUSELOADER_MSG_VAL_1_REG(_BASE) ((pma_fuseloader_msg_val_1_reg_t*) PMA_FUSELOADER_MSG_VAL_1_ADR(_BASE))
#define PMA_FUSELOADER_MSG_ADDR_2_REG(_BASE) ((pma_fuseloader_msg_addr_2_reg_t*) PMA_FUSELOADER_MSG_ADDR_2_ADR(_BASE))
#define PMA_FUSELOADER_MSG_VAL_2_REG(_BASE) ((pma_fuseloader_msg_val_2_reg_t*) PMA_FUSELOADER_MSG_VAL_2_ADR(_BASE))
#define PMA_FUSELOADER_MSG_ADDR_3_REG(_BASE) ((pma_fuseloader_msg_addr_3_reg_t*) PMA_FUSELOADER_MSG_ADDR_3_ADR(_BASE))
#define PMA_FUSELOADER_MSG_VAL_3_REG(_BASE) ((pma_fuseloader_msg_val_3_reg_t*) PMA_FUSELOADER_MSG_VAL_3_ADR(_BASE))
#define PMA_FUSELOADER_MSG_ADDR_4_REG(_BASE) ((pma_fuseloader_msg_addr_4_reg_t*) PMA_FUSELOADER_MSG_ADDR_4_ADR(_BASE))
#define PMA_FUSELOADER_MSG_VAL_4_REG(_BASE) ((pma_fuseloader_msg_val_4_reg_t*) PMA_FUSELOADER_MSG_VAL_4_ADR(_BASE))
#define PMA_FUSELOADER_MSG_ADDR_5_REG(_BASE) ((pma_fuseloader_msg_addr_5_reg_t*) PMA_FUSELOADER_MSG_ADDR_5_ADR(_BASE))
#define PMA_FUSELOADER_MSG_VAL_5_REG(_BASE) ((pma_fuseloader_msg_val_5_reg_t*) PMA_FUSELOADER_MSG_VAL_5_ADR(_BASE))
#define PMA_FUSELOADER_MSG_ADDR_6_REG(_BASE) ((pma_fuseloader_msg_addr_6_reg_t*) PMA_FUSELOADER_MSG_ADDR_6_ADR(_BASE))
#define PMA_FUSELOADER_MSG_VAL_6_REG(_BASE) ((pma_fuseloader_msg_val_6_reg_t*) PMA_FUSELOADER_MSG_VAL_6_ADR(_BASE))
#define PMA_FUSELOADER_MSG_ADDR_7_REG(_BASE) ((pma_fuseloader_msg_addr_7_reg_t*) PMA_FUSELOADER_MSG_ADDR_7_ADR(_BASE))
#define PMA_FUSELOADER_MSG_VAL_7_REG(_BASE) ((pma_fuseloader_msg_val_7_reg_t*) PMA_FUSELOADER_MSG_VAL_7_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    pma_fuseloader_msg_ctrl_stat_reg_t FUSELOADER_CTRL_STAT; /*< Address offset = 0x0 */
    pma_fuseloader_msg_ctrl_reg_t FUSELOADER_CTRL; /*< Address offset = 0x4 */
    pma_fuseloader_msg_addr_0_reg_t FUSELOADER_ADDR_0; /*< Address offset = 0x8 */
    pma_fuseloader_msg_val_0_reg_t FUSELOADER_VAL_0; /*< Address offset = 0xc */
    pma_fuseloader_msg_addr_1_reg_t FUSELOADER_ADDR_1; /*< Address offset = 0x10 */
    pma_fuseloader_msg_val_1_reg_t FUSELOADER_VAL_1; /*< Address offset = 0x14 */
    pma_fuseloader_msg_addr_2_reg_t FUSELOADER_ADDR_2; /*< Address offset = 0x18 */
    pma_fuseloader_msg_val_2_reg_t FUSELOADER_VAL_2; /*< Address offset = 0x1c */
    pma_fuseloader_msg_addr_3_reg_t FUSELOADER_ADDR_3; /*< Address offset = 0x20 */
    pma_fuseloader_msg_val_3_reg_t FUSELOADER_VAL_3; /*< Address offset = 0x24 */
    pma_fuseloader_msg_addr_4_reg_t FUSELOADER_ADDR_4; /*< Address offset = 0x28 */
    pma_fuseloader_msg_val_4_reg_t FUSELOADER_VAL_4; /*< Address offset = 0x2c */
    pma_fuseloader_msg_addr_5_reg_t FUSELOADER_ADDR_5; /*< Address offset = 0x30 */
    pma_fuseloader_msg_val_5_reg_t FUSELOADER_VAL_5; /*< Address offset = 0x34 */
    pma_fuseloader_msg_addr_6_reg_t FUSELOADER_ADDR_6; /*< Address offset = 0x38 */
    pma_fuseloader_msg_val_6_reg_t FUSELOADER_VAL_6; /*< Address offset = 0x3c */
    pma_fuseloader_msg_addr_7_reg_t FUSELOADER_ADDR_7; /*< Address offset = 0x40 */
    pma_fuseloader_msg_val_7_reg_t FUSELOADER_VAL_7; /*< Address offset = 0x44 */
} pma_fuseloader_msg_t;     // size: 0x0048

// AddressSpace struct pointer
//
#define DLNK_JESD0_PHY_PMA0_FUSELOADER  ((pma_fuseloader_msg_t*) DLNK_JESD0_PHY_PMA0_FUSELOADER_BASE)
#define DLNK_JESD1_PHY_PMA0_FUSELOADER  ((pma_fuseloader_msg_t*) DLNK_JESD1_PHY_PMA0_FUSELOADER_BASE)
#define DLNK_JESD2_PHY_PMA0_FUSELOADER  ((pma_fuseloader_msg_t*) DLNK_JESD2_PHY_PMA0_FUSELOADER_BASE)
#define DLNK_JESD3_PHY_PMA0_FUSELOADER  ((pma_fuseloader_msg_t*) DLNK_JESD3_PHY_PMA0_FUSELOADER_BASE)

// ******************************************* /Address Space

#endif      // _PMA_FUSELOADER_MSG_H_

