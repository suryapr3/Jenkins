#ifndef _UC_CPI_MSG_H_
#define _UC_CPI_MSG_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_JESD0_PHY_UC_CPI0_BASE  ( 0x06000400 )
#define DLNK_JESD0_PHY_UC_CPI1_BASE  ( 0x06000420 )
#define DLNK_JESD0_PHY_UC_CPI2_BASE  ( 0x06000440 )
#define DLNK_JESD1_PHY_UC_CPI0_BASE  ( 0x06800400 )
#define DLNK_JESD1_PHY_UC_CPI1_BASE  ( 0x06800420 )
#define DLNK_JESD1_PHY_UC_CPI2_BASE  ( 0x06800440 )
#define DLNK_JESD2_PHY_UC_CPI0_BASE  ( 0x07000400 )
#define DLNK_JESD2_PHY_UC_CPI1_BASE  ( 0x07000420 )
#define DLNK_JESD2_PHY_UC_CPI2_BASE  ( 0x07000440 )
#define DLNK_JESD3_PHY_UC_CPI0_BASE  ( 0x07800400 )
#define DLNK_JESD3_PHY_UC_CPI1_BASE  ( 0x07800420 )
#define DLNK_JESD3_PHY_UC_CPI2_BASE  ( 0x07800440 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define UC_CPI_MSG_CPI_LM_CMD_DATA_OFFSET ( 0x00000000U )
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_OFFSET ( 0x00000004U )
#define UC_CPI_MSG_CPI_PHY_OWNER_OFFSET ( 0x00000008U )
#define UC_CPI_MSG_CPI_RESERVED_OFFSET ( 0x0000000cU )
#define UC_CPI_MSG_CPI_STAT_0_OFFSET ( 0x00000010U )
#define UC_CPI_MSG_CPI_STAT_1_OFFSET ( 0x00000014U )
#define UC_CPI_MSG_CPI_STAT_2_OFFSET ( 0x00000018U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define UC_CPI_MSG_CPI_LM_CMD_DATA_ADR(_BASE) (( ( _BASE ) + ( UC_CPI_MSG_CPI_LM_CMD_DATA_OFFSET ) ))
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_ADR(_BASE) (( ( _BASE ) + ( UC_CPI_MSG_CPI_PHY_CMD_DATA_OFFSET ) ))
#define UC_CPI_MSG_CPI_PHY_OWNER_ADR(_BASE) (( ( _BASE ) + ( UC_CPI_MSG_CPI_PHY_OWNER_OFFSET ) ))
#define UC_CPI_MSG_CPI_RESERVED_ADR(_BASE) (( ( _BASE ) + ( UC_CPI_MSG_CPI_RESERVED_OFFSET ) ))
#define UC_CPI_MSG_CPI_STAT_0_ADR(_BASE) (( ( _BASE ) + ( UC_CPI_MSG_CPI_STAT_0_OFFSET ) ))
#define UC_CPI_MSG_CPI_STAT_1_ADR(_BASE) (( ( _BASE ) + ( UC_CPI_MSG_CPI_STAT_1_OFFSET ) ))
#define UC_CPI_MSG_CPI_STAT_2_ADR(_BASE) (( ( _BASE ) + ( UC_CPI_MSG_CPI_STAT_2_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief UC_CPI_REGS_MSG_UC_CPI_REGS_CPI_LM_CMD_DATA register description at address offset 0x0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPI_regs_MSG/UC_CPI_regs/cpi_lm_cmd_data
  * CPI - Link Master Command and Data Register
  */

typedef union {
  struct {
    uint32_t CPI_LM_DATA : 16;
    ///< Link Manager Data register. PHY is not permitted to write to this
    ///< register.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t CPI_LM_CMD : 16;
    ///< Link Manager Command register. PHY is not permitted to write to this
    ///< register.
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpi_msg_cpi_lm_cmd_data_reg_t;

#define UC_CPI_MSG_CPI_LM_CMD_DATA_DEFAULT (0x00000000U)
#define UC_CPI_MSG_CPI_LM_CMD_DATA_RD_MASK (0xffffffffU)
#define UC_CPI_MSG_CPI_LM_CMD_DATA_WR_MASK (0xffffffffU)


///< Link Manager Data register. PHY is not permitted to write to this
///< register.
#define UC_CPI_MSG_CPI_LM_CMD_DATA_CPI_LM_DATA_BF_OFF ( 0)
#define UC_CPI_MSG_CPI_LM_CMD_DATA_CPI_LM_DATA_BF_WID (16)
#define UC_CPI_MSG_CPI_LM_CMD_DATA_CPI_LM_DATA_BF_MSK (0x0000FFFF)
#define UC_CPI_MSG_CPI_LM_CMD_DATA_CPI_LM_DATA_BF_DEF (0x00000000)

///< Link Manager Command register. PHY is not permitted to write to this
///< register.
#define UC_CPI_MSG_CPI_LM_CMD_DATA_CPI_LM_CMD_BF_OFF (16)
#define UC_CPI_MSG_CPI_LM_CMD_DATA_CPI_LM_CMD_BF_WID (16)
#define UC_CPI_MSG_CPI_LM_CMD_DATA_CPI_LM_CMD_BF_MSK (0xFFFF0000)
#define UC_CPI_MSG_CPI_LM_CMD_DATA_CPI_LM_CMD_BF_DEF (0x00000000)


/** @brief UC_CPI_REGS_MSG_UC_CPI_REGS_CPI_PHY_CMD_DATA register description at address offset 0x4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPI_regs_MSG/UC_CPI_regs/cpi_phy_cmd_data
  * CPI - PHY Command and Data Register
  */

typedef union {
  struct {
    uint32_t CPI_PHY_DATA : 16;
    ///< PHY Command register. LM is not permitted to write to this register.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t CPI_PHY_CMD : 16;
    ///< PHY Data register. LM is not permitted to write to this register
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpi_msg_cpi_phy_cmd_data_reg_t;

#define UC_CPI_MSG_CPI_PHY_CMD_DATA_DEFAULT (0x00000000U)
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_RD_MASK (0xffffffffU)
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_WR_MASK (0xffffffffU)


///< PHY Command register. LM is not permitted to write to this register.
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_CPI_PHY_DATA_BF_OFF ( 0)
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_CPI_PHY_DATA_BF_WID (16)
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_CPI_PHY_DATA_BF_MSK (0x0000FFFF)
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_CPI_PHY_DATA_BF_DEF (0x00000000)

///< PHY Data register. LM is not permitted to write to this register
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_CPI_PHY_CMD_BF_OFF (16)
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_CPI_PHY_CMD_BF_WID (16)
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_CPI_PHY_CMD_BF_MSK (0xFFFF0000)
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_CPI_PHY_CMD_BF_DEF (0x00000000)


/** @brief UC_CPI_REGS_MSG_UC_CPI_REGS_CPI_PHY_OWNER register description at address offset 0x8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPI_regs_MSG/UC_CPI_regs/cpi_phy_owner
  * CPI - PHY Owner Register
  */

typedef union {
  struct {
    uint32_t CPI_PHY_OWNER : 16;
    ///< PHY maintains the ID of the current CPI client that has exclusive
    ///< access to the interface. Used for CPI arbitration. LM is not permitted
    ///< to write to this register.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpi_msg_cpi_phy_owner_reg_t;

#define UC_CPI_MSG_CPI_PHY_OWNER_DEFAULT (0x00000000U)
#define UC_CPI_MSG_CPI_PHY_OWNER_RD_MASK (0x0000ffffU)
#define UC_CPI_MSG_CPI_PHY_OWNER_WR_MASK (0x0000ffffU)


///< PHY maintains the ID of the current CPI client that has exclusive
///< access to the interface. Used for CPI arbitration. LM is not permitted
///< to write to this register.
#define UC_CPI_MSG_CPI_PHY_OWNER_CPI_PHY_OWNER_BF_OFF ( 0)
#define UC_CPI_MSG_CPI_PHY_OWNER_CPI_PHY_OWNER_BF_WID (16)
#define UC_CPI_MSG_CPI_PHY_OWNER_CPI_PHY_OWNER_BF_MSK (0x0000FFFF)
#define UC_CPI_MSG_CPI_PHY_OWNER_CPI_PHY_OWNER_BF_DEF (0x00000000)


/** @brief UC_CPI_REGS_MSG_UC_CPI_REGS_CPI_RESERVED register description at address offset 0xc
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPI_regs_MSG/UC_CPI_regs/cpi_reserved
  * CPI - Reserved
  */

typedef union {
  struct {
    uint32_t CPI_RESERVED : 32;
    ///< Reserved Space
    ///< AccessType="NA" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpi_msg_cpi_reserved_reg_t;

#define UC_CPI_MSG_CPI_RESERVED_DEFAULT (0x00000000U)
#define UC_CPI_MSG_CPI_RESERVED_RD_MASK (0x00000000U)
#define UC_CPI_MSG_CPI_RESERVED_WR_MASK (0x00000000U)


///< Reserved Space
#define UC_CPI_MSG_CPI_RESERVED_CPI_RESERVED_BF_OFF ( 0)
#define UC_CPI_MSG_CPI_RESERVED_CPI_RESERVED_BF_WID (32)
#define UC_CPI_MSG_CPI_RESERVED_CPI_RESERVED_BF_MSK (0xFFFFFFFF)
#define UC_CPI_MSG_CPI_RESERVED_CPI_RESERVED_BF_DEF (0x00000000)


/** @brief UC_CPI_REGS_MSG_UC_CPI_REGS_CPI_STATUS_0 register description at address offset 0x10
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPI_regs_MSG/UC_CPI_regs/cpi_status_0
  * CPI Status Register 0
  */

typedef union {
  struct {
    uint32_t CPI_STATUS_0 : 32;
    ///< Reserved Space
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpi_msg_cpi_stat_0_reg_t;

#define UC_CPI_MSG_CPI_STAT_0_DEFAULT (0x00000000U)
#define UC_CPI_MSG_CPI_STAT_0_RD_MASK (0xffffffffU)
#define UC_CPI_MSG_CPI_STAT_0_WR_MASK (0xffffffffU)


///< Reserved Space
#define UC_CPI_MSG_CPI_STAT_0_CPI_STAT_0_BF_OFF ( 0)
#define UC_CPI_MSG_CPI_STAT_0_CPI_STAT_0_BF_WID (32)
#define UC_CPI_MSG_CPI_STAT_0_CPI_STAT_0_BF_MSK (0xFFFFFFFF)
#define UC_CPI_MSG_CPI_STAT_0_CPI_STAT_0_BF_DEF (0x00000000)


/** @brief UC_CPI_REGS_MSG_UC_CPI_REGS_CPI_STATUS_1 register description at address offset 0x14
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPI_regs_MSG/UC_CPI_regs/cpi_status_1
  * CPI Status Register 1
  */

typedef union {
  struct {
    uint32_t CPI_STATUS_1 : 32;
    ///< Reserved Space
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpi_msg_cpi_stat_1_reg_t;

#define UC_CPI_MSG_CPI_STAT_1_DEFAULT (0x00000000U)
#define UC_CPI_MSG_CPI_STAT_1_RD_MASK (0xffffffffU)
#define UC_CPI_MSG_CPI_STAT_1_WR_MASK (0xffffffffU)


///< Reserved Space
#define UC_CPI_MSG_CPI_STAT_1_CPI_STAT_1_BF_OFF ( 0)
#define UC_CPI_MSG_CPI_STAT_1_CPI_STAT_1_BF_WID (32)
#define UC_CPI_MSG_CPI_STAT_1_CPI_STAT_1_BF_MSK (0xFFFFFFFF)
#define UC_CPI_MSG_CPI_STAT_1_CPI_STAT_1_BF_DEF (0x00000000)


/** @brief UC_CPI_REGS_MSG_UC_CPI_REGS_CPI_STATUS_2 register description at address offset 0x18
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPI_regs_MSG/UC_CPI_regs/cpi_status_2
  * CPI Status Register 2
  */

typedef union {
  struct {
    uint32_t CPI_STATUS_2 : 32;
    ///< Reserved Space
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpi_msg_cpi_stat_2_reg_t;

#define UC_CPI_MSG_CPI_STAT_2_DEFAULT (0x00000000U)
#define UC_CPI_MSG_CPI_STAT_2_RD_MASK (0xffffffffU)
#define UC_CPI_MSG_CPI_STAT_2_WR_MASK (0xffffffffU)


///< Reserved Space
#define UC_CPI_MSG_CPI_STAT_2_CPI_STAT_2_BF_OFF ( 0)
#define UC_CPI_MSG_CPI_STAT_2_CPI_STAT_2_BF_WID (32)
#define UC_CPI_MSG_CPI_STAT_2_CPI_STAT_2_BF_MSK (0xFFFFFFFF)
#define UC_CPI_MSG_CPI_STAT_2_CPI_STAT_2_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define UC_CPI_MSG_CPI_LM_CMD_DATA_REG(_BASE) ((uc_cpi_msg_cpi_lm_cmd_data_reg_t*) UC_CPI_MSG_CPI_LM_CMD_DATA_ADR(_BASE))
#define UC_CPI_MSG_CPI_PHY_CMD_DATA_REG(_BASE) ((uc_cpi_msg_cpi_phy_cmd_data_reg_t*) UC_CPI_MSG_CPI_PHY_CMD_DATA_ADR(_BASE))
#define UC_CPI_MSG_CPI_PHY_OWNER_REG(_BASE) ((uc_cpi_msg_cpi_phy_owner_reg_t*) UC_CPI_MSG_CPI_PHY_OWNER_ADR(_BASE))
#define UC_CPI_MSG_CPI_RESERVED_REG(_BASE) ((uc_cpi_msg_cpi_reserved_reg_t*) UC_CPI_MSG_CPI_RESERVED_ADR(_BASE))
#define UC_CPI_MSG_CPI_STAT_0_REG(_BASE) ((uc_cpi_msg_cpi_stat_0_reg_t*) UC_CPI_MSG_CPI_STAT_0_ADR(_BASE))
#define UC_CPI_MSG_CPI_STAT_1_REG(_BASE) ((uc_cpi_msg_cpi_stat_1_reg_t*) UC_CPI_MSG_CPI_STAT_1_ADR(_BASE))
#define UC_CPI_MSG_CPI_STAT_2_REG(_BASE) ((uc_cpi_msg_cpi_stat_2_reg_t*) UC_CPI_MSG_CPI_STAT_2_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    uc_cpi_msg_cpi_lm_cmd_data_reg_t CPI_LM_CMD_DATA; /*< Address offset = 0x0 */
    uc_cpi_msg_cpi_phy_cmd_data_reg_t CPI_PHY_CMD_DATA; /*< Address offset = 0x4 */
    uc_cpi_msg_cpi_phy_owner_reg_t CPI_PHY_OWNER; /*< Address offset = 0x8 */
    uc_cpi_msg_cpi_reserved_reg_t CPI_RESERVED; /*< Address offset = 0xc */
    uc_cpi_msg_cpi_stat_0_reg_t CPI_STAT_0; /*< Address offset = 0x10 */
    uc_cpi_msg_cpi_stat_1_reg_t CPI_STAT_1; /*< Address offset = 0x14 */
    uc_cpi_msg_cpi_stat_2_reg_t CPI_STAT_2; /*< Address offset = 0x18 */
} uc_cpi_msg_t;     // size: 0x001c

// AddressSpace struct pointer
//
#define DLNK_JESD0_PHY_UC_CPI0  ((uc_cpi_msg_t*) DLNK_JESD0_PHY_UC_CPI0_BASE)
#define DLNK_JESD0_PHY_UC_CPI1  ((uc_cpi_msg_t*) DLNK_JESD0_PHY_UC_CPI1_BASE)
#define DLNK_JESD0_PHY_UC_CPI2  ((uc_cpi_msg_t*) DLNK_JESD0_PHY_UC_CPI2_BASE)
#define DLNK_JESD1_PHY_UC_CPI0  ((uc_cpi_msg_t*) DLNK_JESD1_PHY_UC_CPI0_BASE)
#define DLNK_JESD1_PHY_UC_CPI1  ((uc_cpi_msg_t*) DLNK_JESD1_PHY_UC_CPI1_BASE)
#define DLNK_JESD1_PHY_UC_CPI2  ((uc_cpi_msg_t*) DLNK_JESD1_PHY_UC_CPI2_BASE)
#define DLNK_JESD2_PHY_UC_CPI0  ((uc_cpi_msg_t*) DLNK_JESD2_PHY_UC_CPI0_BASE)
#define DLNK_JESD2_PHY_UC_CPI1  ((uc_cpi_msg_t*) DLNK_JESD2_PHY_UC_CPI1_BASE)
#define DLNK_JESD2_PHY_UC_CPI2  ((uc_cpi_msg_t*) DLNK_JESD2_PHY_UC_CPI2_BASE)
#define DLNK_JESD3_PHY_UC_CPI0  ((uc_cpi_msg_t*) DLNK_JESD3_PHY_UC_CPI0_BASE)
#define DLNK_JESD3_PHY_UC_CPI1  ((uc_cpi_msg_t*) DLNK_JESD3_PHY_UC_CPI1_BASE)
#define DLNK_JESD3_PHY_UC_CPI2  ((uc_cpi_msg_t*) DLNK_JESD3_PHY_UC_CPI2_BASE)

// ******************************************* /Address Space

#endif      // _UC_CPI_MSG_H_

