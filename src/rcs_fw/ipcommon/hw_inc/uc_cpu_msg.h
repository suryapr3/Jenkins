#ifndef _UC_CPU_MSG_H_
#define _UC_CPU_MSG_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_JESD0_PHY_UC_CPU_BASE  ( 0x06000200 )
#define DLNK_JESD1_PHY_UC_CPU_BASE  ( 0x06800200 )
#define DLNK_JESD2_PHY_UC_CPU_BASE  ( 0x07000200 )
#define DLNK_JESD3_PHY_UC_CPU_BASE  ( 0x07800200 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define UC_CPU_MSG_CPU_CTRL0_OFFSET ( 0x00000000U )
#define UC_CPU_MSG_CPU_TB0_OFFSET ( 0x00000004U )
#define UC_CPU_MSG_CPU_TB1_OFFSET ( 0x00000008U )
#define UC_CPU_MSG_CPU_TB2_OFFSET ( 0x0000000cU )
#define UC_CPU_MSG_CPU_TB3_OFFSET ( 0x00000010U )
#define UC_CPU_MSG_CPU_TB4_OFFSET ( 0x00000014U )
#define UC_CPU_MSG_CPU_INFO_OFFSET ( 0x00000018U )
#define UC_CPU_MSG_CPU_CTRL1_OFFSET ( 0x0000001cU )
#define UC_CPU_MSG_FW_STAT_OFFSET ( 0x00000020U )
#define UC_CPU_MSG_CPU_CTRL2_OFFSET ( 0x00000024U )
#define UC_CPU_MSG_RAM_CTRL_OFFSET ( 0x00000028U )
#define UC_CPU_MSG_IRAM0_OFFSET ( 0x0000002cU )
#define UC_CPU_MSG_DRAM0_OFFSET ( 0x00000030U )
#define UC_CPU_MSG_TRACE_OFFSET ( 0x00000034U )
#define UC_CPU_MSG_FIFO_OFFSET ( 0x00000038U )
#define UC_CPU_MSG_CPU_STAT0_OFFSET ( 0x0000003cU )
#define UC_CPU_MSG_CPU_STAT1_OFFSET ( 0x00000040U )
#define UC_CPU_MSG_CPU_FIFO_OFFSET ( 0x00000044U )
#define UC_CPU_MSG_CPU_APB_CTRL0_OFFSET ( 0x00000048U )
#define UC_CPU_MSG_CPU_APB_CTRL1_OFFSET ( 0x0000004cU )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define UC_CPU_MSG_CPU_CTRL0_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_CTRL0_OFFSET ) ))
#define UC_CPU_MSG_CPU_TB0_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_TB0_OFFSET ) ))
#define UC_CPU_MSG_CPU_TB1_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_TB1_OFFSET ) ))
#define UC_CPU_MSG_CPU_TB2_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_TB2_OFFSET ) ))
#define UC_CPU_MSG_CPU_TB3_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_TB3_OFFSET ) ))
#define UC_CPU_MSG_CPU_TB4_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_TB4_OFFSET ) ))
#define UC_CPU_MSG_CPU_INFO_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_INFO_OFFSET ) ))
#define UC_CPU_MSG_CPU_CTRL1_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_CTRL1_OFFSET ) ))
#define UC_CPU_MSG_FW_STAT_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_FW_STAT_OFFSET ) ))
#define UC_CPU_MSG_CPU_CTRL2_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_CTRL2_OFFSET ) ))
#define UC_CPU_MSG_RAM_CTRL_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_RAM_CTRL_OFFSET ) ))
#define UC_CPU_MSG_IRAM0_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_IRAM0_OFFSET ) ))
#define UC_CPU_MSG_DRAM0_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_DRAM0_OFFSET ) ))
#define UC_CPU_MSG_TRACE_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_TRACE_OFFSET ) ))
#define UC_CPU_MSG_FIFO_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_FIFO_OFFSET ) ))
#define UC_CPU_MSG_CPU_STAT0_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_STAT0_OFFSET ) ))
#define UC_CPU_MSG_CPU_STAT1_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_STAT1_OFFSET ) ))
#define UC_CPU_MSG_CPU_FIFO_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_FIFO_OFFSET ) ))
#define UC_CPU_MSG_CPU_APB_CTRL0_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_APB_CTRL0_OFFSET ) ))
#define UC_CPU_MSG_CPU_APB_CTRL1_ADR(_BASE) (( ( _BASE ) + ( UC_CPU_MSG_CPU_APB_CTRL1_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_CTRL0 register description at address offset 0x0
  *
  * Register default value:        0x00000004
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_ctrl0
  * placeholder
  */

typedef union {
  struct {
    uint32_t CPU_STATVECTORSEL : 1;
    ///< Select between one of two stationary vector bases:
    ///< 0: Default
    ///< 1: Alternative
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t CPU_OCDHALTONRESET : 1;
    ///< Enters processor into OCDHaltMode if this signal sampled asserted
    ///< on reset.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t CPU_RUNSTALL : 1;
    ///< Stalls the processor
    ///< AccessType="RW" BitOffset="2" ResetValue="0x1"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_ctrl0_reg_t;

#define UC_CPU_MSG_CPU_CTRL0_DEFAULT (0x00000004U)
#define UC_CPU_MSG_CPU_CTRL0_RD_MASK (0x00000007U)
#define UC_CPU_MSG_CPU_CTRL0_WR_MASK (0x00000007U)


///< Select between one of two stationary vector bases:
///< 0: Default
///< 1: Alternative
#define UC_CPU_MSG_CPU_CTRL0_CPU_STATVECTORSEL_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_CTRL0_CPU_STATVECTORSEL_BF_WID ( 1)
#define UC_CPU_MSG_CPU_CTRL0_CPU_STATVECTORSEL_BF_MSK (0x00000001)
#define UC_CPU_MSG_CPU_CTRL0_CPU_STATVECTORSEL_BF_DEF (0x00000000)

///< Enters processor into OCDHaltMode if this signal sampled asserted
///< on reset.
#define UC_CPU_MSG_CPU_CTRL0_CPU_OCDHALTONRST_BF_OFF ( 1)
#define UC_CPU_MSG_CPU_CTRL0_CPU_OCDHALTONRST_BF_WID ( 1)
#define UC_CPU_MSG_CPU_CTRL0_CPU_OCDHALTONRST_BF_MSK (0x00000002)
#define UC_CPU_MSG_CPU_CTRL0_CPU_OCDHALTONRST_BF_DEF (0x00000000)

///< Stalls the processor
#define UC_CPU_MSG_CPU_CTRL0_CPU_RUNSTALL_BF_OFF ( 2)
#define UC_CPU_MSG_CPU_CTRL0_CPU_RUNSTALL_BF_WID ( 1)
#define UC_CPU_MSG_CPU_CTRL0_CPU_RUNSTALL_BF_MSK (0x00000004)
#define UC_CPU_MSG_CPU_CTRL0_CPU_RUNSTALL_BF_DEF (0x00000004)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_TB0 register description at address offset 0x4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_tb0
  * placeholder
  */

typedef union {
  struct {
    uint32_t TB_REG0 : 32;
    ///< No functionality. It is connected to probe cells.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_tb0_reg_t;

#define UC_CPU_MSG_CPU_TB0_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_TB0_RD_MASK (0xffffffffU)
#define UC_CPU_MSG_CPU_TB0_WR_MASK (0xffffffffU)


///< No functionality. It is connected to probe cells.
#define UC_CPU_MSG_CPU_TB0_TB_REG0_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_TB0_TB_REG0_BF_WID (32)
#define UC_CPU_MSG_CPU_TB0_TB_REG0_BF_MSK (0xFFFFFFFF)
#define UC_CPU_MSG_CPU_TB0_TB_REG0_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_TB1 register description at address offset 0x8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_tb1
  * placeholder
  */

typedef union {
  struct {
    uint32_t TB_REG1 : 32;
    ///< No functionality. It is connected to probe cells.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_tb1_reg_t;

#define UC_CPU_MSG_CPU_TB1_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_TB1_RD_MASK (0xffffffffU)
#define UC_CPU_MSG_CPU_TB1_WR_MASK (0xffffffffU)


///< No functionality. It is connected to probe cells.
#define UC_CPU_MSG_CPU_TB1_TB_REG1_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_TB1_TB_REG1_BF_WID (32)
#define UC_CPU_MSG_CPU_TB1_TB_REG1_BF_MSK (0xFFFFFFFF)
#define UC_CPU_MSG_CPU_TB1_TB_REG1_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_TB2 register description at address offset 0xc
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_tb2
  * placeholder
  */

typedef union {
  struct {
    uint32_t TB_REG2 : 32;
    ///< No functionality. It is connected to probe cells.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_tb2_reg_t;

#define UC_CPU_MSG_CPU_TB2_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_TB2_RD_MASK (0xffffffffU)
#define UC_CPU_MSG_CPU_TB2_WR_MASK (0xffffffffU)


///< No functionality. It is connected to probe cells.
#define UC_CPU_MSG_CPU_TB2_TB_REG2_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_TB2_TB_REG2_BF_WID (32)
#define UC_CPU_MSG_CPU_TB2_TB_REG2_BF_MSK (0xFFFFFFFF)
#define UC_CPU_MSG_CPU_TB2_TB_REG2_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_TB3 register description at address offset 0x10
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_tb3
  * placeholder
  */

typedef union {
  struct {
    uint32_t TB_REG3 : 32;
    ///< No functionality. It is connected to probe cells.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_tb3_reg_t;

#define UC_CPU_MSG_CPU_TB3_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_TB3_RD_MASK (0xffffffffU)
#define UC_CPU_MSG_CPU_TB3_WR_MASK (0xffffffffU)


///< No functionality. It is connected to probe cells.
#define UC_CPU_MSG_CPU_TB3_TB_REG3_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_TB3_TB_REG3_BF_WID (32)
#define UC_CPU_MSG_CPU_TB3_TB_REG3_BF_MSK (0xFFFFFFFF)
#define UC_CPU_MSG_CPU_TB3_TB_REG3_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_TB4 register description at address offset 0x14
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_tb4
  * placeholder
  */

typedef union {
  struct {
    uint32_t TB_REG4 : 32;
    ///< No functionality. It is connected to probe cells.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_tb4_reg_t;

#define UC_CPU_MSG_CPU_TB4_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_TB4_RD_MASK (0xffffffffU)
#define UC_CPU_MSG_CPU_TB4_WR_MASK (0xffffffffU)


///< No functionality. It is connected to probe cells.
#define UC_CPU_MSG_CPU_TB4_TB_REG4_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_TB4_TB_REG4_BF_WID (32)
#define UC_CPU_MSG_CPU_TB4_TB_REG4_BF_MSK (0xFFFFFFFF)
#define UC_CPU_MSG_CPU_TB4_TB_REG4_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_INFO register description at address offset 0x18
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_info
  * placeholder
  */

typedef union {
  struct {
    uint32_t FW_VERSION : 32;
    ///< FW Version - Mailbox
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_info_reg_t;

#define UC_CPU_MSG_CPU_INFO_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_INFO_RD_MASK (0xffffffffU)
#define UC_CPU_MSG_CPU_INFO_WR_MASK (0xffffffffU)


///< FW Version - Mailbox
#define UC_CPU_MSG_CPU_INFO_FW_VER_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_INFO_FW_VER_BF_WID (32)
#define UC_CPU_MSG_CPU_INFO_FW_VER_BF_MSK (0xFFFFFFFF)
#define UC_CPU_MSG_CPU_INFO_FW_VER_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_CTRL1 register description at address offset 0x1c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_ctrl1
  * placeholder
  */

typedef union {
  struct {
    uint32_t NMI_ICU_MUX_SEL : 5;
    ///< Non Masked Interrupt Mux Select.
    ///< 5'd0    : i_wdt_irq
    ///< 5'd1    : i_icu_irq
    ///< 5'd2    : i_icu_cpi_0
    ///< 5'd3    : i_icu_cpi_1
    ///< 5'd4    : i_icu_cpi_2
    ///< 5'd5    : i_icu_gpi_4
    ///< 5'd6    : i_uc_gpi_5
    ///< 5'd7    : i_uc_gpi_6
    ///< 5'd8    : i_uc_gpi_7
    ///< 5'd9    : i_uc_gpi_8
    ///< 5'd10   : i_uc_gpi_9
    ///< 5'd11   : i_icu_gpi_10
    ///< 5'd12   : i_uc_gpi_11
    ///< 5'd13   : i_uc_gpi_12
    ///< 5'd14   : i_uc_gpi_13
    ///< 5'd15   : i_uc_gpi_14
    ///< 5'd16   : i_uc_gpi_15
    ///< 5'd17   : i_icu_gpi_16
    ///< 5'd18   : i_icu_gpi_17
    ///< 5'd19   : i_uc_gpi_18
    ///< 5'd20   : i_uc_gpi_19
    ///< 5'd21   : i_uc_gpi_20
    ///< 5'd22   : i_uc_gpi_21
    ///< 5'd23   : i_uc_gpi_22
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 27;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_ctrl1_reg_t;

#define UC_CPU_MSG_CPU_CTRL1_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_CTRL1_RD_MASK (0x0000001fU)
#define UC_CPU_MSG_CPU_CTRL1_WR_MASK (0x0000001fU)


///< Non Masked Interrupt Mux Select.
///< 5'd0    : i_wdt_irq
///< 5'd1    : i_icu_irq
///< 5'd2    : i_icu_cpi_0
///< 5'd3    : i_icu_cpi_1
///< 5'd4    : i_icu_cpi_2
///< 5'd5    : i_icu_gpi_4
///< 5'd6    : i_uc_gpi_5
///< 5'd7    : i_uc_gpi_6
///< 5'd8    : i_uc_gpi_7
///< 5'd9    : i_uc_gpi_8
///< 5'd10   : i_uc_gpi_9
///< 5'd11   : i_icu_gpi_10
///< 5'd12   : i_uc_gpi_11
///< 5'd13   : i_uc_gpi_12
///< 5'd14   : i_uc_gpi_13
///< 5'd15   : i_uc_gpi_14
///< 5'd16   : i_uc_gpi_15
///< 5'd17   : i_icu_gpi_16
///< 5'd18   : i_icu_gpi_17
///< 5'd19   : i_uc_gpi_18
///< 5'd20   : i_uc_gpi_19
///< 5'd21   : i_uc_gpi_20
///< 5'd22   : i_uc_gpi_21
///< 5'd23   : i_uc_gpi_22
#define UC_CPU_MSG_CPU_CTRL1_NMI_ICU_MUX_SEL_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_CTRL1_NMI_ICU_MUX_SEL_BF_WID ( 5)
#define UC_CPU_MSG_CPU_CTRL1_NMI_ICU_MUX_SEL_BF_MSK (0x0000001F)
#define UC_CPU_MSG_CPU_CTRL1_NMI_ICU_MUX_SEL_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_FW_STATUS register description at address offset 0x20
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/fw_status
  * placeholder
  */

typedef union {
  struct {
    uint32_t FW_STATUS : 32;
    ///< FW Status - Mailbox
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpu_msg_fw_stat_reg_t;

#define UC_CPU_MSG_FW_STAT_DEFAULT (0x00000000U)
#define UC_CPU_MSG_FW_STAT_RD_MASK (0xffffffffU)
#define UC_CPU_MSG_FW_STAT_WR_MASK (0xffffffffU)


///< FW Status - Mailbox
#define UC_CPU_MSG_FW_STAT_FW_STAT_BF_OFF ( 0)
#define UC_CPU_MSG_FW_STAT_FW_STAT_BF_WID (32)
#define UC_CPU_MSG_FW_STAT_FW_STAT_BF_MSK (0xFFFFFFFF)
#define UC_CPU_MSG_FW_STAT_FW_STAT_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_CTRL2 register description at address offset 0x24
  *
  * Register default value:        0x00000001
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_ctrl2
  * placeholder
  */

typedef union {
  struct {
    uint32_t CPU_ATRESETN : 1;
    ///< Legacy register - Disconnected.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x1"
    uint32_t CPU_BREAKIN : 1;
    ///< External debug interrupt
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t CPU_BREAKOUTACK : 1;
    ///< Acknowledged that BreakOut has been received. Clears BreakOut
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t CPU_CROSSTRIGGERIN : 1;
    ///< Stops tracing
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t CPU_CROSSTRIGGEROUTACK : 1;
    ///< Acknowledges that CrossTriggerOut has been received. Clears CrossTriggerOut
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t CPU_TMODECLKGATEOVERRIDE_RESERVED : 1;
    ///< Special test mode signal to overrides clock gating during scan testing
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t CPU_PDEBUGENABLE : 1;
    ///< Gates the clock to the flip-flops in the Traceport logic.
    ///< AccessType="RW" BitOffset="6" ResetValue="0x0"
    uint32_t  : 25;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_ctrl2_reg_t;

#define UC_CPU_MSG_CPU_CTRL2_DEFAULT (0x00000001U)
#define UC_CPU_MSG_CPU_CTRL2_RD_MASK (0x0000007fU)
#define UC_CPU_MSG_CPU_CTRL2_WR_MASK (0x0000007fU)


///< Legacy register - Disconnected.
#define UC_CPU_MSG_CPU_CTRL2_CPU_ATRSTN_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_CTRL2_CPU_ATRSTN_BF_WID ( 1)
#define UC_CPU_MSG_CPU_CTRL2_CPU_ATRSTN_BF_MSK (0x00000001)
#define UC_CPU_MSG_CPU_CTRL2_CPU_ATRSTN_BF_DEF (0x00000001)

///< External debug interrupt
#define UC_CPU_MSG_CPU_CTRL2_CPU_BREAKIN_BF_OFF ( 1)
#define UC_CPU_MSG_CPU_CTRL2_CPU_BREAKIN_BF_WID ( 1)
#define UC_CPU_MSG_CPU_CTRL2_CPU_BREAKIN_BF_MSK (0x00000002)
#define UC_CPU_MSG_CPU_CTRL2_CPU_BREAKIN_BF_DEF (0x00000000)

///< Acknowledged that BreakOut has been received. Clears BreakOut
#define UC_CPU_MSG_CPU_CTRL2_CPU_BREAKOUTACK_BF_OFF ( 2)
#define UC_CPU_MSG_CPU_CTRL2_CPU_BREAKOUTACK_BF_WID ( 1)
#define UC_CPU_MSG_CPU_CTRL2_CPU_BREAKOUTACK_BF_MSK (0x00000004)
#define UC_CPU_MSG_CPU_CTRL2_CPU_BREAKOUTACK_BF_DEF (0x00000000)

///< Stops tracing
#define UC_CPU_MSG_CPU_CTRL2_CPU_CROSSTRIGIN_BF_OFF ( 3)
#define UC_CPU_MSG_CPU_CTRL2_CPU_CROSSTRIGIN_BF_WID ( 1)
#define UC_CPU_MSG_CPU_CTRL2_CPU_CROSSTRIGIN_BF_MSK (0x00000008)
#define UC_CPU_MSG_CPU_CTRL2_CPU_CROSSTRIGIN_BF_DEF (0x00000000)

///< Acknowledges that CrossTriggerOut has been received. Clears CrossTriggerOut
#define UC_CPU_MSG_CPU_CTRL2_CPU_CROSSTRIGOUTACK_BF_OFF ( 4)
#define UC_CPU_MSG_CPU_CTRL2_CPU_CROSSTRIGOUTACK_BF_WID ( 1)
#define UC_CPU_MSG_CPU_CTRL2_CPU_CROSSTRIGOUTACK_BF_MSK (0x00000010)
#define UC_CPU_MSG_CPU_CTRL2_CPU_CROSSTRIGOUTACK_BF_DEF (0x00000000)

///< Special test mode signal to overrides clock gating during scan testing
#define UC_CPU_MSG_CPU_CTRL2_CPU_TMODECLKGATEOVRD_RESERVED_BF_OFF ( 5)
#define UC_CPU_MSG_CPU_CTRL2_CPU_TMODECLKGATEOVRD_RESERVED_BF_WID ( 1)
#define UC_CPU_MSG_CPU_CTRL2_CPU_TMODECLKGATEOVRD_RESERVED_BF_MSK (0x00000020)
#define UC_CPU_MSG_CPU_CTRL2_CPU_TMODECLKGATEOVRD_RESERVED_BF_DEF (0x00000000)

///< Gates the clock to the flip-flops in the Traceport logic.
#define UC_CPU_MSG_CPU_CTRL2_CPU_PDBGEN_BF_OFF ( 6)
#define UC_CPU_MSG_CPU_CTRL2_CPU_PDBGEN_BF_WID ( 1)
#define UC_CPU_MSG_CPU_CTRL2_CPU_PDBGEN_BF_MSK (0x00000040)
#define UC_CPU_MSG_CPU_CTRL2_CPU_PDBGEN_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_RAM_CTRL register description at address offset 0x28
  *
  * Register default value:        0x08000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/ram_ctrl
  * placeholder
  */

typedef union {
  struct {
    uint32_t IRAML_PWR_MGMT : 6;
    ///< Memory IRAM0 Power Management
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t IRAMH_PWR_MGMT : 6;
    ///< Memory IRAM1 Power Management
    ///< AccessType="RW" BitOffset="6" ResetValue="0x0"
    uint32_t DRAM_PWR_MGMT : 6;
    ///< Memory DRAM Power Management
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t TRAM_PWR_MGMT : 6;
    ///< Memory Trace Memory Power Management
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t TIE_QUEUE_PWR_MGMT : 4;
    ///< Memory FIFO Memory Power Management
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_ram_ctrl_reg_t;

#define UC_CPU_MSG_RAM_CTRL_DEFAULT (0x08000000U)
#define UC_CPU_MSG_RAM_CTRL_RD_MASK (0x0fffffffU)
#define UC_CPU_MSG_RAM_CTRL_WR_MASK (0x0fffffffU)


///< Memory IRAM0 Power Management
#define UC_CPU_MSG_RAM_CTRL_IRAML_PWR_MGMT_BF_OFF ( 0)
#define UC_CPU_MSG_RAM_CTRL_IRAML_PWR_MGMT_BF_WID ( 6)
#define UC_CPU_MSG_RAM_CTRL_IRAML_PWR_MGMT_BF_MSK (0x0000003F)
#define UC_CPU_MSG_RAM_CTRL_IRAML_PWR_MGMT_BF_DEF (0x00000000)

///< Memory IRAM1 Power Management
#define UC_CPU_MSG_RAM_CTRL_IRAMH_PWR_MGMT_BF_OFF ( 6)
#define UC_CPU_MSG_RAM_CTRL_IRAMH_PWR_MGMT_BF_WID ( 6)
#define UC_CPU_MSG_RAM_CTRL_IRAMH_PWR_MGMT_BF_MSK (0x00000FC0)
#define UC_CPU_MSG_RAM_CTRL_IRAMH_PWR_MGMT_BF_DEF (0x00000000)

///< Memory DRAM Power Management
#define UC_CPU_MSG_RAM_CTRL_DRAM_PWR_MGMT_BF_OFF (12)
#define UC_CPU_MSG_RAM_CTRL_DRAM_PWR_MGMT_BF_WID ( 6)
#define UC_CPU_MSG_RAM_CTRL_DRAM_PWR_MGMT_BF_MSK (0x0003F000)
#define UC_CPU_MSG_RAM_CTRL_DRAM_PWR_MGMT_BF_DEF (0x00000000)

///< Memory Trace Memory Power Management
#define UC_CPU_MSG_RAM_CTRL_TRAM_PWR_MGMT_BF_OFF (18)
#define UC_CPU_MSG_RAM_CTRL_TRAM_PWR_MGMT_BF_WID ( 6)
#define UC_CPU_MSG_RAM_CTRL_TRAM_PWR_MGMT_BF_MSK (0x00FC0000)
#define UC_CPU_MSG_RAM_CTRL_TRAM_PWR_MGMT_BF_DEF (0x00000000)

///< Memory FIFO Memory Power Management
#define UC_CPU_MSG_RAM_CTRL_TIE_QUE_PWR_MGMT_BF_OFF (24)
#define UC_CPU_MSG_RAM_CTRL_TIE_QUE_PWR_MGMT_BF_WID ( 4)
#define UC_CPU_MSG_RAM_CTRL_TIE_QUE_PWR_MGMT_BF_MSK (0x0F000000)
#define UC_CPU_MSG_RAM_CTRL_TIE_QUE_PWR_MGMT_BF_DEF (0x08000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_IRAM0 register description at address offset 0x2c
  *
  * Register default value:        0x0000018C
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/iram0
  * placeholder
  */

typedef union {
  struct {
    uint32_t FUSE_WPULSE_IRAM0 : 3;
    ///< Memory wpulse control
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t FUSE_RA_IRAM0 : 3;
    ///< Memory ra control
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t FUSE_WA_IRAM0 : 3;
    ///< Memory wa control
    ///< AccessType="RW" BitOffset="6" ResetValue="0x6"
    uint32_t FUSE_WMCE_IRAM0 : 4;
    ///< Memory wmce control
    ///< AccessType="RW" BitOffset="9" ResetValue="0x0"
    uint32_t FUSE_RMCE_IRAM0 : 4;
    ///< Memory rmce control
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t FUSE_MCE_IRAM0 : 1;
    ///< Memory mce control
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t FUSE_CLKBYP_IRAM0 : 1;
    ///< When enabled, the external clock control the read/write operation
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 13;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_iram0_reg_t;

#define UC_CPU_MSG_IRAM0_DEFAULT (0x0000018cU)
#define UC_CPU_MSG_IRAM0_RD_MASK (0x0007ffffU)
#define UC_CPU_MSG_IRAM0_WR_MASK (0x0007ffffU)


///< Memory wpulse control
#define UC_CPU_MSG_IRAM0_FUSE_WPULSE_IRAM0_BF_OFF ( 0)
#define UC_CPU_MSG_IRAM0_FUSE_WPULSE_IRAM0_BF_WID ( 3)
#define UC_CPU_MSG_IRAM0_FUSE_WPULSE_IRAM0_BF_MSK (0x00000007)
#define UC_CPU_MSG_IRAM0_FUSE_WPULSE_IRAM0_BF_DEF (0x00000004)

///< Memory ra control
#define UC_CPU_MSG_IRAM0_FUSE_RA_IRAM0_BF_OFF ( 3)
#define UC_CPU_MSG_IRAM0_FUSE_RA_IRAM0_BF_WID ( 3)
#define UC_CPU_MSG_IRAM0_FUSE_RA_IRAM0_BF_MSK (0x00000038)
#define UC_CPU_MSG_IRAM0_FUSE_RA_IRAM0_BF_DEF (0x00000008)

///< Memory wa control
#define UC_CPU_MSG_IRAM0_FUSE_WA_IRAM0_BF_OFF ( 6)
#define UC_CPU_MSG_IRAM0_FUSE_WA_IRAM0_BF_WID ( 3)
#define UC_CPU_MSG_IRAM0_FUSE_WA_IRAM0_BF_MSK (0x000001C0)
#define UC_CPU_MSG_IRAM0_FUSE_WA_IRAM0_BF_DEF (0x00000180)

///< Memory wmce control
#define UC_CPU_MSG_IRAM0_FUSE_WMCE_IRAM0_BF_OFF ( 9)
#define UC_CPU_MSG_IRAM0_FUSE_WMCE_IRAM0_BF_WID ( 4)
#define UC_CPU_MSG_IRAM0_FUSE_WMCE_IRAM0_BF_MSK (0x00001E00)
#define UC_CPU_MSG_IRAM0_FUSE_WMCE_IRAM0_BF_DEF (0x00000000)

///< Memory rmce control
#define UC_CPU_MSG_IRAM0_FUSE_RMCE_IRAM0_BF_OFF (13)
#define UC_CPU_MSG_IRAM0_FUSE_RMCE_IRAM0_BF_WID ( 4)
#define UC_CPU_MSG_IRAM0_FUSE_RMCE_IRAM0_BF_MSK (0x0001E000)
#define UC_CPU_MSG_IRAM0_FUSE_RMCE_IRAM0_BF_DEF (0x00000000)

///< Memory mce control
#define UC_CPU_MSG_IRAM0_FUSE_MCE_IRAM0_BF_OFF (17)
#define UC_CPU_MSG_IRAM0_FUSE_MCE_IRAM0_BF_WID ( 1)
#define UC_CPU_MSG_IRAM0_FUSE_MCE_IRAM0_BF_MSK (0x00020000)
#define UC_CPU_MSG_IRAM0_FUSE_MCE_IRAM0_BF_DEF (0x00000000)

///< When enabled, the external clock control the read/write operation
#define UC_CPU_MSG_IRAM0_FUSE_CLKBYP_IRAM0_BF_OFF (18)
#define UC_CPU_MSG_IRAM0_FUSE_CLKBYP_IRAM0_BF_WID ( 1)
#define UC_CPU_MSG_IRAM0_FUSE_CLKBYP_IRAM0_BF_MSK (0x00040000)
#define UC_CPU_MSG_IRAM0_FUSE_CLKBYP_IRAM0_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_DRAM0 register description at address offset 0x30
  *
  * Register default value:        0x0000018C
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/dram0
  * placeholder
  */

typedef union {
  struct {
    uint32_t FUSE_WPULSE_DRAM0 : 3;
    ///< Memory wpulse control
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t FUSE_RA_DRAM0 : 3;
    ///< Memory ra control
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t FUSE_WA_DRAM0 : 3;
    ///< Memory wa control
    ///< AccessType="RW" BitOffset="6" ResetValue="0x6"
    uint32_t FUSE_WMCE_DRAM0 : 4;
    ///< Memory wmce control
    ///< AccessType="RW" BitOffset="9" ResetValue="0x0"
    uint32_t FUSE_RMCE_DRAM0 : 4;
    ///< Memory rmce control
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t FUSE_MCE_DRAM0 : 1;
    ///< Memory mce control
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t FUSE_CLKBYP_DRAM0 : 1;
    ///< When enabled, the external clock control the read/write operation
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 13;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_dram0_reg_t;

#define UC_CPU_MSG_DRAM0_DEFAULT (0x0000018cU)
#define UC_CPU_MSG_DRAM0_RD_MASK (0x0007ffffU)
#define UC_CPU_MSG_DRAM0_WR_MASK (0x0007ffffU)


///< Memory wpulse control
#define UC_CPU_MSG_DRAM0_FUSE_WPULSE_DRAM0_BF_OFF ( 0)
#define UC_CPU_MSG_DRAM0_FUSE_WPULSE_DRAM0_BF_WID ( 3)
#define UC_CPU_MSG_DRAM0_FUSE_WPULSE_DRAM0_BF_MSK (0x00000007)
#define UC_CPU_MSG_DRAM0_FUSE_WPULSE_DRAM0_BF_DEF (0x00000004)

///< Memory ra control
#define UC_CPU_MSG_DRAM0_FUSE_RA_DRAM0_BF_OFF ( 3)
#define UC_CPU_MSG_DRAM0_FUSE_RA_DRAM0_BF_WID ( 3)
#define UC_CPU_MSG_DRAM0_FUSE_RA_DRAM0_BF_MSK (0x00000038)
#define UC_CPU_MSG_DRAM0_FUSE_RA_DRAM0_BF_DEF (0x00000008)

///< Memory wa control
#define UC_CPU_MSG_DRAM0_FUSE_WA_DRAM0_BF_OFF ( 6)
#define UC_CPU_MSG_DRAM0_FUSE_WA_DRAM0_BF_WID ( 3)
#define UC_CPU_MSG_DRAM0_FUSE_WA_DRAM0_BF_MSK (0x000001C0)
#define UC_CPU_MSG_DRAM0_FUSE_WA_DRAM0_BF_DEF (0x00000180)

///< Memory wmce control
#define UC_CPU_MSG_DRAM0_FUSE_WMCE_DRAM0_BF_OFF ( 9)
#define UC_CPU_MSG_DRAM0_FUSE_WMCE_DRAM0_BF_WID ( 4)
#define UC_CPU_MSG_DRAM0_FUSE_WMCE_DRAM0_BF_MSK (0x00001E00)
#define UC_CPU_MSG_DRAM0_FUSE_WMCE_DRAM0_BF_DEF (0x00000000)

///< Memory rmce control
#define UC_CPU_MSG_DRAM0_FUSE_RMCE_DRAM0_BF_OFF (13)
#define UC_CPU_MSG_DRAM0_FUSE_RMCE_DRAM0_BF_WID ( 4)
#define UC_CPU_MSG_DRAM0_FUSE_RMCE_DRAM0_BF_MSK (0x0001E000)
#define UC_CPU_MSG_DRAM0_FUSE_RMCE_DRAM0_BF_DEF (0x00000000)

///< Memory mce control
#define UC_CPU_MSG_DRAM0_FUSE_MCE_DRAM0_BF_OFF (17)
#define UC_CPU_MSG_DRAM0_FUSE_MCE_DRAM0_BF_WID ( 1)
#define UC_CPU_MSG_DRAM0_FUSE_MCE_DRAM0_BF_MSK (0x00020000)
#define UC_CPU_MSG_DRAM0_FUSE_MCE_DRAM0_BF_DEF (0x00000000)

///< When enabled, the external clock control the read/write operation
#define UC_CPU_MSG_DRAM0_FUSE_CLKBYP_DRAM0_BF_OFF (18)
#define UC_CPU_MSG_DRAM0_FUSE_CLKBYP_DRAM0_BF_WID ( 1)
#define UC_CPU_MSG_DRAM0_FUSE_CLKBYP_DRAM0_BF_MSK (0x00040000)
#define UC_CPU_MSG_DRAM0_FUSE_CLKBYP_DRAM0_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_TRACE register description at address offset 0x34
  *
  * Register default value:        0x0000018C
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/trace
  * placeholder
  */

typedef union {
  struct {
    uint32_t FUSE_WPULSE_TRACE : 3;
    ///< Memory wpulse control
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t FUSE_RA_TRACE : 3;
    ///< Memory ra control
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t FUSE_WA_TRACE : 3;
    ///< Memory wa control
    ///< AccessType="RW" BitOffset="6" ResetValue="0x6"
    uint32_t FUSE_WMCE_TRACE : 4;
    ///< Memory wmce control
    ///< AccessType="RW" BitOffset="9" ResetValue="0x0"
    uint32_t FUSE_RMCE_TRACE : 4;
    ///< Memory rmce control
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t FUSE_MCE_TRACE : 1;
    ///< Memory mce control
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t FUSE_CLKBYP_TRACE : 1;
    ///< When enabled, the external clock control the read/write operation
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 13;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_trace_reg_t;

#define UC_CPU_MSG_TRACE_DEFAULT (0x0000018cU)
#define UC_CPU_MSG_TRACE_RD_MASK (0x0007ffffU)
#define UC_CPU_MSG_TRACE_WR_MASK (0x0007ffffU)


///< Memory wpulse control
#define UC_CPU_MSG_TRACE_FUSE_WPULSE_TRACE_BF_OFF ( 0)
#define UC_CPU_MSG_TRACE_FUSE_WPULSE_TRACE_BF_WID ( 3)
#define UC_CPU_MSG_TRACE_FUSE_WPULSE_TRACE_BF_MSK (0x00000007)
#define UC_CPU_MSG_TRACE_FUSE_WPULSE_TRACE_BF_DEF (0x00000004)

///< Memory ra control
#define UC_CPU_MSG_TRACE_FUSE_RA_TRACE_BF_OFF ( 3)
#define UC_CPU_MSG_TRACE_FUSE_RA_TRACE_BF_WID ( 3)
#define UC_CPU_MSG_TRACE_FUSE_RA_TRACE_BF_MSK (0x00000038)
#define UC_CPU_MSG_TRACE_FUSE_RA_TRACE_BF_DEF (0x00000008)

///< Memory wa control
#define UC_CPU_MSG_TRACE_FUSE_WA_TRACE_BF_OFF ( 6)
#define UC_CPU_MSG_TRACE_FUSE_WA_TRACE_BF_WID ( 3)
#define UC_CPU_MSG_TRACE_FUSE_WA_TRACE_BF_MSK (0x000001C0)
#define UC_CPU_MSG_TRACE_FUSE_WA_TRACE_BF_DEF (0x00000180)

///< Memory wmce control
#define UC_CPU_MSG_TRACE_FUSE_WMCE_TRACE_BF_OFF ( 9)
#define UC_CPU_MSG_TRACE_FUSE_WMCE_TRACE_BF_WID ( 4)
#define UC_CPU_MSG_TRACE_FUSE_WMCE_TRACE_BF_MSK (0x00001E00)
#define UC_CPU_MSG_TRACE_FUSE_WMCE_TRACE_BF_DEF (0x00000000)

///< Memory rmce control
#define UC_CPU_MSG_TRACE_FUSE_RMCE_TRACE_BF_OFF (13)
#define UC_CPU_MSG_TRACE_FUSE_RMCE_TRACE_BF_WID ( 4)
#define UC_CPU_MSG_TRACE_FUSE_RMCE_TRACE_BF_MSK (0x0001E000)
#define UC_CPU_MSG_TRACE_FUSE_RMCE_TRACE_BF_DEF (0x00000000)

///< Memory mce control
#define UC_CPU_MSG_TRACE_FUSE_MCE_TRACE_BF_OFF (17)
#define UC_CPU_MSG_TRACE_FUSE_MCE_TRACE_BF_WID ( 1)
#define UC_CPU_MSG_TRACE_FUSE_MCE_TRACE_BF_MSK (0x00020000)
#define UC_CPU_MSG_TRACE_FUSE_MCE_TRACE_BF_DEF (0x00000000)

///< When enabled, the external clock control the read/write operation
#define UC_CPU_MSG_TRACE_FUSE_CLKBYP_TRACE_BF_OFF (18)
#define UC_CPU_MSG_TRACE_FUSE_CLKBYP_TRACE_BF_WID ( 1)
#define UC_CPU_MSG_TRACE_FUSE_CLKBYP_TRACE_BF_MSK (0x00040000)
#define UC_CPU_MSG_TRACE_FUSE_CLKBYP_TRACE_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_FIFO register description at address offset 0x38
  *
  * Register default value:        0x000000C0
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/fifo
  * placeholder
  */

typedef union {
  struct {
    uint32_t FUSE_WPULSE_FIFO : 2;
    ///< Memory wpulse control
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FUSE_WA_FIFO : 3;
    ///< Memory wa control
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t FUSE_WMCE_FIFO : 3;
    ///< Memory wmce control
    ///< AccessType="RW" BitOffset="5" ResetValue="0x6"
    uint32_t FUSE_RMCE_FIFO : 3;
    ///< Memory rmce control
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t FUSE_MCE_FIFO : 1;
    ///< Memory mce control
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t FUSE_CLKBYP_FIFO : 1;
    ///< When enabled, the external clock control the read/write operation
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t  : 19;
    ///< Reserved
    ///< AccessType="RO" BitOffset="13" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_fifo_reg_t;

#define UC_CPU_MSG_FIFO_DEFAULT (0x000000c0U)
#define UC_CPU_MSG_FIFO_RD_MASK (0x00001fffU)
#define UC_CPU_MSG_FIFO_WR_MASK (0x00001fffU)


///< Memory wpulse control
#define UC_CPU_MSG_FIFO_FUSE_WPULSE_FIFO_BF_OFF ( 0)
#define UC_CPU_MSG_FIFO_FUSE_WPULSE_FIFO_BF_WID ( 2)
#define UC_CPU_MSG_FIFO_FUSE_WPULSE_FIFO_BF_MSK (0x00000003)
#define UC_CPU_MSG_FIFO_FUSE_WPULSE_FIFO_BF_DEF (0x00000000)

///< Memory wa control
#define UC_CPU_MSG_FIFO_FUSE_WA_FIFO_BF_OFF ( 2)
#define UC_CPU_MSG_FIFO_FUSE_WA_FIFO_BF_WID ( 3)
#define UC_CPU_MSG_FIFO_FUSE_WA_FIFO_BF_MSK (0x0000001C)
#define UC_CPU_MSG_FIFO_FUSE_WA_FIFO_BF_DEF (0x00000000)

///< Memory wmce control
#define UC_CPU_MSG_FIFO_FUSE_WMCE_FIFO_BF_OFF ( 5)
#define UC_CPU_MSG_FIFO_FUSE_WMCE_FIFO_BF_WID ( 3)
#define UC_CPU_MSG_FIFO_FUSE_WMCE_FIFO_BF_MSK (0x000000E0)
#define UC_CPU_MSG_FIFO_FUSE_WMCE_FIFO_BF_DEF (0x000000C0)

///< Memory rmce control
#define UC_CPU_MSG_FIFO_FUSE_RMCE_FIFO_BF_OFF ( 8)
#define UC_CPU_MSG_FIFO_FUSE_RMCE_FIFO_BF_WID ( 3)
#define UC_CPU_MSG_FIFO_FUSE_RMCE_FIFO_BF_MSK (0x00000700)
#define UC_CPU_MSG_FIFO_FUSE_RMCE_FIFO_BF_DEF (0x00000000)

///< Memory mce control
#define UC_CPU_MSG_FIFO_FUSE_MCE_FIFO_BF_OFF (11)
#define UC_CPU_MSG_FIFO_FUSE_MCE_FIFO_BF_WID ( 1)
#define UC_CPU_MSG_FIFO_FUSE_MCE_FIFO_BF_MSK (0x00000800)
#define UC_CPU_MSG_FIFO_FUSE_MCE_FIFO_BF_DEF (0x00000000)

///< When enabled, the external clock control the read/write operation
#define UC_CPU_MSG_FIFO_FUSE_CLKBYP_FIFO_BF_OFF (12)
#define UC_CPU_MSG_FIFO_FUSE_CLKBYP_FIFO_BF_WID ( 1)
#define UC_CPU_MSG_FIFO_FUSE_CLKBYP_FIFO_BF_MSK (0x00001000)
#define UC_CPU_MSG_FIFO_FUSE_CLKBYP_FIFO_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_STATUS0 register description at address offset 0x3c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_status0
  * placeholder
  */

typedef union {
  struct {
    uint32_t CPU_BREAKINACK : 1;
    ///< Acknowledges that BreakIn has been received.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t CPU_BREAKOUT : 1;
    ///< Indication from processor that it has entered OCD halt mode
    ///< AccessType="RO/V" BitOffset="1" ResetValue="0x0"
    uint32_t CPU_CROSSTRIGGERINACK : 1;
    ///< Acknowledges that CrossTriggerIn has been received
    ///< AccessType="RO/V" BitOffset="2" ResetValue="0x0"
    uint32_t CPU_CROSSTRIGGEROUT : 1;
    ///< Indication from processor that tracing has been stopped
    ///< AccessType="RO/V" BitOffset="3" ResetValue="0x0"
    uint32_t CPU_PRID : 16;
    ///< CPU ID
    ///< AccessType="RO/V" BitOffset="4" ResetValue="0x0"
    uint32_t  : 12;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_stat0_reg_t;

#define UC_CPU_MSG_CPU_STAT0_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_STAT0_RD_MASK (0x000fffffU)
#define UC_CPU_MSG_CPU_STAT0_WR_MASK (0x00000000U)


///< Acknowledges that BreakIn has been received.
#define UC_CPU_MSG_CPU_STAT0_CPU_BREAKINACK_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_STAT0_CPU_BREAKINACK_BF_WID ( 1)
#define UC_CPU_MSG_CPU_STAT0_CPU_BREAKINACK_BF_MSK (0x00000001)
#define UC_CPU_MSG_CPU_STAT0_CPU_BREAKINACK_BF_DEF (0x00000000)

///< Indication from processor that it has entered OCD halt mode
#define UC_CPU_MSG_CPU_STAT0_CPU_BREAKOUT_BF_OFF ( 1)
#define UC_CPU_MSG_CPU_STAT0_CPU_BREAKOUT_BF_WID ( 1)
#define UC_CPU_MSG_CPU_STAT0_CPU_BREAKOUT_BF_MSK (0x00000002)
#define UC_CPU_MSG_CPU_STAT0_CPU_BREAKOUT_BF_DEF (0x00000000)

///< Acknowledges that CrossTriggerIn has been received
#define UC_CPU_MSG_CPU_STAT0_CPU_CROSSTRIGINACK_BF_OFF ( 2)
#define UC_CPU_MSG_CPU_STAT0_CPU_CROSSTRIGINACK_BF_WID ( 1)
#define UC_CPU_MSG_CPU_STAT0_CPU_CROSSTRIGINACK_BF_MSK (0x00000004)
#define UC_CPU_MSG_CPU_STAT0_CPU_CROSSTRIGINACK_BF_DEF (0x00000000)

///< Indication from processor that tracing has been stopped
#define UC_CPU_MSG_CPU_STAT0_CPU_CROSSTRIGOUT_BF_OFF ( 3)
#define UC_CPU_MSG_CPU_STAT0_CPU_CROSSTRIGOUT_BF_WID ( 1)
#define UC_CPU_MSG_CPU_STAT0_CPU_CROSSTRIGOUT_BF_MSK (0x00000008)
#define UC_CPU_MSG_CPU_STAT0_CPU_CROSSTRIGOUT_BF_DEF (0x00000000)

///< CPU ID
#define UC_CPU_MSG_CPU_STAT0_CPU_PRID_BF_OFF ( 4)
#define UC_CPU_MSG_CPU_STAT0_CPU_PRID_BF_WID (16)
#define UC_CPU_MSG_CPU_STAT0_CPU_PRID_BF_MSK (0x000FFFF0)
#define UC_CPU_MSG_CPU_STAT0_CPU_PRID_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_STATUS1 register description at address offset 0x40
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_status1
  * placeholder
  */

typedef union {
  struct {
    uint32_t CPU_STATUS : 32;
    ///< CPU Status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_stat1_reg_t;

#define UC_CPU_MSG_CPU_STAT1_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_STAT1_RD_MASK (0xffffffffU)
#define UC_CPU_MSG_CPU_STAT1_WR_MASK (0x00000000U)


///< CPU Status
#define UC_CPU_MSG_CPU_STAT1_CPU_STAT_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_STAT1_CPU_STAT_BF_WID (32)
#define UC_CPU_MSG_CPU_STAT1_CPU_STAT_BF_MSK (0xFFFFFFFF)
#define UC_CPU_MSG_CPU_STAT1_CPU_STAT_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_FIFO register description at address offset 0x44
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_fifo
  * placeholder
  */

typedef union {
  struct {
    uint32_t CPU_FIFO_R_PTR_M : 10;
    ///< CPU FIFO Read Pointer Value
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t CPU_FIFO_W_PTR_M : 10;
    ///< CPU FIFO Write  Pointer Value
    ///< AccessType="RO/V" BitOffset="10" ResetValue="0x0"
    uint32_t  : 12;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_fifo_reg_t;

#define UC_CPU_MSG_CPU_FIFO_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_FIFO_RD_MASK (0x000fffffU)
#define UC_CPU_MSG_CPU_FIFO_WR_MASK (0x00000000U)


///< CPU FIFO Read Pointer Value
#define UC_CPU_MSG_CPU_FIFO_CPU_FIFO_R_PTR_M_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_FIFO_CPU_FIFO_R_PTR_M_BF_WID (10)
#define UC_CPU_MSG_CPU_FIFO_CPU_FIFO_R_PTR_M_BF_MSK (0x000003FF)
#define UC_CPU_MSG_CPU_FIFO_CPU_FIFO_R_PTR_M_BF_DEF (0x00000000)

///< CPU FIFO Write  Pointer Value
#define UC_CPU_MSG_CPU_FIFO_CPU_FIFO_W_PTR_M_BF_OFF (10)
#define UC_CPU_MSG_CPU_FIFO_CPU_FIFO_W_PTR_M_BF_WID (10)
#define UC_CPU_MSG_CPU_FIFO_CPU_FIFO_W_PTR_M_BF_MSK (0x000FFC00)
#define UC_CPU_MSG_CPU_FIFO_CPU_FIFO_W_PTR_M_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_APB_CTRL0 register description at address offset 0x48
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_apb_ctrl0
  * CPU APB Control
  */

typedef union {
  struct {
    uint32_t CPU_APB_BIT_EN_B_OVERRIDE_EN : 1;
    ///< This will give the register interface control of the bit_en_b interface.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_apb_ctrl0_reg_t;

#define UC_CPU_MSG_CPU_APB_CTRL0_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_APB_CTRL0_RD_MASK (0x00000001U)
#define UC_CPU_MSG_CPU_APB_CTRL0_WR_MASK (0x00000001U)


///< This will give the register interface control of the bit_en_b interface.
#define UC_CPU_MSG_CPU_APB_CTRL0_CPU_APB_BIT_EN_B_OVRD_EN_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_APB_CTRL0_CPU_APB_BIT_EN_B_OVRD_EN_BF_WID ( 1)
#define UC_CPU_MSG_CPU_APB_CTRL0_CPU_APB_BIT_EN_B_OVRD_EN_BF_MSK (0x00000001)
#define UC_CPU_MSG_CPU_APB_CTRL0_CPU_APB_BIT_EN_B_OVRD_EN_BF_DEF (0x00000000)


/** @brief UC_CPU_REGS_MSG_UC_CPU_REGS_CPU_APB_CTRL1 register description at address offset 0x4c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_CPU_regs_MSG/UC_CPU_regs/cpu_apb_ctrl1
  * CPU APB Control
  */

typedef union {
  struct {
    uint32_t CPU_APB_BIT_EN_B_OVERRIDE_VAL : 32;
    ///< This is the override value for the CPU's apb_bit_en_b.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_cpu_msg_cpu_apb_ctrl1_reg_t;

#define UC_CPU_MSG_CPU_APB_CTRL1_DEFAULT (0x00000000U)
#define UC_CPU_MSG_CPU_APB_CTRL1_RD_MASK (0xffffffffU)
#define UC_CPU_MSG_CPU_APB_CTRL1_WR_MASK (0xffffffffU)


///< This is the override value for the CPU's apb_bit_en_b.
#define UC_CPU_MSG_CPU_APB_CTRL1_CPU_APB_BIT_EN_B_OVRD_VAL_BF_OFF ( 0)
#define UC_CPU_MSG_CPU_APB_CTRL1_CPU_APB_BIT_EN_B_OVRD_VAL_BF_WID (32)
#define UC_CPU_MSG_CPU_APB_CTRL1_CPU_APB_BIT_EN_B_OVRD_VAL_BF_MSK (0xFFFFFFFF)
#define UC_CPU_MSG_CPU_APB_CTRL1_CPU_APB_BIT_EN_B_OVRD_VAL_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define UC_CPU_MSG_CPU_CTRL0_REG(_BASE) ((uc_cpu_msg_cpu_ctrl0_reg_t*) UC_CPU_MSG_CPU_CTRL0_ADR(_BASE))
#define UC_CPU_MSG_CPU_TB0_REG(_BASE) ((uc_cpu_msg_cpu_tb0_reg_t*) UC_CPU_MSG_CPU_TB0_ADR(_BASE))
#define UC_CPU_MSG_CPU_TB1_REG(_BASE) ((uc_cpu_msg_cpu_tb1_reg_t*) UC_CPU_MSG_CPU_TB1_ADR(_BASE))
#define UC_CPU_MSG_CPU_TB2_REG(_BASE) ((uc_cpu_msg_cpu_tb2_reg_t*) UC_CPU_MSG_CPU_TB2_ADR(_BASE))
#define UC_CPU_MSG_CPU_TB3_REG(_BASE) ((uc_cpu_msg_cpu_tb3_reg_t*) UC_CPU_MSG_CPU_TB3_ADR(_BASE))
#define UC_CPU_MSG_CPU_TB4_REG(_BASE) ((uc_cpu_msg_cpu_tb4_reg_t*) UC_CPU_MSG_CPU_TB4_ADR(_BASE))
#define UC_CPU_MSG_CPU_INFO_REG(_BASE) ((uc_cpu_msg_cpu_info_reg_t*) UC_CPU_MSG_CPU_INFO_ADR(_BASE))
#define UC_CPU_MSG_CPU_CTRL1_REG(_BASE) ((uc_cpu_msg_cpu_ctrl1_reg_t*) UC_CPU_MSG_CPU_CTRL1_ADR(_BASE))
#define UC_CPU_MSG_FW_STAT_REG(_BASE) ((uc_cpu_msg_fw_stat_reg_t*) UC_CPU_MSG_FW_STAT_ADR(_BASE))
#define UC_CPU_MSG_CPU_CTRL2_REG(_BASE) ((uc_cpu_msg_cpu_ctrl2_reg_t*) UC_CPU_MSG_CPU_CTRL2_ADR(_BASE))
#define UC_CPU_MSG_RAM_CTRL_REG(_BASE) ((uc_cpu_msg_ram_ctrl_reg_t*) UC_CPU_MSG_RAM_CTRL_ADR(_BASE))
#define UC_CPU_MSG_IRAM0_REG(_BASE) ((uc_cpu_msg_iram0_reg_t*) UC_CPU_MSG_IRAM0_ADR(_BASE))
#define UC_CPU_MSG_DRAM0_REG(_BASE) ((uc_cpu_msg_dram0_reg_t*) UC_CPU_MSG_DRAM0_ADR(_BASE))
#define UC_CPU_MSG_TRACE_REG(_BASE) ((uc_cpu_msg_trace_reg_t*) UC_CPU_MSG_TRACE_ADR(_BASE))
#define UC_CPU_MSG_FIFO_REG(_BASE) ((uc_cpu_msg_fifo_reg_t*) UC_CPU_MSG_FIFO_ADR(_BASE))
#define UC_CPU_MSG_CPU_STAT0_REG(_BASE) ((uc_cpu_msg_cpu_stat0_reg_t*) UC_CPU_MSG_CPU_STAT0_ADR(_BASE))
#define UC_CPU_MSG_CPU_STAT1_REG(_BASE) ((uc_cpu_msg_cpu_stat1_reg_t*) UC_CPU_MSG_CPU_STAT1_ADR(_BASE))
#define UC_CPU_MSG_CPU_FIFO_REG(_BASE) ((uc_cpu_msg_cpu_fifo_reg_t*) UC_CPU_MSG_CPU_FIFO_ADR(_BASE))
#define UC_CPU_MSG_CPU_APB_CTRL0_REG(_BASE) ((uc_cpu_msg_cpu_apb_ctrl0_reg_t*) UC_CPU_MSG_CPU_APB_CTRL0_ADR(_BASE))
#define UC_CPU_MSG_CPU_APB_CTRL1_REG(_BASE) ((uc_cpu_msg_cpu_apb_ctrl1_reg_t*) UC_CPU_MSG_CPU_APB_CTRL1_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    uc_cpu_msg_cpu_ctrl0_reg_t CPU_CTRL0; /*< Address offset = 0x0 */
    uc_cpu_msg_cpu_tb0_reg_t CPU_TB0; /*< Address offset = 0x4 */
    uc_cpu_msg_cpu_tb1_reg_t CPU_TB1; /*< Address offset = 0x8 */
    uc_cpu_msg_cpu_tb2_reg_t CPU_TB2; /*< Address offset = 0xc */
    uc_cpu_msg_cpu_tb3_reg_t CPU_TB3; /*< Address offset = 0x10 */
    uc_cpu_msg_cpu_tb4_reg_t CPU_TB4; /*< Address offset = 0x14 */
    uc_cpu_msg_cpu_info_reg_t CPU_INFO; /*< Address offset = 0x18 */
    uc_cpu_msg_cpu_ctrl1_reg_t CPU_CTRL1; /*< Address offset = 0x1c */
    uc_cpu_msg_fw_stat_reg_t FW_STAT; /*< Address offset = 0x20 */
    uc_cpu_msg_cpu_ctrl2_reg_t CPU_CTRL2; /*< Address offset = 0x24 */
    uc_cpu_msg_ram_ctrl_reg_t RAM_CTRL; /*< Address offset = 0x28 */
    uc_cpu_msg_iram0_reg_t IRAM0;   /*< Address offset = 0x2c */
    uc_cpu_msg_dram0_reg_t DRAM0;   /*< Address offset = 0x30 */
    uc_cpu_msg_trace_reg_t TRACE;   /*< Address offset = 0x34 */
    uc_cpu_msg_fifo_reg_t FIFO;    /*< Address offset = 0x38 */
    uc_cpu_msg_cpu_stat0_reg_t CPU_STAT0; /*< Address offset = 0x3c */
    uc_cpu_msg_cpu_stat1_reg_t CPU_STAT1; /*< Address offset = 0x40 */
    uc_cpu_msg_cpu_fifo_reg_t CPU_FIFO; /*< Address offset = 0x44 */
    uc_cpu_msg_cpu_apb_ctrl0_reg_t CPU_APB_CTRL0; /*< Address offset = 0x48 */
    uc_cpu_msg_cpu_apb_ctrl1_reg_t CPU_APB_CTRL1; /*< Address offset = 0x4c */
} uc_cpu_msg_t;     // size: 0x0050

// AddressSpace struct pointer
//
#define DLNK_JESD0_PHY_UC_CPU  ((uc_cpu_msg_t*) DLNK_JESD0_PHY_UC_CPU_BASE)
#define DLNK_JESD1_PHY_UC_CPU  ((uc_cpu_msg_t*) DLNK_JESD1_PHY_UC_CPU_BASE)
#define DLNK_JESD2_PHY_UC_CPU  ((uc_cpu_msg_t*) DLNK_JESD2_PHY_UC_CPU_BASE)
#define DLNK_JESD3_PHY_UC_CPU  ((uc_cpu_msg_t*) DLNK_JESD3_PHY_UC_CPU_BASE)

// ******************************************* /Address Space

#endif      // _UC_CPU_MSG_H_

