#ifndef _CALDAC_H_
#define _CALDAC_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define FB_ANT0_CALDAC_BASE   ( 0x05078000 )
#define FB_ANT1_CALDAC_BASE   ( 0x050f8000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define CALDAC_SCRATCH_OFFSET ( 0x00000000U )
#define CALDAC_FIFOE_WM_TOP_OFFSET ( 0x00000004U )
#define CALDAC_FIFOO_WM_TOP_OFFSET ( 0x00000008U )
#define CALDAC_FIFOE_CTL_TOP_OFFSET ( 0x0000000cU )
#define CALDAC_FIFOO_CTL_TOP_OFFSET ( 0x00000010U )
#define CALDAC_FIFOE_STAT_TOP_OFFSET ( 0x00000014U )
#define CALDAC_FIFOO_STAT_TOP_OFFSET ( 0x00000018U )
#define CALDAC_FIFOE_WM_BOT_OFFSET ( 0x0000001cU )
#define CALDAC_FIFOO_WM_BOT_OFFSET ( 0x00000020U )
#define CALDAC_FIFOE_CTL_BOT_OFFSET ( 0x00000024U )
#define CALDAC_FIFOO_CTL_BOT_OFFSET ( 0x00000028U )
#define CALDAC_FIFOE_STAT_BOT_OFFSET ( 0x0000002cU )
#define CALDAC_FIFOO_STAT_BOT_OFFSET ( 0x00000030U )
#define CALDAC_GAIN0_EVEN_OFFSET ( 0x00000034U )
#define CALDAC_GAIN1_EVEN_OFFSET ( 0x00000038U )
#define CALDAC_GAIN0_ODD_OFFSET ( 0x0000003cU )
#define CALDAC_GAIN1_ODD_OFFSET ( 0x00000040U )
#define CALDAC_CTRL_SWG_DITHER_OFFSET ( 0x00000044U )
#define CALDAC_CTRL_SWG_SIGN_OFFSET ( 0x00000048U )
#define CALDAC_MAX_ABS_OFFSET ( 0x0000004cU )
#define CALDAC_SMC_RATE_OFFSET ( 0x00000050U )
#define CALDAC_FIFO_RST_OFFSET ( 0x00000054U )
#define CALDAC_INT_STAT_OFFSET ( 0x00000060U )
#define CALDAC_INT_HI_EN_OFFSET ( 0x00000064U )
#define CALDAC_INT_LO_EN_OFFSET ( 0x00000068U )
#define CALDAC_INT_CLR_OFFSET ( 0x0000006cU )
#define CALDAC_INT_FORCE_OFFSET ( 0x00000070U )
#define CALDAC_DBG_SNAP_OFFSET ( 0x00000074U )
#define CALDAC_DBG_SNAP_PCNT_TOP_OFFSET ( 0x00000078U )
#define CALDAC_DBG_SNAP_CNT_TOP_OFFSET ( 0x0000007cU )
#define CALDAC_DBG_SNAPO_TOP0_OFFSET ( 0x00000080U )
#define CALDAC_DBG_SNAPO_TOP1_OFFSET ( 0x00000084U )
#define CALDAC_DBG_SNAPO_TOP2_OFFSET ( 0x00000088U )
#define CALDAC_DBG_SNAPO_TOP3_OFFSET ( 0x0000008cU )
#define CALDAC_DBG_SNAPO_TOP4_OFFSET ( 0x00000090U )
#define CALDAC_DBG_SNAPO_TOP5_OFFSET ( 0x00000094U )
#define CALDAC_DBG_SNAPO_TOP6_OFFSET ( 0x00000098U )
#define CALDAC_DBG_SNAPO_TOP7_OFFSET ( 0x0000009cU )
#define CALDAC_DBG_SNAPE_TOP0_OFFSET ( 0x000000a0U )
#define CALDAC_DBG_SNAPE_TOP1_OFFSET ( 0x000000a4U )
#define CALDAC_DBG_SNAPE_TOP2_OFFSET ( 0x000000a8U )
#define CALDAC_DBG_SNAPE_TOP3_OFFSET ( 0x000000acU )
#define CALDAC_DBG_SNAPE_TOP4_OFFSET ( 0x000000b0U )
#define CALDAC_DBG_SNAPE_TOP5_OFFSET ( 0x000000b4U )
#define CALDAC_DBG_SNAPE_TOP6_OFFSET ( 0x000000b8U )
#define CALDAC_DBG_SNAPE_TOP7_OFFSET ( 0x000000bcU )
#define CALDAC_DBG_SNAP_PCNT_BOT_OFFSET ( 0x000000c0U )
#define CALDAC_DBG_SNAP_CNT_BOT_OFFSET ( 0x000000c4U )
#define CALDAC_DBG_SNAPO_BOT0_OFFSET ( 0x000000c8U )
#define CALDAC_DBG_SNAPO_BOT1_OFFSET ( 0x000000ccU )
#define CALDAC_DBG_SNAPO_BOT2_OFFSET ( 0x000000d0U )
#define CALDAC_DBG_SNAPO_BOT3_OFFSET ( 0x000000d4U )
#define CALDAC_DBG_SNAPO_BOT4_OFFSET ( 0x000000d8U )
#define CALDAC_DBG_SNAPO_BOT5_OFFSET ( 0x000000dcU )
#define CALDAC_DBG_SNAPO_BOT6_OFFSET ( 0x000000e0U )
#define CALDAC_DBG_SNAPO_BOT7_OFFSET ( 0x000000e4U )
#define CALDAC_DBG_SNAPE_BOT0_OFFSET ( 0x000000e8U )
#define CALDAC_DBG_SNAPE_BOT1_OFFSET ( 0x000000ecU )
#define CALDAC_DBG_SNAPE_BOT2_OFFSET ( 0x000000f0U )
#define CALDAC_DBG_SNAPE_BOT3_OFFSET ( 0x000000f4U )
#define CALDAC_DBG_SNAPE_BOT4_OFFSET ( 0x000000f8U )
#define CALDAC_DBG_SNAPE_BOT5_OFFSET ( 0x000000fcU )
#define CALDAC_DBG_SNAPE_BOT6_OFFSET ( 0x00000100U )
#define CALDAC_DBG_SNAPE_BOT7_OFFSET ( 0x00000104U )
#define CALDAC_DBG_FFS_BFN_TOP_OFFSET ( 0x00000108U )
#define CALDAC_DBG_FFS_BFN_BOT_OFFSET ( 0x0000010cU )
#define CALDAC_DBG_FFS_LVL_OFFSET ( 0x00000110U )
#define CALDAC_DBG_VALS_BFNO_TOP_OFFSET ( 0x00000114U )
#define CALDAC_DBG_VALS_BFNE_TOP_OFFSET ( 0x00000118U )
#define CALDAC_DBG_VALS_BFNO_BOT_OFFSET ( 0x0000011cU )
#define CALDAC_DBG_VALS_BFNE_BOT_OFFSET ( 0x00000120U )
#define CALDAC_APB_BRDG_STAT_OFFSET ( 0x00000130U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define CALDAC_SCRATCH_ADR(_BASE) (( ( _BASE ) + ( CALDAC_SCRATCH_OFFSET ) ))
#define CALDAC_FIFOE_WM_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOE_WM_TOP_OFFSET ) ))
#define CALDAC_FIFOO_WM_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOO_WM_TOP_OFFSET ) ))
#define CALDAC_FIFOE_CTL_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOE_CTL_TOP_OFFSET ) ))
#define CALDAC_FIFOO_CTL_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOO_CTL_TOP_OFFSET ) ))
#define CALDAC_FIFOE_STAT_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOE_STAT_TOP_OFFSET ) ))
#define CALDAC_FIFOO_STAT_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOO_STAT_TOP_OFFSET ) ))
#define CALDAC_FIFOE_WM_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOE_WM_BOT_OFFSET ) ))
#define CALDAC_FIFOO_WM_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOO_WM_BOT_OFFSET ) ))
#define CALDAC_FIFOE_CTL_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOE_CTL_BOT_OFFSET ) ))
#define CALDAC_FIFOO_CTL_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOO_CTL_BOT_OFFSET ) ))
#define CALDAC_FIFOE_STAT_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOE_STAT_BOT_OFFSET ) ))
#define CALDAC_FIFOO_STAT_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFOO_STAT_BOT_OFFSET ) ))
#define CALDAC_GAIN0_EVEN_ADR(_BASE) (( ( _BASE ) + ( CALDAC_GAIN0_EVEN_OFFSET ) ))
#define CALDAC_GAIN1_EVEN_ADR(_BASE) (( ( _BASE ) + ( CALDAC_GAIN1_EVEN_OFFSET ) ))
#define CALDAC_GAIN0_ODD_ADR(_BASE) (( ( _BASE ) + ( CALDAC_GAIN0_ODD_OFFSET ) ))
#define CALDAC_GAIN1_ODD_ADR(_BASE) (( ( _BASE ) + ( CALDAC_GAIN1_ODD_OFFSET ) ))
#define CALDAC_CTRL_SWG_DITHER_ADR(_BASE) (( ( _BASE ) + ( CALDAC_CTRL_SWG_DITHER_OFFSET ) ))
#define CALDAC_CTRL_SWG_SIGN_ADR(_BASE) (( ( _BASE ) + ( CALDAC_CTRL_SWG_SIGN_OFFSET ) ))
#define CALDAC_MAX_ABS_ADR(_BASE) (( ( _BASE ) + ( CALDAC_MAX_ABS_OFFSET ) ))
#define CALDAC_SMC_RATE_ADR(_BASE) (( ( _BASE ) + ( CALDAC_SMC_RATE_OFFSET ) ))
#define CALDAC_FIFO_RST_ADR(_BASE) (( ( _BASE ) + ( CALDAC_FIFO_RST_OFFSET ) ))
#define CALDAC_INT_STAT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_INT_STAT_OFFSET ) ))
#define CALDAC_INT_HI_EN_ADR(_BASE) (( ( _BASE ) + ( CALDAC_INT_HI_EN_OFFSET ) ))
#define CALDAC_INT_LO_EN_ADR(_BASE) (( ( _BASE ) + ( CALDAC_INT_LO_EN_OFFSET ) ))
#define CALDAC_INT_CLR_ADR(_BASE) (( ( _BASE ) + ( CALDAC_INT_CLR_OFFSET ) ))
#define CALDAC_INT_FORCE_ADR(_BASE) (( ( _BASE ) + ( CALDAC_INT_FORCE_OFFSET ) ))
#define CALDAC_DBG_SNAP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAP_OFFSET ) ))
#define CALDAC_DBG_SNAP_PCNT_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAP_PCNT_TOP_OFFSET ) ))
#define CALDAC_DBG_SNAP_CNT_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAP_CNT_TOP_OFFSET ) ))
#define CALDAC_DBG_SNAPO_TOP0_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_TOP0_OFFSET ) ))
#define CALDAC_DBG_SNAPO_TOP1_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_TOP1_OFFSET ) ))
#define CALDAC_DBG_SNAPO_TOP2_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_TOP2_OFFSET ) ))
#define CALDAC_DBG_SNAPO_TOP3_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_TOP3_OFFSET ) ))
#define CALDAC_DBG_SNAPO_TOP4_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_TOP4_OFFSET ) ))
#define CALDAC_DBG_SNAPO_TOP5_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_TOP5_OFFSET ) ))
#define CALDAC_DBG_SNAPO_TOP6_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_TOP6_OFFSET ) ))
#define CALDAC_DBG_SNAPO_TOP7_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_TOP7_OFFSET ) ))
#define CALDAC_DBG_SNAPE_TOP0_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_TOP0_OFFSET ) ))
#define CALDAC_DBG_SNAPE_TOP1_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_TOP1_OFFSET ) ))
#define CALDAC_DBG_SNAPE_TOP2_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_TOP2_OFFSET ) ))
#define CALDAC_DBG_SNAPE_TOP3_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_TOP3_OFFSET ) ))
#define CALDAC_DBG_SNAPE_TOP4_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_TOP4_OFFSET ) ))
#define CALDAC_DBG_SNAPE_TOP5_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_TOP5_OFFSET ) ))
#define CALDAC_DBG_SNAPE_TOP6_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_TOP6_OFFSET ) ))
#define CALDAC_DBG_SNAPE_TOP7_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_TOP7_OFFSET ) ))
#define CALDAC_DBG_SNAP_PCNT_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAP_PCNT_BOT_OFFSET ) ))
#define CALDAC_DBG_SNAP_CNT_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAP_CNT_BOT_OFFSET ) ))
#define CALDAC_DBG_SNAPO_BOT0_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_BOT0_OFFSET ) ))
#define CALDAC_DBG_SNAPO_BOT1_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_BOT1_OFFSET ) ))
#define CALDAC_DBG_SNAPO_BOT2_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_BOT2_OFFSET ) ))
#define CALDAC_DBG_SNAPO_BOT3_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_BOT3_OFFSET ) ))
#define CALDAC_DBG_SNAPO_BOT4_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_BOT4_OFFSET ) ))
#define CALDAC_DBG_SNAPO_BOT5_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_BOT5_OFFSET ) ))
#define CALDAC_DBG_SNAPO_BOT6_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_BOT6_OFFSET ) ))
#define CALDAC_DBG_SNAPO_BOT7_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPO_BOT7_OFFSET ) ))
#define CALDAC_DBG_SNAPE_BOT0_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_BOT0_OFFSET ) ))
#define CALDAC_DBG_SNAPE_BOT1_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_BOT1_OFFSET ) ))
#define CALDAC_DBG_SNAPE_BOT2_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_BOT2_OFFSET ) ))
#define CALDAC_DBG_SNAPE_BOT3_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_BOT3_OFFSET ) ))
#define CALDAC_DBG_SNAPE_BOT4_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_BOT4_OFFSET ) ))
#define CALDAC_DBG_SNAPE_BOT5_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_BOT5_OFFSET ) ))
#define CALDAC_DBG_SNAPE_BOT6_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_BOT6_OFFSET ) ))
#define CALDAC_DBG_SNAPE_BOT7_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_SNAPE_BOT7_OFFSET ) ))
#define CALDAC_DBG_FFS_BFN_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_FFS_BFN_TOP_OFFSET ) ))
#define CALDAC_DBG_FFS_BFN_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_FFS_BFN_BOT_OFFSET ) ))
#define CALDAC_DBG_FFS_LVL_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_FFS_LVL_OFFSET ) ))
#define CALDAC_DBG_VALS_BFNO_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_VALS_BFNO_TOP_OFFSET ) ))
#define CALDAC_DBG_VALS_BFNE_TOP_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_VALS_BFNE_TOP_OFFSET ) ))
#define CALDAC_DBG_VALS_BFNO_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_VALS_BFNO_BOT_OFFSET ) ))
#define CALDAC_DBG_VALS_BFNE_BOT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_DBG_VALS_BFNE_BOT_OFFSET ) ))
#define CALDAC_APB_BRDG_STAT_ADR(_BASE) (( ( _BASE ) + ( CALDAC_APB_BRDG_STAT_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief CALDAC_MAP_CALDAC_MAP_SCRATCH register description at address offset 0x0
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/SCRATCH
  * CALDAC scratchpad register.
  */

typedef union {
  struct {
    uint32_t SCRATCHPAD : 32;
    ///< Do anything with this field.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_scratch_reg_t;

#define CALDAC_SCRATCH_DEFAULT (0x00000000U)
#define CALDAC_SCRATCH_RD_MASK (0xffffffffU)
#define CALDAC_SCRATCH_WR_MASK (0xffffffffU)


///< Do anything with this field.
#define CALDAC_SCRATCH_SCRATCHPAD_BF_OFF ( 0)
#define CALDAC_SCRATCH_SCRATCHPAD_BF_WID (32)
#define CALDAC_SCRATCH_SCRATCHPAD_BF_MSK (0xFFFFFFFF)
#define CALDAC_SCRATCH_SCRATCHPAD_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOE_WM_TOP register description at address offset 0x4
  *
  * Register default value:        0x00000080
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOE_WM_TOP
  * CALDAC FIFO even water mark top register.
  */

typedef union {
  struct {
    uint32_t LOW_WM : 5;
    ///< Low water mark.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t HIGH_WM : 5;
    ///< High water mark. If the FIFO is equal to or greater than this value
    ///< it will allow data transmission to begin.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x4"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoe_wm_top_reg_t;

#define CALDAC_FIFOE_WM_TOP_DEFAULT (0x00000080U)
#define CALDAC_FIFOE_WM_TOP_RD_MASK (0x000003ffU)
#define CALDAC_FIFOE_WM_TOP_WR_MASK (0x000003ffU)


///< Low water mark.
#define CALDAC_FIFOE_WM_TOP_LOW_WM_BF_OFF ( 0)
#define CALDAC_FIFOE_WM_TOP_LOW_WM_BF_WID ( 5)
#define CALDAC_FIFOE_WM_TOP_LOW_WM_BF_MSK (0x0000001F)
#define CALDAC_FIFOE_WM_TOP_LOW_WM_BF_DEF (0x00000000)

///< High water mark. If the FIFO is equal to or greater than this value
///< it will allow data transmission to begin.
#define CALDAC_FIFOE_WM_TOP_HIGH_WM_BF_OFF ( 5)
#define CALDAC_FIFOE_WM_TOP_HIGH_WM_BF_WID ( 5)
#define CALDAC_FIFOE_WM_TOP_HIGH_WM_BF_MSK (0x000003E0)
#define CALDAC_FIFOE_WM_TOP_HIGH_WM_BF_DEF (0x00000080)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOO_WM_TOP register description at address offset 0x8
  *
  * Register default value:        0x00000080
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOO_WM_TOP
  * CALDAC FIFO odd water mark top register.
  */

typedef union {
  struct {
    uint32_t LOW_WM : 5;
    ///< Low water mark.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t HIGH_WM : 5;
    ///< High water mark. If the FIFO is equal to or greater than this value
    ///< it will allow data transmission to begin.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x4"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoo_wm_top_reg_t;

#define CALDAC_FIFOO_WM_TOP_DEFAULT (0x00000080U)
#define CALDAC_FIFOO_WM_TOP_RD_MASK (0x000003ffU)
#define CALDAC_FIFOO_WM_TOP_WR_MASK (0x000003ffU)


///< Low water mark.
#define CALDAC_FIFOO_WM_TOP_LOW_WM_BF_OFF ( 0)
#define CALDAC_FIFOO_WM_TOP_LOW_WM_BF_WID ( 5)
#define CALDAC_FIFOO_WM_TOP_LOW_WM_BF_MSK (0x0000001F)
#define CALDAC_FIFOO_WM_TOP_LOW_WM_BF_DEF (0x00000000)

///< High water mark. If the FIFO is equal to or greater than this value
///< it will allow data transmission to begin.
#define CALDAC_FIFOO_WM_TOP_HIGH_WM_BF_OFF ( 5)
#define CALDAC_FIFOO_WM_TOP_HIGH_WM_BF_WID ( 5)
#define CALDAC_FIFOO_WM_TOP_HIGH_WM_BF_MSK (0x000003E0)
#define CALDAC_FIFOO_WM_TOP_HIGH_WM_BF_DEF (0x00000080)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOE_CTL_TOP register description at address offset 0xc
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOE_CTL_TOP
  * CALDAC FIFO even control top register.
  */

typedef union {
  struct {
    uint32_t MUXV_EN : 1;
    ///< FIFO MUX switches over to smc data only if data valid is set. It will
    ///< then switch back once data is invalid.  Note the bfn fifo control
    ///< must also be active for any switchover to occur.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoe_ctl_top_reg_t;

#define CALDAC_FIFOE_CTL_TOP_DEFAULT (0x00000000U)
#define CALDAC_FIFOE_CTL_TOP_RD_MASK (0x00000001U)
#define CALDAC_FIFOE_CTL_TOP_WR_MASK (0x00000001U)


///< FIFO MUX switches over to smc data only if data valid is set. It will
///< then switch back once data is invalid.  Note the bfn fifo control
///< must also be active for any switchover to occur.
#define CALDAC_FIFOE_CTL_TOP_MUXV_EN_BF_OFF ( 0)
#define CALDAC_FIFOE_CTL_TOP_MUXV_EN_BF_WID ( 1)
#define CALDAC_FIFOE_CTL_TOP_MUXV_EN_BF_MSK (0x00000001)
#define CALDAC_FIFOE_CTL_TOP_MUXV_EN_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOO_CTL_TOP register description at address offset 0x10
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOO_CTL_TOP
  * CALDAC FIFO odd control top register.
  */

typedef union {
  struct {
    uint32_t MUXV_EN : 1;
    ///< FIFO MUX switches over to smc data only if data valid is set. It will
    ///< then switch back once data is invalid.  Note the bfn fifo control
    ///< must also be active for any switchover to occur.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoo_ctl_top_reg_t;

#define CALDAC_FIFOO_CTL_TOP_DEFAULT (0x00000000U)
#define CALDAC_FIFOO_CTL_TOP_RD_MASK (0x00000001U)
#define CALDAC_FIFOO_CTL_TOP_WR_MASK (0x00000001U)


///< FIFO MUX switches over to smc data only if data valid is set. It will
///< then switch back once data is invalid.  Note the bfn fifo control
///< must also be active for any switchover to occur.
#define CALDAC_FIFOO_CTL_TOP_MUXV_EN_BF_OFF ( 0)
#define CALDAC_FIFOO_CTL_TOP_MUXV_EN_BF_WID ( 1)
#define CALDAC_FIFOO_CTL_TOP_MUXV_EN_BF_MSK (0x00000001)
#define CALDAC_FIFOO_CTL_TOP_MUXV_EN_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOE_STAT_TOP register description at address offset 0x14
  *
  * Register default value:        0x000000CC
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOE_STAT_TOP
  * CALDAC FIFO even status top register.
  */

typedef union {
  struct {
    uint32_t PUSH_FULL : 1;
    ///< fifo full.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
    uint32_t PUSH_AFULL : 1;
    ///< fifo almost full.
    ///< AccessType="RO" BitOffset="1" ResetValue="0x0"
    uint32_t POP_EMP : 1;
    ///< fifo empty.
    ///< AccessType="RO" BitOffset="2" ResetValue="0x1"
    uint32_t POP_AEMP : 1;
    ///< fifo almost empty.
    ///< AccessType="RO" BitOffset="3" ResetValue="0x1"
    uint32_t FIFO_STAT : 11;
    ///< fifo status.
    ///< AccessType="RO" BitOffset="4" ResetValue="0xC"
    uint32_t  : 17;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoe_stat_top_reg_t;

#define CALDAC_FIFOE_STAT_TOP_DEFAULT (0x000000ccU)
#define CALDAC_FIFOE_STAT_TOP_RD_MASK (0x00007fffU)
#define CALDAC_FIFOE_STAT_TOP_WR_MASK (0x00000000U)


///< fifo full.
#define CALDAC_FIFOE_STAT_TOP_PUSH_FULL_BF_OFF ( 0)
#define CALDAC_FIFOE_STAT_TOP_PUSH_FULL_BF_WID ( 1)
#define CALDAC_FIFOE_STAT_TOP_PUSH_FULL_BF_MSK (0x00000001)
#define CALDAC_FIFOE_STAT_TOP_PUSH_FULL_BF_DEF (0x00000000)

///< fifo almost full.
#define CALDAC_FIFOE_STAT_TOP_PUSH_AFULL_BF_OFF ( 1)
#define CALDAC_FIFOE_STAT_TOP_PUSH_AFULL_BF_WID ( 1)
#define CALDAC_FIFOE_STAT_TOP_PUSH_AFULL_BF_MSK (0x00000002)
#define CALDAC_FIFOE_STAT_TOP_PUSH_AFULL_BF_DEF (0x00000000)

///< fifo empty.
#define CALDAC_FIFOE_STAT_TOP_POP_EMP_BF_OFF ( 2)
#define CALDAC_FIFOE_STAT_TOP_POP_EMP_BF_WID ( 1)
#define CALDAC_FIFOE_STAT_TOP_POP_EMP_BF_MSK (0x00000004)
#define CALDAC_FIFOE_STAT_TOP_POP_EMP_BF_DEF (0x00000004)

///< fifo almost empty.
#define CALDAC_FIFOE_STAT_TOP_POP_AEMP_BF_OFF ( 3)
#define CALDAC_FIFOE_STAT_TOP_POP_AEMP_BF_WID ( 1)
#define CALDAC_FIFOE_STAT_TOP_POP_AEMP_BF_MSK (0x00000008)
#define CALDAC_FIFOE_STAT_TOP_POP_AEMP_BF_DEF (0x00000008)

///< fifo status.
#define CALDAC_FIFOE_STAT_TOP_FIFO_STAT_BF_OFF ( 4)
#define CALDAC_FIFOE_STAT_TOP_FIFO_STAT_BF_WID (11)
#define CALDAC_FIFOE_STAT_TOP_FIFO_STAT_BF_MSK (0x00007FF0)
#define CALDAC_FIFOE_STAT_TOP_FIFO_STAT_BF_DEF (0x000000C0)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOO_STAT_TOP register description at address offset 0x18
  *
  * Register default value:        0x000000CC
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOO_STAT_TOP
  * CALDAC FIFO odd status top register.
  */

typedef union {
  struct {
    uint32_t PUSH_FULL : 1;
    ///< fifo full.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
    uint32_t PUSH_AFULL : 1;
    ///< fifo almost full.
    ///< AccessType="RO" BitOffset="1" ResetValue="0x0"
    uint32_t POP_EMP : 1;
    ///< fifo empty.
    ///< AccessType="RO" BitOffset="2" ResetValue="0x1"
    uint32_t POP_AEMP : 1;
    ///< fifo almost empty.
    ///< AccessType="RO" BitOffset="3" ResetValue="0x1"
    uint32_t FIFO_STAT : 11;
    ///< fifo status.
    ///< AccessType="RO" BitOffset="4" ResetValue="0xC"
    uint32_t  : 17;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoo_stat_top_reg_t;

#define CALDAC_FIFOO_STAT_TOP_DEFAULT (0x000000ccU)
#define CALDAC_FIFOO_STAT_TOP_RD_MASK (0x00007fffU)
#define CALDAC_FIFOO_STAT_TOP_WR_MASK (0x00000000U)


///< fifo full.
#define CALDAC_FIFOO_STAT_TOP_PUSH_FULL_BF_OFF ( 0)
#define CALDAC_FIFOO_STAT_TOP_PUSH_FULL_BF_WID ( 1)
#define CALDAC_FIFOO_STAT_TOP_PUSH_FULL_BF_MSK (0x00000001)
#define CALDAC_FIFOO_STAT_TOP_PUSH_FULL_BF_DEF (0x00000000)

///< fifo almost full.
#define CALDAC_FIFOO_STAT_TOP_PUSH_AFULL_BF_OFF ( 1)
#define CALDAC_FIFOO_STAT_TOP_PUSH_AFULL_BF_WID ( 1)
#define CALDAC_FIFOO_STAT_TOP_PUSH_AFULL_BF_MSK (0x00000002)
#define CALDAC_FIFOO_STAT_TOP_PUSH_AFULL_BF_DEF (0x00000000)

///< fifo empty.
#define CALDAC_FIFOO_STAT_TOP_POP_EMP_BF_OFF ( 2)
#define CALDAC_FIFOO_STAT_TOP_POP_EMP_BF_WID ( 1)
#define CALDAC_FIFOO_STAT_TOP_POP_EMP_BF_MSK (0x00000004)
#define CALDAC_FIFOO_STAT_TOP_POP_EMP_BF_DEF (0x00000004)

///< fifo almost empty.
#define CALDAC_FIFOO_STAT_TOP_POP_AEMP_BF_OFF ( 3)
#define CALDAC_FIFOO_STAT_TOP_POP_AEMP_BF_WID ( 1)
#define CALDAC_FIFOO_STAT_TOP_POP_AEMP_BF_MSK (0x00000008)
#define CALDAC_FIFOO_STAT_TOP_POP_AEMP_BF_DEF (0x00000008)

///< fifo status.
#define CALDAC_FIFOO_STAT_TOP_FIFO_STAT_BF_OFF ( 4)
#define CALDAC_FIFOO_STAT_TOP_FIFO_STAT_BF_WID (11)
#define CALDAC_FIFOO_STAT_TOP_FIFO_STAT_BF_MSK (0x00007FF0)
#define CALDAC_FIFOO_STAT_TOP_FIFO_STAT_BF_DEF (0x000000C0)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOE_WM_BOT register description at address offset 0x1c
  *
  * Register default value:        0x00000080
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOE_WM_BOT
  * CALDAC FIFO even water mark bot register.
  */

typedef union {
  struct {
    uint32_t LOW_WM : 5;
    ///< Low water mark.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t HIGH_WM : 5;
    ///< High water mark. If the FIFO is equal to or greater than this value
    ///< it will allow data transmission to begin.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x4"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoe_wm_bot_reg_t;

#define CALDAC_FIFOE_WM_BOT_DEFAULT (0x00000080U)
#define CALDAC_FIFOE_WM_BOT_RD_MASK (0x000003ffU)
#define CALDAC_FIFOE_WM_BOT_WR_MASK (0x000003ffU)


///< Low water mark.
#define CALDAC_FIFOE_WM_BOT_LOW_WM_BF_OFF ( 0)
#define CALDAC_FIFOE_WM_BOT_LOW_WM_BF_WID ( 5)
#define CALDAC_FIFOE_WM_BOT_LOW_WM_BF_MSK (0x0000001F)
#define CALDAC_FIFOE_WM_BOT_LOW_WM_BF_DEF (0x00000000)

///< High water mark. If the FIFO is equal to or greater than this value
///< it will allow data transmission to begin.
#define CALDAC_FIFOE_WM_BOT_HIGH_WM_BF_OFF ( 5)
#define CALDAC_FIFOE_WM_BOT_HIGH_WM_BF_WID ( 5)
#define CALDAC_FIFOE_WM_BOT_HIGH_WM_BF_MSK (0x000003E0)
#define CALDAC_FIFOE_WM_BOT_HIGH_WM_BF_DEF (0x00000080)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOO_WM_BOT register description at address offset 0x20
  *
  * Register default value:        0x00000080
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOO_WM_BOT
  * CALDAC FIFO odd water mark bot register.
  */

typedef union {
  struct {
    uint32_t LOW_WM : 5;
    ///< Low water mark.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t HIGH_WM : 5;
    ///< High water mark. If the FIFO is equal to or greater than this value
    ///< it will allow data transmission to begin.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x4"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoo_wm_bot_reg_t;

#define CALDAC_FIFOO_WM_BOT_DEFAULT (0x00000080U)
#define CALDAC_FIFOO_WM_BOT_RD_MASK (0x000003ffU)
#define CALDAC_FIFOO_WM_BOT_WR_MASK (0x000003ffU)


///< Low water mark.
#define CALDAC_FIFOO_WM_BOT_LOW_WM_BF_OFF ( 0)
#define CALDAC_FIFOO_WM_BOT_LOW_WM_BF_WID ( 5)
#define CALDAC_FIFOO_WM_BOT_LOW_WM_BF_MSK (0x0000001F)
#define CALDAC_FIFOO_WM_BOT_LOW_WM_BF_DEF (0x00000000)

///< High water mark. If the FIFO is equal to or greater than this value
///< it will allow data transmission to begin.
#define CALDAC_FIFOO_WM_BOT_HIGH_WM_BF_OFF ( 5)
#define CALDAC_FIFOO_WM_BOT_HIGH_WM_BF_WID ( 5)
#define CALDAC_FIFOO_WM_BOT_HIGH_WM_BF_MSK (0x000003E0)
#define CALDAC_FIFOO_WM_BOT_HIGH_WM_BF_DEF (0x00000080)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOE_CTL_BOT register description at address offset 0x24
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOE_CTL_BOT
  * CALDAC FIFO even control bot register.
  */

typedef union {
  struct {
    uint32_t MUXV_EN : 1;
    ///< FIFO MUX switches over to smc data only if data valid is set. It will
    ///< then switch back once data is invalid.  Note the bfn fifo control
    ///< must also be active for any switchover to occur.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoe_ctl_bot_reg_t;

#define CALDAC_FIFOE_CTL_BOT_DEFAULT (0x00000000U)
#define CALDAC_FIFOE_CTL_BOT_RD_MASK (0x00000001U)
#define CALDAC_FIFOE_CTL_BOT_WR_MASK (0x00000001U)


///< FIFO MUX switches over to smc data only if data valid is set. It will
///< then switch back once data is invalid.  Note the bfn fifo control
///< must also be active for any switchover to occur.
#define CALDAC_FIFOE_CTL_BOT_MUXV_EN_BF_OFF ( 0)
#define CALDAC_FIFOE_CTL_BOT_MUXV_EN_BF_WID ( 1)
#define CALDAC_FIFOE_CTL_BOT_MUXV_EN_BF_MSK (0x00000001)
#define CALDAC_FIFOE_CTL_BOT_MUXV_EN_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOO_CTL_BOT register description at address offset 0x28
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOO_CTL_BOT
  * CALDAC FIFO odd control bot register.
  */

typedef union {
  struct {
    uint32_t MUXV_EN : 1;
    ///< FIFO MUX switches over to smc data only if data valid is set. It will
    ///< then switch back once data is invalid.  Note the bfn fifo control
    ///< must also be active for any switchover to occur.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoo_ctl_bot_reg_t;

#define CALDAC_FIFOO_CTL_BOT_DEFAULT (0x00000000U)
#define CALDAC_FIFOO_CTL_BOT_RD_MASK (0x00000001U)
#define CALDAC_FIFOO_CTL_BOT_WR_MASK (0x00000001U)


///< FIFO MUX switches over to smc data only if data valid is set. It will
///< then switch back once data is invalid.  Note the bfn fifo control
///< must also be active for any switchover to occur.
#define CALDAC_FIFOO_CTL_BOT_MUXV_EN_BF_OFF ( 0)
#define CALDAC_FIFOO_CTL_BOT_MUXV_EN_BF_WID ( 1)
#define CALDAC_FIFOO_CTL_BOT_MUXV_EN_BF_MSK (0x00000001)
#define CALDAC_FIFOO_CTL_BOT_MUXV_EN_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOE_STAT_BOT register description at address offset 0x2c
  *
  * Register default value:        0x000000CC
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOE_STAT_BOT
  * CALDAC FIFO even status bot register.
  */

typedef union {
  struct {
    uint32_t PUSH_FULL : 1;
    ///< fifo full.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
    uint32_t PUSH_AFULL : 1;
    ///< fifo almost full.
    ///< AccessType="RO" BitOffset="1" ResetValue="0x0"
    uint32_t POP_EMP : 1;
    ///< fifo empty.
    ///< AccessType="RO" BitOffset="2" ResetValue="0x1"
    uint32_t POP_AEMP : 1;
    ///< fifo almost empty.
    ///< AccessType="RO" BitOffset="3" ResetValue="0x1"
    uint32_t FIFO_STAT : 11;
    ///< fifo status.
    ///< AccessType="RO" BitOffset="4" ResetValue="0xC"
    uint32_t  : 17;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoe_stat_bot_reg_t;

#define CALDAC_FIFOE_STAT_BOT_DEFAULT (0x000000ccU)
#define CALDAC_FIFOE_STAT_BOT_RD_MASK (0x00007fffU)
#define CALDAC_FIFOE_STAT_BOT_WR_MASK (0x00000000U)


///< fifo full.
#define CALDAC_FIFOE_STAT_BOT_PUSH_FULL_BF_OFF ( 0)
#define CALDAC_FIFOE_STAT_BOT_PUSH_FULL_BF_WID ( 1)
#define CALDAC_FIFOE_STAT_BOT_PUSH_FULL_BF_MSK (0x00000001)
#define CALDAC_FIFOE_STAT_BOT_PUSH_FULL_BF_DEF (0x00000000)

///< fifo almost full.
#define CALDAC_FIFOE_STAT_BOT_PUSH_AFULL_BF_OFF ( 1)
#define CALDAC_FIFOE_STAT_BOT_PUSH_AFULL_BF_WID ( 1)
#define CALDAC_FIFOE_STAT_BOT_PUSH_AFULL_BF_MSK (0x00000002)
#define CALDAC_FIFOE_STAT_BOT_PUSH_AFULL_BF_DEF (0x00000000)

///< fifo empty.
#define CALDAC_FIFOE_STAT_BOT_POP_EMP_BF_OFF ( 2)
#define CALDAC_FIFOE_STAT_BOT_POP_EMP_BF_WID ( 1)
#define CALDAC_FIFOE_STAT_BOT_POP_EMP_BF_MSK (0x00000004)
#define CALDAC_FIFOE_STAT_BOT_POP_EMP_BF_DEF (0x00000004)

///< fifo almost empty.
#define CALDAC_FIFOE_STAT_BOT_POP_AEMP_BF_OFF ( 3)
#define CALDAC_FIFOE_STAT_BOT_POP_AEMP_BF_WID ( 1)
#define CALDAC_FIFOE_STAT_BOT_POP_AEMP_BF_MSK (0x00000008)
#define CALDAC_FIFOE_STAT_BOT_POP_AEMP_BF_DEF (0x00000008)

///< fifo status.
#define CALDAC_FIFOE_STAT_BOT_FIFO_STAT_BF_OFF ( 4)
#define CALDAC_FIFOE_STAT_BOT_FIFO_STAT_BF_WID (11)
#define CALDAC_FIFOE_STAT_BOT_FIFO_STAT_BF_MSK (0x00007FF0)
#define CALDAC_FIFOE_STAT_BOT_FIFO_STAT_BF_DEF (0x000000C0)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFOO_STAT_BOT register description at address offset 0x30
  *
  * Register default value:        0x000000CC
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFOO_STAT_BOT
  * CALDAC FIFO odd status bot register.
  */

typedef union {
  struct {
    uint32_t PUSH_FULL : 1;
    ///< fifo full.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
    uint32_t PUSH_AFULL : 1;
    ///< fifo almost full.
    ///< AccessType="RO" BitOffset="1" ResetValue="0x0"
    uint32_t POP_EMP : 1;
    ///< fifo empty.
    ///< AccessType="RO" BitOffset="2" ResetValue="0x1"
    uint32_t POP_AEMP : 1;
    ///< fifo almost empty.
    ///< AccessType="RO" BitOffset="3" ResetValue="0x1"
    uint32_t FIFO_STAT : 11;
    ///< fifo status.
    ///< AccessType="RO" BitOffset="4" ResetValue="0xC"
    uint32_t  : 17;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifoo_stat_bot_reg_t;

#define CALDAC_FIFOO_STAT_BOT_DEFAULT (0x000000ccU)
#define CALDAC_FIFOO_STAT_BOT_RD_MASK (0x00007fffU)
#define CALDAC_FIFOO_STAT_BOT_WR_MASK (0x00000000U)


///< fifo full.
#define CALDAC_FIFOO_STAT_BOT_PUSH_FULL_BF_OFF ( 0)
#define CALDAC_FIFOO_STAT_BOT_PUSH_FULL_BF_WID ( 1)
#define CALDAC_FIFOO_STAT_BOT_PUSH_FULL_BF_MSK (0x00000001)
#define CALDAC_FIFOO_STAT_BOT_PUSH_FULL_BF_DEF (0x00000000)

///< fifo almost full.
#define CALDAC_FIFOO_STAT_BOT_PUSH_AFULL_BF_OFF ( 1)
#define CALDAC_FIFOO_STAT_BOT_PUSH_AFULL_BF_WID ( 1)
#define CALDAC_FIFOO_STAT_BOT_PUSH_AFULL_BF_MSK (0x00000002)
#define CALDAC_FIFOO_STAT_BOT_PUSH_AFULL_BF_DEF (0x00000000)

///< fifo empty.
#define CALDAC_FIFOO_STAT_BOT_POP_EMP_BF_OFF ( 2)
#define CALDAC_FIFOO_STAT_BOT_POP_EMP_BF_WID ( 1)
#define CALDAC_FIFOO_STAT_BOT_POP_EMP_BF_MSK (0x00000004)
#define CALDAC_FIFOO_STAT_BOT_POP_EMP_BF_DEF (0x00000004)

///< fifo almost empty.
#define CALDAC_FIFOO_STAT_BOT_POP_AEMP_BF_OFF ( 3)
#define CALDAC_FIFOO_STAT_BOT_POP_AEMP_BF_WID ( 1)
#define CALDAC_FIFOO_STAT_BOT_POP_AEMP_BF_MSK (0x00000008)
#define CALDAC_FIFOO_STAT_BOT_POP_AEMP_BF_DEF (0x00000008)

///< fifo status.
#define CALDAC_FIFOO_STAT_BOT_FIFO_STAT_BF_OFF ( 4)
#define CALDAC_FIFOO_STAT_BOT_FIFO_STAT_BF_WID (11)
#define CALDAC_FIFOO_STAT_BOT_FIFO_STAT_BF_MSK (0x00007FF0)
#define CALDAC_FIFOO_STAT_BOT_FIFO_STAT_BF_DEF (0x000000C0)


/** @brief CALDAC_MAP_CALDAC_MAP_GAIN0_EVEN register description at address offset 0x34
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/GAIN0_EVEN
  * CALDAC SWG0 Even gain register.
  */

typedef union {
  struct {
    uint32_t GAIN0E : 16;
    ///< Gain for all 16 lanes.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} caldac_gain0_even_reg_t;

#define CALDAC_GAIN0_EVEN_DEFAULT (0x00000000U)
#define CALDAC_GAIN0_EVEN_RD_MASK (0x0000ffffU)
#define CALDAC_GAIN0_EVEN_WR_MASK (0x0000ffffU)


///< Gain for all 16 lanes.
#define CALDAC_GAIN0_EVEN_GAIN0E_BF_OFF ( 0)
#define CALDAC_GAIN0_EVEN_GAIN0E_BF_WID (16)
#define CALDAC_GAIN0_EVEN_GAIN0E_BF_MSK (0x0000FFFF)
#define CALDAC_GAIN0_EVEN_GAIN0E_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_GAIN1_EVEN register description at address offset 0x38
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/GAIN1_EVEN
  * CALDAC SWG1 Even gain register.
  */

typedef union {
  struct {
    uint32_t GAIN1E : 16;
    ///< Gain for all 16 lanes.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} caldac_gain1_even_reg_t;

#define CALDAC_GAIN1_EVEN_DEFAULT (0x00000000U)
#define CALDAC_GAIN1_EVEN_RD_MASK (0x0000ffffU)
#define CALDAC_GAIN1_EVEN_WR_MASK (0x0000ffffU)


///< Gain for all 16 lanes.
#define CALDAC_GAIN1_EVEN_GAIN1E_BF_OFF ( 0)
#define CALDAC_GAIN1_EVEN_GAIN1E_BF_WID (16)
#define CALDAC_GAIN1_EVEN_GAIN1E_BF_MSK (0x0000FFFF)
#define CALDAC_GAIN1_EVEN_GAIN1E_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_GAIN0_ODD register description at address offset 0x3c
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/GAIN0_ODD
  * CALDAC SWG0 Odd gain register.
  */

typedef union {
  struct {
    uint32_t GAIN0O : 16;
    ///< Gain for all 16 lanes.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} caldac_gain0_odd_reg_t;

#define CALDAC_GAIN0_ODD_DEFAULT (0x00000000U)
#define CALDAC_GAIN0_ODD_RD_MASK (0x0000ffffU)
#define CALDAC_GAIN0_ODD_WR_MASK (0x0000ffffU)


///< Gain for all 16 lanes.
#define CALDAC_GAIN0_ODD_GAIN0O_BF_OFF ( 0)
#define CALDAC_GAIN0_ODD_GAIN0O_BF_WID (16)
#define CALDAC_GAIN0_ODD_GAIN0O_BF_MSK (0x0000FFFF)
#define CALDAC_GAIN0_ODD_GAIN0O_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_GAIN1_ODD register description at address offset 0x40
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/GAIN1_ODD
  * CALDAC SWG1 Odd gain register.
  */

typedef union {
  struct {
    uint32_t GAIN1O : 16;
    ///< Gain for all 16 lanes.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} caldac_gain1_odd_reg_t;

#define CALDAC_GAIN1_ODD_DEFAULT (0x00000000U)
#define CALDAC_GAIN1_ODD_RD_MASK (0x0000ffffU)
#define CALDAC_GAIN1_ODD_WR_MASK (0x0000ffffU)


///< Gain for all 16 lanes.
#define CALDAC_GAIN1_ODD_GAIN1O_BF_OFF ( 0)
#define CALDAC_GAIN1_ODD_GAIN1O_BF_WID (16)
#define CALDAC_GAIN1_ODD_GAIN1O_BF_MSK (0x0000FFFF)
#define CALDAC_GAIN1_ODD_GAIN1O_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_CTRL_SWG_DITHER register description at address offset 0x44
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/CTRL_SWG_DITHER
  * CALDAC SWG control dither register.
  */

typedef union {
  struct {
    uint32_t CTRL_DITHER_EVEN : 1;
    ///< Control dither for even SWG.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t CTRL_DITHER_ODD : 1;
    ///< Control dither for odd SWG.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t CTRL_SWG_EVEN : 1;
    ///< Control swg for even SWG.
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t CTRL_SWG_ODD : 1;
    ///< Control swg for odd SWG.
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} caldac_ctrl_swg_dither_reg_t;

#define CALDAC_CTRL_SWG_DITHER_DEFAULT (0x00000000U)
#define CALDAC_CTRL_SWG_DITHER_RD_MASK (0x0000000fU)
#define CALDAC_CTRL_SWG_DITHER_WR_MASK (0x0000000fU)


///< Control dither for even SWG.
#define CALDAC_CTRL_SWG_DITHER_CTRL_DITHER_EVEN_BF_OFF ( 0)
#define CALDAC_CTRL_SWG_DITHER_CTRL_DITHER_EVEN_BF_WID ( 1)
#define CALDAC_CTRL_SWG_DITHER_CTRL_DITHER_EVEN_BF_MSK (0x00000001)
#define CALDAC_CTRL_SWG_DITHER_CTRL_DITHER_EVEN_BF_DEF (0x00000000)

///< Control dither for odd SWG.
#define CALDAC_CTRL_SWG_DITHER_CTRL_DITHER_ODD_BF_OFF ( 1)
#define CALDAC_CTRL_SWG_DITHER_CTRL_DITHER_ODD_BF_WID ( 1)
#define CALDAC_CTRL_SWG_DITHER_CTRL_DITHER_ODD_BF_MSK (0x00000002)
#define CALDAC_CTRL_SWG_DITHER_CTRL_DITHER_ODD_BF_DEF (0x00000000)

///< Control swg for even SWG.
#define CALDAC_CTRL_SWG_DITHER_CTRL_SWG_EVEN_BF_OFF ( 2)
#define CALDAC_CTRL_SWG_DITHER_CTRL_SWG_EVEN_BF_WID ( 1)
#define CALDAC_CTRL_SWG_DITHER_CTRL_SWG_EVEN_BF_MSK (0x00000004)
#define CALDAC_CTRL_SWG_DITHER_CTRL_SWG_EVEN_BF_DEF (0x00000000)

///< Control swg for odd SWG.
#define CALDAC_CTRL_SWG_DITHER_CTRL_SWG_ODD_BF_OFF ( 3)
#define CALDAC_CTRL_SWG_DITHER_CTRL_SWG_ODD_BF_WID ( 1)
#define CALDAC_CTRL_SWG_DITHER_CTRL_SWG_ODD_BF_MSK (0x00000008)
#define CALDAC_CTRL_SWG_DITHER_CTRL_SWG_ODD_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_CTRL_SWG_SIGN register description at address offset 0x48
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/CTRL_SWG_SIGN
  * CALDAC SWG control sign extension register.
  */

typedef union {
  struct {
    uint32_t CTRL_SIGN_EVEN : 1;
    ///< 0: 2 bit sign extension               1: 3 bit sign extension.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t CTRL_SIGN_ODD : 1;
    ///< 0: 2 bit sign extension               1: 3 bit sign extension.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} caldac_ctrl_swg_sign_reg_t;

#define CALDAC_CTRL_SWG_SIGN_DEFAULT (0x00000000U)
#define CALDAC_CTRL_SWG_SIGN_RD_MASK (0x00000003U)
#define CALDAC_CTRL_SWG_SIGN_WR_MASK (0x00000003U)


///< 0: 2 bit sign extension               1: 3 bit sign extension.
#define CALDAC_CTRL_SWG_SIGN_CTRL_SIGN_EVEN_BF_OFF ( 0)
#define CALDAC_CTRL_SWG_SIGN_CTRL_SIGN_EVEN_BF_WID ( 1)
#define CALDAC_CTRL_SWG_SIGN_CTRL_SIGN_EVEN_BF_MSK (0x00000001)
#define CALDAC_CTRL_SWG_SIGN_CTRL_SIGN_EVEN_BF_DEF (0x00000000)

///< 0: 2 bit sign extension               1: 3 bit sign extension.
#define CALDAC_CTRL_SWG_SIGN_CTRL_SIGN_ODD_BF_OFF ( 1)
#define CALDAC_CTRL_SWG_SIGN_CTRL_SIGN_ODD_BF_WID ( 1)
#define CALDAC_CTRL_SWG_SIGN_CTRL_SIGN_ODD_BF_MSK (0x00000002)
#define CALDAC_CTRL_SWG_SIGN_CTRL_SIGN_ODD_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_MAX_ABS register description at address offset 0x4c
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/MAX_ABS
  * CALDAC MAX ABS register.
  */

typedef union {
  struct {
    uint32_t MAX_ABS_EVEN : 16;
    ///< Maximum absolute for all 16 lanes.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t MAX_ABS_ODD : 16;
    ///< Maximum absolute for all 16 lanes.
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_max_abs_reg_t;

#define CALDAC_MAX_ABS_DEFAULT (0x00000000U)
#define CALDAC_MAX_ABS_RD_MASK (0xffffffffU)
#define CALDAC_MAX_ABS_WR_MASK (0xffffffffU)


///< Maximum absolute for all 16 lanes.
#define CALDAC_MAX_ABS_MAX_ABS_EVEN_BF_OFF ( 0)
#define CALDAC_MAX_ABS_MAX_ABS_EVEN_BF_WID (16)
#define CALDAC_MAX_ABS_MAX_ABS_EVEN_BF_MSK (0x0000FFFF)
#define CALDAC_MAX_ABS_MAX_ABS_EVEN_BF_DEF (0x00000000)

///< Maximum absolute for all 16 lanes.
#define CALDAC_MAX_ABS_MAX_ABS_ODD_BF_OFF (16)
#define CALDAC_MAX_ABS_MAX_ABS_ODD_BF_WID (16)
#define CALDAC_MAX_ABS_MAX_ABS_ODD_BF_MSK (0xFFFF0000)
#define CALDAC_MAX_ABS_MAX_ABS_ODD_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_SMC_RATE register description at address offset 0x50
  *
  * Register default value:        0x00000B6D
  * Register full path in IP: caldac_map/CALDAC_MAP/SMC_RATE
  * CALDAC SMC RATE register.
  */

typedef union {
  struct {
    uint32_t SMC_EVEN_ANT_TOP_RATE : 3;
    ///< SMC even top ant rate.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x5"
    uint32_t SMC_ODD_ANT_TOP_RATE : 3;
    ///< SMC odd top ant rate.
    ///< AccessType="RW" BitOffset="3" ResetValue="0x5"
    uint32_t SMC_EVEN_ANT_BOT_RATE : 3;
    ///< SMC even bottom ant rate.
    ///< AccessType="RW" BitOffset="6" ResetValue="0x5"
    uint32_t SMC_ODD_ANT_BOT_RATE : 3;
    ///< SMC odd bottom ant rate.
    ///< AccessType="RW" BitOffset="9" ResetValue="0x5"
    uint32_t  : 20;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
  } ;
  uint32_t value;
} caldac_smc_rate_reg_t;

#define CALDAC_SMC_RATE_DEFAULT (0x00000b6dU)
#define CALDAC_SMC_RATE_RD_MASK (0x00000fffU)
#define CALDAC_SMC_RATE_WR_MASK (0x00000fffU)


///< SMC even top ant rate.
#define CALDAC_SMC_RATE_SMC_EVEN_ANT_TOP_RATE_BF_OFF ( 0)
#define CALDAC_SMC_RATE_SMC_EVEN_ANT_TOP_RATE_BF_WID ( 3)
#define CALDAC_SMC_RATE_SMC_EVEN_ANT_TOP_RATE_BF_MSK (0x00000007)
#define CALDAC_SMC_RATE_SMC_EVEN_ANT_TOP_RATE_BF_DEF (0x00000005)

///< SMC odd top ant rate.
#define CALDAC_SMC_RATE_SMC_ODD_ANT_TOP_RATE_BF_OFF ( 3)
#define CALDAC_SMC_RATE_SMC_ODD_ANT_TOP_RATE_BF_WID ( 3)
#define CALDAC_SMC_RATE_SMC_ODD_ANT_TOP_RATE_BF_MSK (0x00000038)
#define CALDAC_SMC_RATE_SMC_ODD_ANT_TOP_RATE_BF_DEF (0x00000028)

///< SMC even bottom ant rate.
#define CALDAC_SMC_RATE_SMC_EVEN_ANT_BOT_RATE_BF_OFF ( 6)
#define CALDAC_SMC_RATE_SMC_EVEN_ANT_BOT_RATE_BF_WID ( 3)
#define CALDAC_SMC_RATE_SMC_EVEN_ANT_BOT_RATE_BF_MSK (0x000001C0)
#define CALDAC_SMC_RATE_SMC_EVEN_ANT_BOT_RATE_BF_DEF (0x00000140)

///< SMC odd bottom ant rate.
#define CALDAC_SMC_RATE_SMC_ODD_ANT_BOT_RATE_BF_OFF ( 9)
#define CALDAC_SMC_RATE_SMC_ODD_ANT_BOT_RATE_BF_WID ( 3)
#define CALDAC_SMC_RATE_SMC_ODD_ANT_BOT_RATE_BF_MSK (0x00000E00)
#define CALDAC_SMC_RATE_SMC_ODD_ANT_BOT_RATE_BF_DEF (0x00000A00)


/** @brief CALDAC_MAP_CALDAC_MAP_FIFO_RESET register description at address offset 0x54
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/FIFO_RESET
  * CALDAC FIFO Reset register.
  */

typedef union {
  struct {
    uint32_t FIFO_RST_TOP : 1;
    ///< Reset the top fifos.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FIFO_RST_BOT : 1;
    ///< Reset the bottom fifos.
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} caldac_fifo_rst_reg_t;

#define CALDAC_FIFO_RST_DEFAULT (0x00000000U)
#define CALDAC_FIFO_RST_RD_MASK (0x00000003U)
#define CALDAC_FIFO_RST_WR_MASK (0x00000003U)


///< Reset the top fifos.
#define CALDAC_FIFO_RST_FIFO_RST_TOP_BF_OFF ( 0)
#define CALDAC_FIFO_RST_FIFO_RST_TOP_BF_WID ( 1)
#define CALDAC_FIFO_RST_FIFO_RST_TOP_BF_MSK (0x00000001)
#define CALDAC_FIFO_RST_FIFO_RST_TOP_BF_DEF (0x00000000)

///< Reset the bottom fifos.
#define CALDAC_FIFO_RST_FIFO_RST_BOT_BF_OFF ( 1)
#define CALDAC_FIFO_RST_FIFO_RST_BOT_BF_WID ( 1)
#define CALDAC_FIFO_RST_FIFO_RST_BOT_BF_MSK (0x00000002)
#define CALDAC_FIFO_RST_FIFO_RST_BOT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_INT_STATUS register description at address offset 0x60
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/INT_STATUS
  * CALDAC FIFO Interrupt Status Register
  */

typedef union {
  struct {
    uint32_t INT_STAT0 : 1;
    ///< Indicates FIFO Odd underflow for caldac bot
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t INT_STAT1 : 1;
    ///< Indicates FIFO Odd overflow for caldac bot
    ///< AccessType="RO/V" BitOffset="1" ResetValue="0x0"
    uint32_t INT_STAT2 : 1;
    ///< Indicates FIFO Odd underflow for caldac top
    ///< AccessType="RO/V" BitOffset="2" ResetValue="0x0"
    uint32_t INT_STAT3 : 1;
    ///< Indicates FIFO Odd overflow for caldac top
    ///< AccessType="RO/V" BitOffset="3" ResetValue="0x0"
    uint32_t INT_STAT4 : 1;
    ///< Indicates FIFO Even underflow for caldac bot
    ///< AccessType="RO/V" BitOffset="4" ResetValue="0x0"
    uint32_t INT_STAT5 : 1;
    ///< Indicates FIFO Even overflow for caldac bot
    ///< AccessType="RO/V" BitOffset="5" ResetValue="0x0"
    uint32_t INT_STAT6 : 1;
    ///< Indicates FIFO Even underflow for caldac top
    ///< AccessType="RO/V" BitOffset="6" ResetValue="0x0"
    uint32_t INT_STAT7 : 1;
    ///< Indicates FIFO Even overflow for caldac top
    ///< AccessType="RO/V" BitOffset="7" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} caldac_int_stat_reg_t;

#define CALDAC_INT_STAT_DEFAULT (0x00000000U)
#define CALDAC_INT_STAT_RD_MASK (0x000000ffU)
#define CALDAC_INT_STAT_WR_MASK (0x00000000U)


///< Indicates FIFO Odd underflow for caldac bot
#define CALDAC_INT_STAT_INT_STAT0_BF_OFF ( 0)
#define CALDAC_INT_STAT_INT_STAT0_BF_WID ( 1)
#define CALDAC_INT_STAT_INT_STAT0_BF_MSK (0x00000001)
#define CALDAC_INT_STAT_INT_STAT0_BF_DEF (0x00000000)

///< Indicates FIFO Odd overflow for caldac bot
#define CALDAC_INT_STAT_INT_STAT1_BF_OFF ( 1)
#define CALDAC_INT_STAT_INT_STAT1_BF_WID ( 1)
#define CALDAC_INT_STAT_INT_STAT1_BF_MSK (0x00000002)
#define CALDAC_INT_STAT_INT_STAT1_BF_DEF (0x00000000)

///< Indicates FIFO Odd underflow for caldac top
#define CALDAC_INT_STAT_INT_STAT2_BF_OFF ( 2)
#define CALDAC_INT_STAT_INT_STAT2_BF_WID ( 1)
#define CALDAC_INT_STAT_INT_STAT2_BF_MSK (0x00000004)
#define CALDAC_INT_STAT_INT_STAT2_BF_DEF (0x00000000)

///< Indicates FIFO Odd overflow for caldac top
#define CALDAC_INT_STAT_INT_STAT3_BF_OFF ( 3)
#define CALDAC_INT_STAT_INT_STAT3_BF_WID ( 1)
#define CALDAC_INT_STAT_INT_STAT3_BF_MSK (0x00000008)
#define CALDAC_INT_STAT_INT_STAT3_BF_DEF (0x00000000)

///< Indicates FIFO Even underflow for caldac bot
#define CALDAC_INT_STAT_INT_STAT4_BF_OFF ( 4)
#define CALDAC_INT_STAT_INT_STAT4_BF_WID ( 1)
#define CALDAC_INT_STAT_INT_STAT4_BF_MSK (0x00000010)
#define CALDAC_INT_STAT_INT_STAT4_BF_DEF (0x00000000)

///< Indicates FIFO Even overflow for caldac bot
#define CALDAC_INT_STAT_INT_STAT5_BF_OFF ( 5)
#define CALDAC_INT_STAT_INT_STAT5_BF_WID ( 1)
#define CALDAC_INT_STAT_INT_STAT5_BF_MSK (0x00000020)
#define CALDAC_INT_STAT_INT_STAT5_BF_DEF (0x00000000)

///< Indicates FIFO Even underflow for caldac top
#define CALDAC_INT_STAT_INT_STAT6_BF_OFF ( 6)
#define CALDAC_INT_STAT_INT_STAT6_BF_WID ( 1)
#define CALDAC_INT_STAT_INT_STAT6_BF_MSK (0x00000040)
#define CALDAC_INT_STAT_INT_STAT6_BF_DEF (0x00000000)

///< Indicates FIFO Even overflow for caldac top
#define CALDAC_INT_STAT_INT_STAT7_BF_OFF ( 7)
#define CALDAC_INT_STAT_INT_STAT7_BF_WID ( 1)
#define CALDAC_INT_STAT_INT_STAT7_BF_MSK (0x00000080)
#define CALDAC_INT_STAT_INT_STAT7_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_INT_HI_EN register description at address offset 0x64
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/INT_HI_EN
  * CALDAC FIFO Interrupt High Enable Register
  */

typedef union {
  struct {
    uint32_t INT_HI_EN : 8;
    ///< Register error interrupt high enable
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} caldac_int_hi_en_reg_t;

#define CALDAC_INT_HI_EN_DEFAULT (0x00000000U)
#define CALDAC_INT_HI_EN_RD_MASK (0x000000ffU)
#define CALDAC_INT_HI_EN_WR_MASK (0x000000ffU)


///< Register error interrupt high enable
#define CALDAC_INT_HI_EN_INT_HI_EN_BF_OFF ( 0)
#define CALDAC_INT_HI_EN_INT_HI_EN_BF_WID ( 8)
#define CALDAC_INT_HI_EN_INT_HI_EN_BF_MSK (0x000000FF)
#define CALDAC_INT_HI_EN_INT_HI_EN_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_INT_LO_EN register description at address offset 0x68
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/INT_LO_EN
  * CALDAC FIFO Interrupt Low Enable Register
  */

typedef union {
  struct {
    uint32_t INT_LO_EN : 8;
    ///< Register error interrupt low enable
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} caldac_int_lo_en_reg_t;

#define CALDAC_INT_LO_EN_DEFAULT (0x00000000U)
#define CALDAC_INT_LO_EN_RD_MASK (0x000000ffU)
#define CALDAC_INT_LO_EN_WR_MASK (0x000000ffU)


///< Register error interrupt low enable
#define CALDAC_INT_LO_EN_INT_LO_EN_BF_OFF ( 0)
#define CALDAC_INT_LO_EN_INT_LO_EN_BF_WID ( 8)
#define CALDAC_INT_LO_EN_INT_LO_EN_BF_MSK (0x000000FF)
#define CALDAC_INT_LO_EN_INT_LO_EN_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_INT_CLEAR register description at address offset 0x6c
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/INT_CLEAR
  * CALDAC FIFO Interrupt Clear Register
  */

typedef union {
  struct {
    uint32_t INT_CLR : 8;
    ///< Register error interrupt clear
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} caldac_int_clr_reg_t;

#define CALDAC_INT_CLR_DEFAULT (0x00000000U)
#define CALDAC_INT_CLR_RD_MASK (0x000000ffU)
#define CALDAC_INT_CLR_WR_MASK (0x000000ffU)


///< Register error interrupt clear
#define CALDAC_INT_CLR_INT_CLR_BF_OFF ( 0)
#define CALDAC_INT_CLR_INT_CLR_BF_WID ( 8)
#define CALDAC_INT_CLR_INT_CLR_BF_MSK (0x000000FF)
#define CALDAC_INT_CLR_INT_CLR_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_INT_FORCE register description at address offset 0x70
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/INT_FORCE
  * CALDAC FIFO Interrupt Force Register
  */

typedef union {
  struct {
    uint32_t INT_FORCE : 8;
    ///< Register error interrupt force
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} caldac_int_force_reg_t;

#define CALDAC_INT_FORCE_DEFAULT (0x00000000U)
#define CALDAC_INT_FORCE_RD_MASK (0x000000ffU)
#define CALDAC_INT_FORCE_WR_MASK (0x000000ffU)


///< Register error interrupt force
#define CALDAC_INT_FORCE_INT_FORCE_BF_OFF ( 0)
#define CALDAC_INT_FORCE_INT_FORCE_BF_WID ( 8)
#define CALDAC_INT_FORCE_INT_FORCE_BF_MSK (0x000000FF)
#define CALDAC_INT_FORCE_INT_FORCE_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_SNAP register description at address offset 0x74
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_SNAP
  * CALDAC Debug Snap Ctrl register.
  */

typedef union {
  struct {
    uint32_t ENABLE : 1;
    ///< Enable CalDAC Debug Snap logic. Must be set to 1 to use any CalDAC
    ///< debug Snap logic. Note when 0 the Debug Snap logic is disabled and
    ///< the FIFO pop counter is set to 1.   Toggling from 1-0-1 can be done
    ///< to align the pop counter with the first word out of the FIFO
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t GO_SNAP_TOP : 1;
    ///< Write one to arm snapshot.  Note that this bit resets once the snapshot
    ///< has occurred.
    ///< AccessType="RW/V" BitOffset="1" ResetValue="0x0"
    uint32_t GO_SNAP_BOT : 1;
    ///< Write one to arm snapshot.  Note that this bit resets once the snapshot
    ///< has occurred.
    ///< AccessType="RW/V" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} caldac_dbg_snap_reg_t;

#define CALDAC_DBG_SNAP_DEFAULT (0x00000000U)
#define CALDAC_DBG_SNAP_RD_MASK (0x00000007U)
#define CALDAC_DBG_SNAP_WR_MASK (0x00000007U)


///< Enable CalDAC Debug Snap logic. Must be set to 1 to use any CalDAC
///< debug Snap logic. Note when 0 the Debug Snap logic is disabled and
///< the FIFO pop counter is set to 1.   Toggling from 1-0-1 can be done
///< to align the pop counter with the first word out of the FIFO
#define CALDAC_DBG_SNAP_EN_BF_OFF ( 0)
#define CALDAC_DBG_SNAP_EN_BF_WID ( 1)
#define CALDAC_DBG_SNAP_EN_BF_MSK (0x00000001)
#define CALDAC_DBG_SNAP_EN_BF_DEF (0x00000000)

///< Write one to arm snapshot.  Note that this bit resets once the snapshot
///< has occurred.
#define CALDAC_DBG_SNAP_GO_SNAP_TOP_BF_OFF ( 1)
#define CALDAC_DBG_SNAP_GO_SNAP_TOP_BF_WID ( 1)
#define CALDAC_DBG_SNAP_GO_SNAP_TOP_BF_MSK (0x00000002)
#define CALDAC_DBG_SNAP_GO_SNAP_TOP_BF_DEF (0x00000000)

///< Write one to arm snapshot.  Note that this bit resets once the snapshot
///< has occurred.
#define CALDAC_DBG_SNAP_GO_SNAP_BOT_BF_OFF ( 2)
#define CALDAC_DBG_SNAP_GO_SNAP_BOT_BF_WID ( 1)
#define CALDAC_DBG_SNAP_GO_SNAP_BOT_BF_MSK (0x00000004)
#define CALDAC_DBG_SNAP_GO_SNAP_BOT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_SNAP_PCNT_TOP register description at address offset 0x78
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_SNAP_PCNT_TOP
  * CALDAC Debug Snap Pop Cnt register.
  */

typedef union {
  struct {
    uint32_t CNT : 32;
    ///< Pop counter comparison value.  When go_snap bit is written and the
    ///< FIFO pop counter equals this value the snapshot of the fifo data will
    ///< happen.  Note when 0 this feature is disabled and setting the go_snap
    ///< bit will result in an immediate (delay under 40 clocks)) snapshot
    ///< of the fifo data.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_snap_pcnt_top_reg_t;

#define CALDAC_DBG_SNAP_PCNT_TOP_DEFAULT (0x00000000U)
#define CALDAC_DBG_SNAP_PCNT_TOP_RD_MASK (0xffffffffU)
#define CALDAC_DBG_SNAP_PCNT_TOP_WR_MASK (0xffffffffU)


///< Pop counter comparison value.  When go_snap bit is written and the
///< FIFO pop counter equals this value the snapshot of the fifo data will
///< happen.  Note when 0 this feature is disabled and setting the go_snap
///< bit will result in an immediate (delay under 40 clocks)) snapshot
///< of the fifo data.
#define CALDAC_DBG_SNAP_PCNT_TOP_CNT_BF_OFF ( 0)
#define CALDAC_DBG_SNAP_PCNT_TOP_CNT_BF_WID (32)
#define CALDAC_DBG_SNAP_PCNT_TOP_CNT_BF_MSK (0xFFFFFFFF)
#define CALDAC_DBG_SNAP_PCNT_TOP_CNT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_SNAP_CNT_TOP register description at address offset 0x7c
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_SNAP_CNT_TOP
  * CALDAC Debug Snap Cnt register.
  */

typedef union {
  struct {
    uint32_t SNAP_CNT : 32;
    ///< Snapshot of the pop counter value when the FIFO data was captured.
    ///< This is a static capture of the pop count. Note the pop counter can
    ///< and will rollover to 1 once it reaches 2^32-1.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_snap_cnt_top_reg_t;

#define CALDAC_DBG_SNAP_CNT_TOP_DEFAULT (0x00000000U)
#define CALDAC_DBG_SNAP_CNT_TOP_RD_MASK (0xffffffffU)
#define CALDAC_DBG_SNAP_CNT_TOP_WR_MASK (0x00000000U)


///< Snapshot of the pop counter value when the FIFO data was captured.
///< This is a static capture of the pop count. Note the pop counter can
///< and will rollover to 1 once it reaches 2^32-1.
#define CALDAC_DBG_SNAP_CNT_TOP_SNAP_CNT_BF_OFF ( 0)
#define CALDAC_DBG_SNAP_CNT_TOP_SNAP_CNT_BF_WID (32)
#define CALDAC_DBG_SNAP_CNT_TOP_SNAP_CNT_BF_MSK (0xFFFFFFFF)
#define CALDAC_DBG_SNAP_CNT_TOP_SNAP_CNT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_SNAPO_TOP[8] register description at address offset 0x80
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_SNAPO_TOP
  * CALDAC Debug Snap FF data register.
  */

typedef union {
  struct {
    uint32_t FF0 : 14;
    ///< Word 0 of FIFO output data.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="14" ResetValue="None"
    uint32_t FF1 : 14;
    ///< Word 1 of FIFO output data.
    ///< AccessType="RO" BitOffset="16" ResetValue="0x0"
    uint32_t POP : 1;
    ///< Set to one if the fifo is actively transfering data when this word
    ///< was captured.
    ///< AccessType="RO" BitOffset="30" ResetValue="0x0"
    uint32_t DONE : 1;
    ///< Set to one if a snapshot has been loaded.
    ///< AccessType="RO" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_snapo_top_reg_t;

#define CALDAC_DBG_SNAPO_TOP_DEFAULT (0x00000000U)
#define CALDAC_DBG_SNAPO_TOP_RD_MASK (0xffff3fffU)
#define CALDAC_DBG_SNAPO_TOP_WR_MASK (0x00000000U)


///< Word 0 of FIFO output data.
#define CALDAC_DBG_SNAPO_TOP_FF0_BF_OFF ( 0)
#define CALDAC_DBG_SNAPO_TOP_FF0_BF_WID (14)
#define CALDAC_DBG_SNAPO_TOP_FF0_BF_MSK (0x00003FFF)
#define CALDAC_DBG_SNAPO_TOP_FF0_BF_DEF (0x00000000)

///< Word 1 of FIFO output data.
#define CALDAC_DBG_SNAPO_TOP_FF1_BF_OFF (16)
#define CALDAC_DBG_SNAPO_TOP_FF1_BF_WID (14)
#define CALDAC_DBG_SNAPO_TOP_FF1_BF_MSK (0x3FFF0000)
#define CALDAC_DBG_SNAPO_TOP_FF1_BF_DEF (0x00000000)

///< Set to one if the fifo is actively transfering data when this word
///< was captured.
#define CALDAC_DBG_SNAPO_TOP_POP_BF_OFF (30)
#define CALDAC_DBG_SNAPO_TOP_POP_BF_WID ( 1)
#define CALDAC_DBG_SNAPO_TOP_POP_BF_MSK (0x40000000)
#define CALDAC_DBG_SNAPO_TOP_POP_BF_DEF (0x00000000)

///< Set to one if a snapshot has been loaded.
#define CALDAC_DBG_SNAPO_TOP_DONE_BF_OFF (31)
#define CALDAC_DBG_SNAPO_TOP_DONE_BF_WID ( 1)
#define CALDAC_DBG_SNAPO_TOP_DONE_BF_MSK (0x80000000)
#define CALDAC_DBG_SNAPO_TOP_DONE_BF_DEF (0x00000000)
#define CALDAC_DBG_SNAPO_TOP_ARR_SZ0 (8)
#define CALDAC_DBG_SNAPO_TOP_ARRAY_STRIDE0 (0x0004)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_SNAPE_TOP[8] register description at address offset 0xa0
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_SNAPE_TOP
  * CALDAC Debug Snap FF data register.
  */

typedef union {
  struct {
    uint32_t FF0 : 14;
    ///< Word 0 of FIFO output data.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="14" ResetValue="None"
    uint32_t FF1 : 14;
    ///< Word 1 of FIFO output data.
    ///< AccessType="RO" BitOffset="16" ResetValue="0x0"
    uint32_t POP : 1;
    ///< Set to one if the fifo is actively transfering data when this word
    ///< was captured.
    ///< AccessType="RO" BitOffset="30" ResetValue="0x0"
    uint32_t DONE : 1;
    ///< Set to one if a snapshot has been loaded.
    ///< AccessType="RO" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_snape_top_reg_t;

#define CALDAC_DBG_SNAPE_TOP_DEFAULT (0x00000000U)
#define CALDAC_DBG_SNAPE_TOP_RD_MASK (0xffff3fffU)
#define CALDAC_DBG_SNAPE_TOP_WR_MASK (0x00000000U)


///< Word 0 of FIFO output data.
#define CALDAC_DBG_SNAPE_TOP_FF0_BF_OFF ( 0)
#define CALDAC_DBG_SNAPE_TOP_FF0_BF_WID (14)
#define CALDAC_DBG_SNAPE_TOP_FF0_BF_MSK (0x00003FFF)
#define CALDAC_DBG_SNAPE_TOP_FF0_BF_DEF (0x00000000)

///< Word 1 of FIFO output data.
#define CALDAC_DBG_SNAPE_TOP_FF1_BF_OFF (16)
#define CALDAC_DBG_SNAPE_TOP_FF1_BF_WID (14)
#define CALDAC_DBG_SNAPE_TOP_FF1_BF_MSK (0x3FFF0000)
#define CALDAC_DBG_SNAPE_TOP_FF1_BF_DEF (0x00000000)

///< Set to one if the fifo is actively transfering data when this word
///< was captured.
#define CALDAC_DBG_SNAPE_TOP_POP_BF_OFF (30)
#define CALDAC_DBG_SNAPE_TOP_POP_BF_WID ( 1)
#define CALDAC_DBG_SNAPE_TOP_POP_BF_MSK (0x40000000)
#define CALDAC_DBG_SNAPE_TOP_POP_BF_DEF (0x00000000)

///< Set to one if a snapshot has been loaded.
#define CALDAC_DBG_SNAPE_TOP_DONE_BF_OFF (31)
#define CALDAC_DBG_SNAPE_TOP_DONE_BF_WID ( 1)
#define CALDAC_DBG_SNAPE_TOP_DONE_BF_MSK (0x80000000)
#define CALDAC_DBG_SNAPE_TOP_DONE_BF_DEF (0x00000000)
#define CALDAC_DBG_SNAPE_TOP_ARR_SZ0 (8)
#define CALDAC_DBG_SNAPE_TOP_ARRAY_STRIDE0 (0x0004)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_SNAP_PCNT_BOT register description at address offset 0xc0
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_SNAP_PCNT_BOT
  * CALDAC Debug Snap Pop Cnt register.
  */

typedef union {
  struct {
    uint32_t CNT : 32;
    ///< Pop counter comparison value.  When go_snap bit is written and the
    ///< FIFO pop counter equals this value the snapshot of the fifo data will
    ///< happen.  Note when 0 this feature is disabled and setting the go_snap
    ///< bit will result in an immediate (delay under 40 clocks)) snapshot
    ///< of the fifo data.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_snap_pcnt_bot_reg_t;

#define CALDAC_DBG_SNAP_PCNT_BOT_DEFAULT (0x00000000U)
#define CALDAC_DBG_SNAP_PCNT_BOT_RD_MASK (0xffffffffU)
#define CALDAC_DBG_SNAP_PCNT_BOT_WR_MASK (0xffffffffU)


///< Pop counter comparison value.  When go_snap bit is written and the
///< FIFO pop counter equals this value the snapshot of the fifo data will
///< happen.  Note when 0 this feature is disabled and setting the go_snap
///< bit will result in an immediate (delay under 40 clocks)) snapshot
///< of the fifo data.
#define CALDAC_DBG_SNAP_PCNT_BOT_CNT_BF_OFF ( 0)
#define CALDAC_DBG_SNAP_PCNT_BOT_CNT_BF_WID (32)
#define CALDAC_DBG_SNAP_PCNT_BOT_CNT_BF_MSK (0xFFFFFFFF)
#define CALDAC_DBG_SNAP_PCNT_BOT_CNT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_SNAP_CNT_BOT register description at address offset 0xc4
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_SNAP_CNT_BOT
  * CALDAC Debug Snap Cnt register.
  */

typedef union {
  struct {
    uint32_t SNAP_CNT : 32;
    ///< Snapshot of the pop counter value when the FIFO data was captured.
    ///< This is a static capture of the pop count. Note the pop counter can
    ///< and will rollover to 1 once it reaches 2^32-1.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_snap_cnt_bot_reg_t;

#define CALDAC_DBG_SNAP_CNT_BOT_DEFAULT (0x00000000U)
#define CALDAC_DBG_SNAP_CNT_BOT_RD_MASK (0xffffffffU)
#define CALDAC_DBG_SNAP_CNT_BOT_WR_MASK (0x00000000U)


///< Snapshot of the pop counter value when the FIFO data was captured.
///< This is a static capture of the pop count. Note the pop counter can
///< and will rollover to 1 once it reaches 2^32-1.
#define CALDAC_DBG_SNAP_CNT_BOT_SNAP_CNT_BF_OFF ( 0)
#define CALDAC_DBG_SNAP_CNT_BOT_SNAP_CNT_BF_WID (32)
#define CALDAC_DBG_SNAP_CNT_BOT_SNAP_CNT_BF_MSK (0xFFFFFFFF)
#define CALDAC_DBG_SNAP_CNT_BOT_SNAP_CNT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_SNAPO_BOT[8] register description at address offset 0xc8
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_SNAPO_BOT
  * CALDAC Debug Snap FF data register.
  */

typedef union {
  struct {
    uint32_t FF0 : 14;
    ///< Word 0 of FIFO output data.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="14" ResetValue="None"
    uint32_t FF1 : 14;
    ///< Word 1 of FIFO output data.
    ///< AccessType="RO" BitOffset="16" ResetValue="0x0"
    uint32_t POP : 1;
    ///< Set to one if the fifo is actively transfering data when this word
    ///< was captured.
    ///< AccessType="RO" BitOffset="30" ResetValue="0x0"
    uint32_t DONE : 1;
    ///< Set to one if a snapshot has been loaded.
    ///< AccessType="RO" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_snapo_bot_reg_t;

#define CALDAC_DBG_SNAPO_BOT_DEFAULT (0x00000000U)
#define CALDAC_DBG_SNAPO_BOT_RD_MASK (0xffff3fffU)
#define CALDAC_DBG_SNAPO_BOT_WR_MASK (0x00000000U)


///< Word 0 of FIFO output data.
#define CALDAC_DBG_SNAPO_BOT_FF0_BF_OFF ( 0)
#define CALDAC_DBG_SNAPO_BOT_FF0_BF_WID (14)
#define CALDAC_DBG_SNAPO_BOT_FF0_BF_MSK (0x00003FFF)
#define CALDAC_DBG_SNAPO_BOT_FF0_BF_DEF (0x00000000)

///< Word 1 of FIFO output data.
#define CALDAC_DBG_SNAPO_BOT_FF1_BF_OFF (16)
#define CALDAC_DBG_SNAPO_BOT_FF1_BF_WID (14)
#define CALDAC_DBG_SNAPO_BOT_FF1_BF_MSK (0x3FFF0000)
#define CALDAC_DBG_SNAPO_BOT_FF1_BF_DEF (0x00000000)

///< Set to one if the fifo is actively transfering data when this word
///< was captured.
#define CALDAC_DBG_SNAPO_BOT_POP_BF_OFF (30)
#define CALDAC_DBG_SNAPO_BOT_POP_BF_WID ( 1)
#define CALDAC_DBG_SNAPO_BOT_POP_BF_MSK (0x40000000)
#define CALDAC_DBG_SNAPO_BOT_POP_BF_DEF (0x00000000)

///< Set to one if a snapshot has been loaded.
#define CALDAC_DBG_SNAPO_BOT_DONE_BF_OFF (31)
#define CALDAC_DBG_SNAPO_BOT_DONE_BF_WID ( 1)
#define CALDAC_DBG_SNAPO_BOT_DONE_BF_MSK (0x80000000)
#define CALDAC_DBG_SNAPO_BOT_DONE_BF_DEF (0x00000000)
#define CALDAC_DBG_SNAPO_BOT_ARR_SZ0 (8)
#define CALDAC_DBG_SNAPO_BOT_ARRAY_STRIDE0 (0x0004)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_SNAPE_BOT[8] register description at address offset 0xe8
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_SNAPE_BOT
  * CALDAC Debug Snap FF data register.
  */

typedef union {
  struct {
    uint32_t FF0 : 14;
    ///< Word 0 of FIFO output data.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="14" ResetValue="None"
    uint32_t FF1 : 14;
    ///< Word 1 of FIFO output data.
    ///< AccessType="RO" BitOffset="16" ResetValue="0x0"
    uint32_t POP : 1;
    ///< Set to one if the fifo is actively transfering data when this word
    ///< was captured.
    ///< AccessType="RO" BitOffset="30" ResetValue="0x0"
    uint32_t DONE : 1;
    ///< Set to one if a snapshot has been loaded.
    ///< AccessType="RO" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_snape_bot_reg_t;

#define CALDAC_DBG_SNAPE_BOT_DEFAULT (0x00000000U)
#define CALDAC_DBG_SNAPE_BOT_RD_MASK (0xffff3fffU)
#define CALDAC_DBG_SNAPE_BOT_WR_MASK (0x00000000U)


///< Word 0 of FIFO output data.
#define CALDAC_DBG_SNAPE_BOT_FF0_BF_OFF ( 0)
#define CALDAC_DBG_SNAPE_BOT_FF0_BF_WID (14)
#define CALDAC_DBG_SNAPE_BOT_FF0_BF_MSK (0x00003FFF)
#define CALDAC_DBG_SNAPE_BOT_FF0_BF_DEF (0x00000000)

///< Word 1 of FIFO output data.
#define CALDAC_DBG_SNAPE_BOT_FF1_BF_OFF (16)
#define CALDAC_DBG_SNAPE_BOT_FF1_BF_WID (14)
#define CALDAC_DBG_SNAPE_BOT_FF1_BF_MSK (0x3FFF0000)
#define CALDAC_DBG_SNAPE_BOT_FF1_BF_DEF (0x00000000)

///< Set to one if the fifo is actively transfering data when this word
///< was captured.
#define CALDAC_DBG_SNAPE_BOT_POP_BF_OFF (30)
#define CALDAC_DBG_SNAPE_BOT_POP_BF_WID ( 1)
#define CALDAC_DBG_SNAPE_BOT_POP_BF_MSK (0x40000000)
#define CALDAC_DBG_SNAPE_BOT_POP_BF_DEF (0x00000000)

///< Set to one if a snapshot has been loaded.
#define CALDAC_DBG_SNAPE_BOT_DONE_BF_OFF (31)
#define CALDAC_DBG_SNAPE_BOT_DONE_BF_WID ( 1)
#define CALDAC_DBG_SNAPE_BOT_DONE_BF_MSK (0x80000000)
#define CALDAC_DBG_SNAPE_BOT_DONE_BF_DEF (0x00000000)
#define CALDAC_DBG_SNAPE_BOT_ARR_SZ0 (8)
#define CALDAC_DBG_SNAPE_BOT_ARRAY_STRIDE0 (0x0004)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_FFS_BFN_TOP register description at address offset 0x108
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_FFS_BFN_TOP
  * CALDAC Debug FFS BFN Count register.
  */

typedef union {
  struct {
    uint32_t BFN_CNT : 32;
    ///< BFN count when the appropriate Caldac FIFO start triggered. Please
    ///< note there are synchronization delays to the FIFO start signal that
    ///< cause the capture to be delayed by 1-3 clocks. So the true BFN_CNT
    ///< can be found by subtracting 2 (approx) from this value.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_ffs_bfn_top_reg_t;

#define CALDAC_DBG_FFS_BFN_TOP_DEFAULT (0x00000000U)
#define CALDAC_DBG_FFS_BFN_TOP_RD_MASK (0xffffffffU)
#define CALDAC_DBG_FFS_BFN_TOP_WR_MASK (0x00000000U)


///< BFN count when the appropriate Caldac FIFO start triggered. Please
///< note there are synchronization delays to the FIFO start signal that
///< cause the capture to be delayed by 1-3 clocks. So the true BFN_CNT
///< can be found by subtracting 2 (approx) from this value.
#define CALDAC_DBG_FFS_BFN_TOP_BFN_CNT_BF_OFF ( 0)
#define CALDAC_DBG_FFS_BFN_TOP_BFN_CNT_BF_WID (32)
#define CALDAC_DBG_FFS_BFN_TOP_BFN_CNT_BF_MSK (0xFFFFFFFF)
#define CALDAC_DBG_FFS_BFN_TOP_BFN_CNT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_FFS_BFN_BOT register description at address offset 0x10c
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_FFS_BFN_BOT
  * CALDAC Debug FFS BFN Count register.
  */

typedef union {
  struct {
    uint32_t BFN_CNT : 32;
    ///< BFN count when the appropriate Caldac FIFO start triggered. Please
    ///< note there are synchronization delays to the FIFO start signal that
    ///< cause the capture to be delayed by 1-3 clocks. So the true BFN_CNT
    ///< can be found by subtracting 2 (approx) from this value.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_ffs_bfn_bot_reg_t;

#define CALDAC_DBG_FFS_BFN_BOT_DEFAULT (0x00000000U)
#define CALDAC_DBG_FFS_BFN_BOT_RD_MASK (0xffffffffU)
#define CALDAC_DBG_FFS_BFN_BOT_WR_MASK (0x00000000U)


///< BFN count when the appropriate Caldac FIFO start triggered. Please
///< note there are synchronization delays to the FIFO start signal that
///< cause the capture to be delayed by 1-3 clocks. So the true BFN_CNT
///< can be found by subtracting 2 (approx) from this value.
#define CALDAC_DBG_FFS_BFN_BOT_BFN_CNT_BF_OFF ( 0)
#define CALDAC_DBG_FFS_BFN_BOT_BFN_CNT_BF_WID (32)
#define CALDAC_DBG_FFS_BFN_BOT_BFN_CNT_BF_MSK (0xFFFFFFFF)
#define CALDAC_DBG_FFS_BFN_BOT_BFN_CNT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_FFS_LVL register description at address offset 0x110
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_FFS_LVL
  * CALDAC Debug FFS Data Level register.
  */

typedef union {
  struct {
    uint32_t FIFO_LVLO_TOP : 4;
    ///< Approximate FIFO Level when the appropriate Caldac FIFO start triggered.
    ///< Please note there are synchronization delays to the FIFO start signal
    ///< that cause the capture to be delayed by 1-3 clocks.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
    uint32_t FIFO_LVLE_TOP : 4;
    ///< Approximate FIFO Level when the appropriate Caldac FIFO start triggered.
    ///< Please note there are synchronization delays to the FIFO start signal
    ///< that cause the capture to be delayed by 1-3 clocks.
    ///< AccessType="RO" BitOffset="4" ResetValue="0x0"
    uint32_t FIFO_LVLO_BOT : 4;
    ///< Approximate FIFO Level when the appropriate Caldac FIFO start triggered.
    ///< Please note there are synchronization delays to the FIFO start signal
    ///< that cause the capture to be delayed by 1-3 clocks.
    ///< AccessType="RO" BitOffset="8" ResetValue="0x0"
    uint32_t FIFO_LVLE_BOT : 4;
    ///< Approximate FIFO Level when the appropriate Caldac FIFO start triggered.
    ///< Please note there are synchronization delays to the FIFO start signal
    ///< that cause the capture to be delayed by 1-3 clocks.
    ///< AccessType="RO" BitOffset="12" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} caldac_dbg_ffs_lvl_reg_t;

#define CALDAC_DBG_FFS_LVL_DEFAULT (0x00000000U)
#define CALDAC_DBG_FFS_LVL_RD_MASK (0x0000ffffU)
#define CALDAC_DBG_FFS_LVL_WR_MASK (0x00000000U)


///< Approximate FIFO Level when the appropriate Caldac FIFO start triggered.
///< Please note there are synchronization delays to the FIFO start signal
///< that cause the capture to be delayed by 1-3 clocks.
#define CALDAC_DBG_FFS_LVL_FIFO_LVLO_TOP_BF_OFF ( 0)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLO_TOP_BF_WID ( 4)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLO_TOP_BF_MSK (0x0000000F)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLO_TOP_BF_DEF (0x00000000)

///< Approximate FIFO Level when the appropriate Caldac FIFO start triggered.
///< Please note there are synchronization delays to the FIFO start signal
///< that cause the capture to be delayed by 1-3 clocks.
#define CALDAC_DBG_FFS_LVL_FIFO_LVLE_TOP_BF_OFF ( 4)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLE_TOP_BF_WID ( 4)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLE_TOP_BF_MSK (0x000000F0)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLE_TOP_BF_DEF (0x00000000)

///< Approximate FIFO Level when the appropriate Caldac FIFO start triggered.
///< Please note there are synchronization delays to the FIFO start signal
///< that cause the capture to be delayed by 1-3 clocks.
#define CALDAC_DBG_FFS_LVL_FIFO_LVLO_BOT_BF_OFF ( 8)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLO_BOT_BF_WID ( 4)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLO_BOT_BF_MSK (0x00000F00)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLO_BOT_BF_DEF (0x00000000)

///< Approximate FIFO Level when the appropriate Caldac FIFO start triggered.
///< Please note there are synchronization delays to the FIFO start signal
///< that cause the capture to be delayed by 1-3 clocks.
#define CALDAC_DBG_FFS_LVL_FIFO_LVLE_BOT_BF_OFF (12)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLE_BOT_BF_WID ( 4)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLE_BOT_BF_MSK (0x0000F000)
#define CALDAC_DBG_FFS_LVL_FIFO_LVLE_BOT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_VALS_BFNO_TOP register description at address offset 0x114
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_VALS_BFNO_TOP
  * CALDAC Debug Valid BFN Count register.
  */

typedef union {
  struct {
    uint32_t BFN_CNT : 32;
    ///< BFN count when the first valid data word (valid=1) reaches the FIFO.
    ///< Note: Typical number of clocks from BFN activation of CMEM/SWG's to
    ///< FIFO input valid is 17.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_vals_bfno_top_reg_t;

#define CALDAC_DBG_VALS_BFNO_TOP_DEFAULT (0x00000000U)
#define CALDAC_DBG_VALS_BFNO_TOP_RD_MASK (0xffffffffU)
#define CALDAC_DBG_VALS_BFNO_TOP_WR_MASK (0x00000000U)


///< BFN count when the first valid data word (valid=1) reaches the FIFO.
///< Note: Typical number of clocks from BFN activation of CMEM/SWG's to
///< FIFO input valid is 17.
#define CALDAC_DBG_VALS_BFNO_TOP_BFN_CNT_BF_OFF ( 0)
#define CALDAC_DBG_VALS_BFNO_TOP_BFN_CNT_BF_WID (32)
#define CALDAC_DBG_VALS_BFNO_TOP_BFN_CNT_BF_MSK (0xFFFFFFFF)
#define CALDAC_DBG_VALS_BFNO_TOP_BFN_CNT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_VALS_BFNE_TOP register description at address offset 0x118
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_VALS_BFNE_TOP
  * CALDAC Debug Valid BFN Count register.
  */

typedef union {
  struct {
    uint32_t BFN_CNT : 32;
    ///< BFN count when the first valid data word (valid=1) reaches the FIFO.
    ///< Note: Typical number of clocks from BFN activation of CMEM/SWG's to
    ///< FIFO input valid is 17.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_vals_bfne_top_reg_t;

#define CALDAC_DBG_VALS_BFNE_TOP_DEFAULT (0x00000000U)
#define CALDAC_DBG_VALS_BFNE_TOP_RD_MASK (0xffffffffU)
#define CALDAC_DBG_VALS_BFNE_TOP_WR_MASK (0x00000000U)


///< BFN count when the first valid data word (valid=1) reaches the FIFO.
///< Note: Typical number of clocks from BFN activation of CMEM/SWG's to
///< FIFO input valid is 17.
#define CALDAC_DBG_VALS_BFNE_TOP_BFN_CNT_BF_OFF ( 0)
#define CALDAC_DBG_VALS_BFNE_TOP_BFN_CNT_BF_WID (32)
#define CALDAC_DBG_VALS_BFNE_TOP_BFN_CNT_BF_MSK (0xFFFFFFFF)
#define CALDAC_DBG_VALS_BFNE_TOP_BFN_CNT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_VALS_BFNO_BOT register description at address offset 0x11c
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_VALS_BFNO_BOT
  * CALDAC Debug Valid BFN Count register.
  */

typedef union {
  struct {
    uint32_t BFN_CNT : 32;
    ///< BFN count when the first valid data word (valid=1) reaches the FIFO.
    ///< Note: Typical number of clocks from BFN activation of CMEM/SWG's to
    ///< FIFO input valid is 17.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_vals_bfno_bot_reg_t;

#define CALDAC_DBG_VALS_BFNO_BOT_DEFAULT (0x00000000U)
#define CALDAC_DBG_VALS_BFNO_BOT_RD_MASK (0xffffffffU)
#define CALDAC_DBG_VALS_BFNO_BOT_WR_MASK (0x00000000U)


///< BFN count when the first valid data word (valid=1) reaches the FIFO.
///< Note: Typical number of clocks from BFN activation of CMEM/SWG's to
///< FIFO input valid is 17.
#define CALDAC_DBG_VALS_BFNO_BOT_BFN_CNT_BF_OFF ( 0)
#define CALDAC_DBG_VALS_BFNO_BOT_BFN_CNT_BF_WID (32)
#define CALDAC_DBG_VALS_BFNO_BOT_BFN_CNT_BF_MSK (0xFFFFFFFF)
#define CALDAC_DBG_VALS_BFNO_BOT_BFN_CNT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_DEBUG_VALS_BFNE_BOT register description at address offset 0x120
  *
  * Register default value:        0x00000000
  * Register full path in IP: caldac_map/CALDAC_MAP/DEBUG_VALS_BFNE_BOT
  * CALDAC Debug Valid BFN Count register.
  */

typedef union {
  struct {
    uint32_t BFN_CNT : 32;
    ///< BFN count when the first valid data word (valid=1) reaches the FIFO.
    ///< Note: Typical number of clocks from BFN activation of CMEM/SWG's to
    ///< FIFO input valid is 17.
    ///< AccessType="RO" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_dbg_vals_bfne_bot_reg_t;

#define CALDAC_DBG_VALS_BFNE_BOT_DEFAULT (0x00000000U)
#define CALDAC_DBG_VALS_BFNE_BOT_RD_MASK (0xffffffffU)
#define CALDAC_DBG_VALS_BFNE_BOT_WR_MASK (0x00000000U)


///< BFN count when the first valid data word (valid=1) reaches the FIFO.
///< Note: Typical number of clocks from BFN activation of CMEM/SWG's to
///< FIFO input valid is 17.
#define CALDAC_DBG_VALS_BFNE_BOT_BFN_CNT_BF_OFF ( 0)
#define CALDAC_DBG_VALS_BFNE_BOT_BFN_CNT_BF_WID (32)
#define CALDAC_DBG_VALS_BFNE_BOT_BFN_CNT_BF_MSK (0xFFFFFFFF)
#define CALDAC_DBG_VALS_BFNE_BOT_BFN_CNT_BF_DEF (0x00000000)


/** @brief CALDAC_MAP_CALDAC_MAP_APB_BRIDGE_STATUS register description at address offset 0x130
  *
  * Register default value:        0x00010000
  * Register full path in IP: caldac_map/CALDAC_MAP/APB_BRIDGE_STATUS
  * APB Bridge Status Register
  */

typedef union {
  struct {
    uint32_t TIMEOUT_VALUE : 20;
    ///< Number of core clocks to wait before timing out an APB request
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x10000"
    uint32_t REVISION : 8;
    ///< Module Revision Number
    ///< AccessType="RO" BitOffset="20" ResetValue="0x0"
    uint32_t SW_LOCK_CTRL : 1;
    ///< Block software writes to timeout_value if set
    ///< AccessType="RW/1S/V/L" BitOffset="28" ResetValue="0x0"
    uint32_t UNSOL_ACK : 1;
    ///< An unsolicited acknowledge was received
    ///< AccessType="RW/1C/V" BitOffset="29" ResetValue="0x0"
    uint32_t ACK_ERROR : 1;
    ///< Acknowledgement had error bit set
    ///< AccessType="RW/1C/V" BitOffset="30" ResetValue="0x0"
    uint32_t TIMEOUT : 1;
    ///< An APB request has timed out
    ///< AccessType="RW/1C/V" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} caldac_apb_brdg_stat_reg_t;

#define CALDAC_APB_BRDG_STAT_DEFAULT (0x00010000U)
#define CALDAC_APB_BRDG_STAT_RD_MASK (0xffffffffU)
#define CALDAC_APB_BRDG_STAT_WR_MASK (0xf00fffffU)


///< Number of core clocks to wait before timing out an APB request
#define CALDAC_APB_BRDG_STAT_TIMEOUT_VAL_BF_OFF ( 0)
#define CALDAC_APB_BRDG_STAT_TIMEOUT_VAL_BF_WID (20)
#define CALDAC_APB_BRDG_STAT_TIMEOUT_VAL_BF_MSK (0x000FFFFF)
#define CALDAC_APB_BRDG_STAT_TIMEOUT_VAL_BF_DEF (0x00010000)

///< Module Revision Number
#define CALDAC_APB_BRDG_STAT_REVISION_BF_OFF (20)
#define CALDAC_APB_BRDG_STAT_REVISION_BF_WID ( 8)
#define CALDAC_APB_BRDG_STAT_REVISION_BF_MSK (0x0FF00000)
#define CALDAC_APB_BRDG_STAT_REVISION_BF_DEF (0x00000000)

///< Block software writes to timeout_value if set
#define CALDAC_APB_BRDG_STAT_SW_LOCK_CTRL_BF_OFF (28)
#define CALDAC_APB_BRDG_STAT_SW_LOCK_CTRL_BF_WID ( 1)
#define CALDAC_APB_BRDG_STAT_SW_LOCK_CTRL_BF_MSK (0x10000000)
#define CALDAC_APB_BRDG_STAT_SW_LOCK_CTRL_BF_DEF (0x00000000)

///< An unsolicited acknowledge was received
#define CALDAC_APB_BRDG_STAT_UNSOL_ACK_BF_OFF (29)
#define CALDAC_APB_BRDG_STAT_UNSOL_ACK_BF_WID ( 1)
#define CALDAC_APB_BRDG_STAT_UNSOL_ACK_BF_MSK (0x20000000)
#define CALDAC_APB_BRDG_STAT_UNSOL_ACK_BF_DEF (0x00000000)

///< Acknowledgement had error bit set
#define CALDAC_APB_BRDG_STAT_ACK_ERR_BF_OFF (30)
#define CALDAC_APB_BRDG_STAT_ACK_ERR_BF_WID ( 1)
#define CALDAC_APB_BRDG_STAT_ACK_ERR_BF_MSK (0x40000000)
#define CALDAC_APB_BRDG_STAT_ACK_ERR_BF_DEF (0x00000000)

///< An APB request has timed out
#define CALDAC_APB_BRDG_STAT_TIMEOUT_BF_OFF (31)
#define CALDAC_APB_BRDG_STAT_TIMEOUT_BF_WID ( 1)
#define CALDAC_APB_BRDG_STAT_TIMEOUT_BF_MSK (0x80000000)
#define CALDAC_APB_BRDG_STAT_TIMEOUT_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define CALDAC_SCRATCH_REG(_BASE) ((caldac_scratch_reg_t*) CALDAC_SCRATCH_ADR(_BASE))
#define CALDAC_FIFOE_WM_TOP_REG(_BASE) ((caldac_fifoe_wm_top_reg_t*) CALDAC_FIFOE_WM_TOP_ADR(_BASE))
#define CALDAC_FIFOO_WM_TOP_REG(_BASE) ((caldac_fifoo_wm_top_reg_t*) CALDAC_FIFOO_WM_TOP_ADR(_BASE))
#define CALDAC_FIFOE_CTL_TOP_REG(_BASE) ((caldac_fifoe_ctl_top_reg_t*) CALDAC_FIFOE_CTL_TOP_ADR(_BASE))
#define CALDAC_FIFOO_CTL_TOP_REG(_BASE) ((caldac_fifoo_ctl_top_reg_t*) CALDAC_FIFOO_CTL_TOP_ADR(_BASE))
#define CALDAC_FIFOE_STAT_TOP_REG(_BASE) ((caldac_fifoe_stat_top_reg_t*) CALDAC_FIFOE_STAT_TOP_ADR(_BASE))
#define CALDAC_FIFOO_STAT_TOP_REG(_BASE) ((caldac_fifoo_stat_top_reg_t*) CALDAC_FIFOO_STAT_TOP_ADR(_BASE))
#define CALDAC_FIFOE_WM_BOT_REG(_BASE) ((caldac_fifoe_wm_bot_reg_t*) CALDAC_FIFOE_WM_BOT_ADR(_BASE))
#define CALDAC_FIFOO_WM_BOT_REG(_BASE) ((caldac_fifoo_wm_bot_reg_t*) CALDAC_FIFOO_WM_BOT_ADR(_BASE))
#define CALDAC_FIFOE_CTL_BOT_REG(_BASE) ((caldac_fifoe_ctl_bot_reg_t*) CALDAC_FIFOE_CTL_BOT_ADR(_BASE))
#define CALDAC_FIFOO_CTL_BOT_REG(_BASE) ((caldac_fifoo_ctl_bot_reg_t*) CALDAC_FIFOO_CTL_BOT_ADR(_BASE))
#define CALDAC_FIFOE_STAT_BOT_REG(_BASE) ((caldac_fifoe_stat_bot_reg_t*) CALDAC_FIFOE_STAT_BOT_ADR(_BASE))
#define CALDAC_FIFOO_STAT_BOT_REG(_BASE) ((caldac_fifoo_stat_bot_reg_t*) CALDAC_FIFOO_STAT_BOT_ADR(_BASE))
#define CALDAC_GAIN0_EVEN_REG(_BASE) ((caldac_gain0_even_reg_t*) CALDAC_GAIN0_EVEN_ADR(_BASE))
#define CALDAC_GAIN1_EVEN_REG(_BASE) ((caldac_gain1_even_reg_t*) CALDAC_GAIN1_EVEN_ADR(_BASE))
#define CALDAC_GAIN0_ODD_REG(_BASE) ((caldac_gain0_odd_reg_t*) CALDAC_GAIN0_ODD_ADR(_BASE))
#define CALDAC_GAIN1_ODD_REG(_BASE) ((caldac_gain1_odd_reg_t*) CALDAC_GAIN1_ODD_ADR(_BASE))
#define CALDAC_CTRL_SWG_DITHER_REG(_BASE) ((caldac_ctrl_swg_dither_reg_t*) CALDAC_CTRL_SWG_DITHER_ADR(_BASE))
#define CALDAC_CTRL_SWG_SIGN_REG(_BASE) ((caldac_ctrl_swg_sign_reg_t*) CALDAC_CTRL_SWG_SIGN_ADR(_BASE))
#define CALDAC_MAX_ABS_REG(_BASE) ((caldac_max_abs_reg_t*) CALDAC_MAX_ABS_ADR(_BASE))
#define CALDAC_SMC_RATE_REG(_BASE) ((caldac_smc_rate_reg_t*) CALDAC_SMC_RATE_ADR(_BASE))
#define CALDAC_FIFO_RST_REG(_BASE) ((caldac_fifo_rst_reg_t*) CALDAC_FIFO_RST_ADR(_BASE))
#define CALDAC_INT_STAT_REG(_BASE) ((caldac_int_stat_reg_t*) CALDAC_INT_STAT_ADR(_BASE))
#define CALDAC_INT_HI_EN_REG(_BASE) ((caldac_int_hi_en_reg_t*) CALDAC_INT_HI_EN_ADR(_BASE))
#define CALDAC_INT_LO_EN_REG(_BASE) ((caldac_int_lo_en_reg_t*) CALDAC_INT_LO_EN_ADR(_BASE))
#define CALDAC_INT_CLR_REG(_BASE) ((caldac_int_clr_reg_t*) CALDAC_INT_CLR_ADR(_BASE))
#define CALDAC_INT_FORCE_REG(_BASE) ((caldac_int_force_reg_t*) CALDAC_INT_FORCE_ADR(_BASE))
#define CALDAC_DBG_SNAP_REG(_BASE) ((caldac_dbg_snap_reg_t*) CALDAC_DBG_SNAP_ADR(_BASE))
#define CALDAC_DBG_SNAP_PCNT_TOP_REG(_BASE) ((caldac_dbg_snap_pcnt_top_reg_t*) CALDAC_DBG_SNAP_PCNT_TOP_ADR(_BASE))
#define CALDAC_DBG_SNAP_CNT_TOP_REG(_BASE) ((caldac_dbg_snap_cnt_top_reg_t*) CALDAC_DBG_SNAP_CNT_TOP_ADR(_BASE))
#define CALDAC_DBG_SNAPO_TOP0_REG(_BASE) ((caldac_dbg_snapo_top_reg_t*) CALDAC_DBG_SNAPO_TOP0_ADR(_BASE))
#define CALDAC_DBG_SNAPO_TOP1_REG(_BASE) ((caldac_dbg_snapo_top_reg_t*) CALDAC_DBG_SNAPO_TOP1_ADR(_BASE))
#define CALDAC_DBG_SNAPO_TOP2_REG(_BASE) ((caldac_dbg_snapo_top_reg_t*) CALDAC_DBG_SNAPO_TOP2_ADR(_BASE))
#define CALDAC_DBG_SNAPO_TOP3_REG(_BASE) ((caldac_dbg_snapo_top_reg_t*) CALDAC_DBG_SNAPO_TOP3_ADR(_BASE))
#define CALDAC_DBG_SNAPO_TOP4_REG(_BASE) ((caldac_dbg_snapo_top_reg_t*) CALDAC_DBG_SNAPO_TOP4_ADR(_BASE))
#define CALDAC_DBG_SNAPO_TOP5_REG(_BASE) ((caldac_dbg_snapo_top_reg_t*) CALDAC_DBG_SNAPO_TOP5_ADR(_BASE))
#define CALDAC_DBG_SNAPO_TOP6_REG(_BASE) ((caldac_dbg_snapo_top_reg_t*) CALDAC_DBG_SNAPO_TOP6_ADR(_BASE))
#define CALDAC_DBG_SNAPO_TOP7_REG(_BASE) ((caldac_dbg_snapo_top_reg_t*) CALDAC_DBG_SNAPO_TOP7_ADR(_BASE))
#define CALDAC_DBG_SNAPE_TOP0_REG(_BASE) ((caldac_dbg_snape_top_reg_t*) CALDAC_DBG_SNAPE_TOP0_ADR(_BASE))
#define CALDAC_DBG_SNAPE_TOP1_REG(_BASE) ((caldac_dbg_snape_top_reg_t*) CALDAC_DBG_SNAPE_TOP1_ADR(_BASE))
#define CALDAC_DBG_SNAPE_TOP2_REG(_BASE) ((caldac_dbg_snape_top_reg_t*) CALDAC_DBG_SNAPE_TOP2_ADR(_BASE))
#define CALDAC_DBG_SNAPE_TOP3_REG(_BASE) ((caldac_dbg_snape_top_reg_t*) CALDAC_DBG_SNAPE_TOP3_ADR(_BASE))
#define CALDAC_DBG_SNAPE_TOP4_REG(_BASE) ((caldac_dbg_snape_top_reg_t*) CALDAC_DBG_SNAPE_TOP4_ADR(_BASE))
#define CALDAC_DBG_SNAPE_TOP5_REG(_BASE) ((caldac_dbg_snape_top_reg_t*) CALDAC_DBG_SNAPE_TOP5_ADR(_BASE))
#define CALDAC_DBG_SNAPE_TOP6_REG(_BASE) ((caldac_dbg_snape_top_reg_t*) CALDAC_DBG_SNAPE_TOP6_ADR(_BASE))
#define CALDAC_DBG_SNAPE_TOP7_REG(_BASE) ((caldac_dbg_snape_top_reg_t*) CALDAC_DBG_SNAPE_TOP7_ADR(_BASE))
#define CALDAC_DBG_SNAP_PCNT_BOT_REG(_BASE) ((caldac_dbg_snap_pcnt_bot_reg_t*) CALDAC_DBG_SNAP_PCNT_BOT_ADR(_BASE))
#define CALDAC_DBG_SNAP_CNT_BOT_REG(_BASE) ((caldac_dbg_snap_cnt_bot_reg_t*) CALDAC_DBG_SNAP_CNT_BOT_ADR(_BASE))
#define CALDAC_DBG_SNAPO_BOT0_REG(_BASE) ((caldac_dbg_snapo_bot_reg_t*) CALDAC_DBG_SNAPO_BOT0_ADR(_BASE))
#define CALDAC_DBG_SNAPO_BOT1_REG(_BASE) ((caldac_dbg_snapo_bot_reg_t*) CALDAC_DBG_SNAPO_BOT1_ADR(_BASE))
#define CALDAC_DBG_SNAPO_BOT2_REG(_BASE) ((caldac_dbg_snapo_bot_reg_t*) CALDAC_DBG_SNAPO_BOT2_ADR(_BASE))
#define CALDAC_DBG_SNAPO_BOT3_REG(_BASE) ((caldac_dbg_snapo_bot_reg_t*) CALDAC_DBG_SNAPO_BOT3_ADR(_BASE))
#define CALDAC_DBG_SNAPO_BOT4_REG(_BASE) ((caldac_dbg_snapo_bot_reg_t*) CALDAC_DBG_SNAPO_BOT4_ADR(_BASE))
#define CALDAC_DBG_SNAPO_BOT5_REG(_BASE) ((caldac_dbg_snapo_bot_reg_t*) CALDAC_DBG_SNAPO_BOT5_ADR(_BASE))
#define CALDAC_DBG_SNAPO_BOT6_REG(_BASE) ((caldac_dbg_snapo_bot_reg_t*) CALDAC_DBG_SNAPO_BOT6_ADR(_BASE))
#define CALDAC_DBG_SNAPO_BOT7_REG(_BASE) ((caldac_dbg_snapo_bot_reg_t*) CALDAC_DBG_SNAPO_BOT7_ADR(_BASE))
#define CALDAC_DBG_SNAPE_BOT0_REG(_BASE) ((caldac_dbg_snape_bot_reg_t*) CALDAC_DBG_SNAPE_BOT0_ADR(_BASE))
#define CALDAC_DBG_SNAPE_BOT1_REG(_BASE) ((caldac_dbg_snape_bot_reg_t*) CALDAC_DBG_SNAPE_BOT1_ADR(_BASE))
#define CALDAC_DBG_SNAPE_BOT2_REG(_BASE) ((caldac_dbg_snape_bot_reg_t*) CALDAC_DBG_SNAPE_BOT2_ADR(_BASE))
#define CALDAC_DBG_SNAPE_BOT3_REG(_BASE) ((caldac_dbg_snape_bot_reg_t*) CALDAC_DBG_SNAPE_BOT3_ADR(_BASE))
#define CALDAC_DBG_SNAPE_BOT4_REG(_BASE) ((caldac_dbg_snape_bot_reg_t*) CALDAC_DBG_SNAPE_BOT4_ADR(_BASE))
#define CALDAC_DBG_SNAPE_BOT5_REG(_BASE) ((caldac_dbg_snape_bot_reg_t*) CALDAC_DBG_SNAPE_BOT5_ADR(_BASE))
#define CALDAC_DBG_SNAPE_BOT6_REG(_BASE) ((caldac_dbg_snape_bot_reg_t*) CALDAC_DBG_SNAPE_BOT6_ADR(_BASE))
#define CALDAC_DBG_SNAPE_BOT7_REG(_BASE) ((caldac_dbg_snape_bot_reg_t*) CALDAC_DBG_SNAPE_BOT7_ADR(_BASE))
#define CALDAC_DBG_FFS_BFN_TOP_REG(_BASE) ((caldac_dbg_ffs_bfn_top_reg_t*) CALDAC_DBG_FFS_BFN_TOP_ADR(_BASE))
#define CALDAC_DBG_FFS_BFN_BOT_REG(_BASE) ((caldac_dbg_ffs_bfn_bot_reg_t*) CALDAC_DBG_FFS_BFN_BOT_ADR(_BASE))
#define CALDAC_DBG_FFS_LVL_REG(_BASE) ((caldac_dbg_ffs_lvl_reg_t*) CALDAC_DBG_FFS_LVL_ADR(_BASE))
#define CALDAC_DBG_VALS_BFNO_TOP_REG(_BASE) ((caldac_dbg_vals_bfno_top_reg_t*) CALDAC_DBG_VALS_BFNO_TOP_ADR(_BASE))
#define CALDAC_DBG_VALS_BFNE_TOP_REG(_BASE) ((caldac_dbg_vals_bfne_top_reg_t*) CALDAC_DBG_VALS_BFNE_TOP_ADR(_BASE))
#define CALDAC_DBG_VALS_BFNO_BOT_REG(_BASE) ((caldac_dbg_vals_bfno_bot_reg_t*) CALDAC_DBG_VALS_BFNO_BOT_ADR(_BASE))
#define CALDAC_DBG_VALS_BFNE_BOT_REG(_BASE) ((caldac_dbg_vals_bfne_bot_reg_t*) CALDAC_DBG_VALS_BFNE_BOT_ADR(_BASE))
#define CALDAC_APB_BRDG_STAT_REG(_BASE) ((caldac_apb_brdg_stat_reg_t*) CALDAC_APB_BRDG_STAT_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    caldac_scratch_reg_t SCRATCH;  /*< Address offset = 0x0 */
    caldac_fifoe_wm_top_reg_t FIFOE_WM_TOP; /*< Address offset = 0x4 */
    caldac_fifoo_wm_top_reg_t FIFOO_WM_TOP; /*< Address offset = 0x8 */
    caldac_fifoe_ctl_top_reg_t FIFOE_CTL_TOP; /*< Address offset = 0xc */
    caldac_fifoo_ctl_top_reg_t FIFOO_CTL_TOP; /*< Address offset = 0x10 */
    caldac_fifoe_stat_top_reg_t FIFOE_STAT_TOP; /*< Address offset = 0x14 */
    caldac_fifoo_stat_top_reg_t FIFOO_STAT_TOP; /*< Address offset = 0x18 */
    caldac_fifoe_wm_bot_reg_t FIFOE_WM_BOT; /*< Address offset = 0x1c */
    caldac_fifoo_wm_bot_reg_t FIFOO_WM_BOT; /*< Address offset = 0x20 */
    caldac_fifoe_ctl_bot_reg_t FIFOE_CTL_BOT; /*< Address offset = 0x24 */
    caldac_fifoo_ctl_bot_reg_t FIFOO_CTL_BOT; /*< Address offset = 0x28 */
    caldac_fifoe_stat_bot_reg_t FIFOE_STAT_BOT; /*< Address offset = 0x2c */
    caldac_fifoo_stat_bot_reg_t FIFOO_STAT_BOT; /*< Address offset = 0x30 */
    caldac_gain0_even_reg_t GAIN0_EVEN; /*< Address offset = 0x34 */
    caldac_gain1_even_reg_t GAIN1_EVEN; /*< Address offset = 0x38 */
    caldac_gain0_odd_reg_t GAIN0_ODD; /*< Address offset = 0x3c */
    caldac_gain1_odd_reg_t GAIN1_ODD; /*< Address offset = 0x40 */
    caldac_ctrl_swg_dither_reg_t CTRL_SWG_DITHER; /*< Address offset = 0x44 */
    caldac_ctrl_swg_sign_reg_t CTRL_SWG_SIGN; /*< Address offset = 0x48 */
    caldac_max_abs_reg_t MAX_ABS;  /*< Address offset = 0x4c */
    caldac_smc_rate_reg_t SMC_RATE; /*< Address offset = 0x50 */
    caldac_fifo_rst_reg_t FIFO_RST; /*< Address offset = 0x54 */
    const uint8_t        reservedArea0 [8];   /*< Address offset = 0x58 */
    caldac_int_stat_reg_t INT_STAT; /*< Address offset = 0x60 */
    caldac_int_hi_en_reg_t INT_HI_EN; /*< Address offset = 0x64 */
    caldac_int_lo_en_reg_t INT_LO_EN; /*< Address offset = 0x68 */
    caldac_int_clr_reg_t INT_CLR; /*< Address offset = 0x6c */
    caldac_int_force_reg_t INT_FORCE; /*< Address offset = 0x70 */
    caldac_dbg_snap_reg_t DBG_SNAP; /*< Address offset = 0x74 */
    caldac_dbg_snap_pcnt_top_reg_t DBG_SNAP_PCNT_TOP; /*< Address offset = 0x78 */
    caldac_dbg_snap_cnt_top_reg_t DBG_SNAP_CNT_TOP; /*< Address offset = 0x7c */
    caldac_dbg_snapo_top_reg_t DBG_SNAPO_TOP[8]; /*< Address offset = 0x80 */
    caldac_dbg_snape_top_reg_t DBG_SNAPE_TOP[8]; /*< Address offset = 0xa0 */
    caldac_dbg_snap_pcnt_bot_reg_t DBG_SNAP_PCNT_BOT; /*< Address offset = 0xc0 */
    caldac_dbg_snap_cnt_bot_reg_t DBG_SNAP_CNT_BOT; /*< Address offset = 0xc4 */
    caldac_dbg_snapo_bot_reg_t DBG_SNAPO_BOT[8]; /*< Address offset = 0xc8 */
    caldac_dbg_snape_bot_reg_t DBG_SNAPE_BOT[8]; /*< Address offset = 0xe8 */
    caldac_dbg_ffs_bfn_top_reg_t DBG_FFS_BFN_TOP; /*< Address offset = 0x108 */
    caldac_dbg_ffs_bfn_bot_reg_t DBG_FFS_BFN_BOT; /*< Address offset = 0x10c */
    caldac_dbg_ffs_lvl_reg_t DBG_FFS_LVL; /*< Address offset = 0x110 */
    caldac_dbg_vals_bfno_top_reg_t DBG_VALS_BFNO_TOP; /*< Address offset = 0x114 */
    caldac_dbg_vals_bfne_top_reg_t DBG_VALS_BFNE_TOP; /*< Address offset = 0x118 */
    caldac_dbg_vals_bfno_bot_reg_t DBG_VALS_BFNO_BOT; /*< Address offset = 0x11c */
    caldac_dbg_vals_bfne_bot_reg_t DBG_VALS_BFNE_BOT; /*< Address offset = 0x120 */
    const uint8_t        reservedArea1 [12];  /*< Address offset = 0x124 */
    caldac_apb_brdg_stat_reg_t APB_BRDG_STAT; /*< Address offset = 0x130 */
} caldac_t;     // size: 0x00b0

// AddressSpace struct pointer
//
#define FB_ANT0_CALDAC   ((caldac_t*) FB_ANT0_CALDAC_BASE)
#define FB_ANT1_CALDAC   ((caldac_t*) FB_ANT1_CALDAC_BASE)

// ******************************************* /Address Space

#endif      // _CALDAC_H_

