#ifndef _PCS_SERDES_CMN_MSG_H_
#define _PCS_SERDES_CMN_MSG_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_JESD0_PHY_PCS_SERDES_CMN_BASE  ( 0x06100000 )
#define DLNK_JESD1_PHY_PCS_SERDES_CMN_BASE  ( 0x06900000 )
#define DLNK_JESD2_PHY_PCS_SERDES_CMN_BASE  ( 0x07100000 )
#define DLNK_JESD3_PHY_PCS_SERDES_CMN_BASE  ( 0x07900000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define PCS_SERDES_CMN_MSG_REVISION_OFFSET ( 0x00000000U )
#define PCS_SERDES_CMN_MSG_JTAG_VER_OFFSET ( 0x00000004U )
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_OFFSET ( 0x00000008U )
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_OFFSET ( 0x0000000cU )
#define PCS_SERDES_CMN_MSG_RW_SPARE_0_OFFSET ( 0x000003e4U )
#define PCS_SERDES_CMN_MSG_RW_SPARE_1_OFFSET ( 0x000003e8U )
#define PCS_SERDES_CMN_MSG_RW_SPARE_2_OFFSET ( 0x000003ecU )
#define PCS_SERDES_CMN_MSG_RW_SPARE_3_OFFSET ( 0x000003f0U )
#define PCS_SERDES_CMN_MSG_RO_SPARE_0_OFFSET ( 0x000003f4U )
#define PCS_SERDES_CMN_MSG_RO_SPARE_1_OFFSET ( 0x000003f8U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define PCS_SERDES_CMN_MSG_REVISION_ADR(_BASE) (( ( _BASE ) + ( PCS_SERDES_CMN_MSG_REVISION_OFFSET ) ))
#define PCS_SERDES_CMN_MSG_JTAG_VER_ADR(_BASE) (( ( _BASE ) + ( PCS_SERDES_CMN_MSG_JTAG_VER_OFFSET ) ))
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_ADR(_BASE) (( ( _BASE ) + ( PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_OFFSET ) ))
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_ADR(_BASE) (( ( _BASE ) + ( PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_OFFSET ) ))
#define PCS_SERDES_CMN_MSG_RW_SPARE_0_ADR(_BASE) (( ( _BASE ) + ( PCS_SERDES_CMN_MSG_RW_SPARE_0_OFFSET ) ))
#define PCS_SERDES_CMN_MSG_RW_SPARE_1_ADR(_BASE) (( ( _BASE ) + ( PCS_SERDES_CMN_MSG_RW_SPARE_1_OFFSET ) ))
#define PCS_SERDES_CMN_MSG_RW_SPARE_2_ADR(_BASE) (( ( _BASE ) + ( PCS_SERDES_CMN_MSG_RW_SPARE_2_OFFSET ) ))
#define PCS_SERDES_CMN_MSG_RW_SPARE_3_ADR(_BASE) (( ( _BASE ) + ( PCS_SERDES_CMN_MSG_RW_SPARE_3_OFFSET ) ))
#define PCS_SERDES_CMN_MSG_RO_SPARE_0_ADR(_BASE) (( ( _BASE ) + ( PCS_SERDES_CMN_MSG_RO_SPARE_0_OFFSET ) ))
#define PCS_SERDES_CMN_MSG_RO_SPARE_1_ADR(_BASE) (( ( _BASE ) + ( PCS_SERDES_CMN_MSG_RO_SPARE_1_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief PCS_SERDES_CMN_REGS_MSG_PCS_SERDES_CMN_REGS_PCS_SERDES_REVISION register description at address offset 0x0
  *
  * Register default value:        0x23350500
  * Register full path in IP: PCS_SERDES_CMN_regs_MSG/PCS_SERDES_CMN_regs/pcs_serdes_revision
  * PCS Revision
  */

typedef union {
  struct {
    uint32_t PCS_REVISION : 32;
    ///< PCS hardware revision
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x23350500"
  } ;
  uint32_t value;
} pcs_serdes_cmn_msg_revision_reg_t;

#define PCS_SERDES_CMN_MSG_REVISION_DEFAULT (0x23350500U)
#define PCS_SERDES_CMN_MSG_REVISION_RD_MASK (0xffffffffU)
#define PCS_SERDES_CMN_MSG_REVISION_WR_MASK (0x00000000U)


///< PCS hardware revision
#define PCS_SERDES_CMN_MSG_REVISION_BF_OFF ( 0)
#define PCS_SERDES_CMN_MSG_REVISION_BF_WID (32)
#define PCS_SERDES_CMN_MSG_REVISION_BF_MSK (0xFFFFFFFF)
#define PCS_SERDES_CMN_MSG_REVISION_BF_DEF (0x23350500)


/** @brief PCS_SERDES_CMN_REGS_MSG_PCS_SERDES_CMN_REGS_PCS_SERDES_JTAG_VERSION register description at address offset 0x4
  *
  * Register default value:        0x11490001
  * Register full path in IP: PCS_SERDES_CMN_regs_MSG/PCS_SERDES_CMN_regs/pcs_serdes_jtag_version
  * PCS Jtag version
  */

typedef union {
  struct {
    uint32_t PCS_JTAG_VERSION : 32;
    ///< PCS Jtag version
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x11490001"
  } ;
  uint32_t value;
} pcs_serdes_cmn_msg_jtag_ver_reg_t;

#define PCS_SERDES_CMN_MSG_JTAG_VER_DEFAULT (0x11490001U)
#define PCS_SERDES_CMN_MSG_JTAG_VER_RD_MASK (0xffffffffU)
#define PCS_SERDES_CMN_MSG_JTAG_VER_WR_MASK (0x00000000U)


///< PCS Jtag version
#define PCS_SERDES_CMN_MSG_JTAG_VER_BF_OFF ( 0)
#define PCS_SERDES_CMN_MSG_JTAG_VER_BF_WID (32)
#define PCS_SERDES_CMN_MSG_JTAG_VER_BF_MSK (0xFFFFFFFF)
#define PCS_SERDES_CMN_MSG_JTAG_VER_BF_DEF (0x11490001)


/** @brief PCS_SERDES_CMN_REGS_MSG_PCS_SERDES_CMN_REGS_PCS_SERDES_SCRATCH_PAD_0 register description at address offset 0x8
  *
  * Register default value:        0x00000000
  * Register full path in IP: PCS_SERDES_CMN_regs_MSG/PCS_SERDES_CMN_regs/pcs_serdes_scratch_pad_0
  * Scratch pad
  */

typedef union {
  struct {
    uint32_t PCS_SCRATCH_PAD_0 : 32;
    ///< Scratch pad 0
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pcs_serdes_cmn_msg_scratch_pad_0_reg_t;

#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_DEFAULT (0x00000000U)
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_RD_MASK (0xffffffffU)
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_WR_MASK (0xffffffffU)


///< Scratch pad 0
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_BF_OFF ( 0)
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_BF_WID (32)
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_BF_MSK (0xFFFFFFFF)
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_BF_DEF (0x00000000)


/** @brief PCS_SERDES_CMN_REGS_MSG_PCS_SERDES_CMN_REGS_PCS_SERDES_SCRATCH_PAD_1 register description at address offset 0xc
  *
  * Register default value:        0x00000000
  * Register full path in IP: PCS_SERDES_CMN_regs_MSG/PCS_SERDES_CMN_regs/pcs_serdes_scratch_pad_1
  * Scratch pad
  */

typedef union {
  struct {
    uint32_t PCS_SCRATCH_PAD_1 : 32;
    ///< Scratch pad 1
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pcs_serdes_cmn_msg_scratch_pad_1_reg_t;

#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_DEFAULT (0x00000000U)
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_RD_MASK (0xffffffffU)
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_WR_MASK (0xffffffffU)


///< Scratch pad 1
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_BF_OFF ( 0)
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_BF_WID (32)
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_BF_MSK (0xFFFFFFFF)
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_BF_DEF (0x00000000)


/** @brief PCS_SERDES_CMN_REGS_MSG_PCS_SERDES_CMN_REGS_PCS_SERDES_CMN_RW_SPARE_0 register description at address offset 0x3e4
  *
  * Register default value:        0x00000000
  * Register full path in IP: PCS_SERDES_CMN_regs_MSG/PCS_SERDES_CMN_regs/pcs_serdes_cmn_rw_spare_0
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t CMN_RW_SPARE_0 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pcs_serdes_cmn_msg_rw_spare_0_reg_t;

#define PCS_SERDES_CMN_MSG_RW_SPARE_0_DEFAULT (0x00000000U)
#define PCS_SERDES_CMN_MSG_RW_SPARE_0_RD_MASK (0xffffffffU)
#define PCS_SERDES_CMN_MSG_RW_SPARE_0_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define PCS_SERDES_CMN_MSG_RW_SPARE_0_BF_OFF ( 0)
#define PCS_SERDES_CMN_MSG_RW_SPARE_0_BF_WID (32)
#define PCS_SERDES_CMN_MSG_RW_SPARE_0_BF_MSK (0xFFFFFFFF)
#define PCS_SERDES_CMN_MSG_RW_SPARE_0_BF_DEF (0x00000000)


/** @brief PCS_SERDES_CMN_REGS_MSG_PCS_SERDES_CMN_REGS_PCS_SERDES_CMN_RW_SPARE_1 register description at address offset 0x3e8
  *
  * Register default value:        0x00000000
  * Register full path in IP: PCS_SERDES_CMN_regs_MSG/PCS_SERDES_CMN_regs/pcs_serdes_cmn_rw_spare_1
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t CMN_RW_SPARE_1 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pcs_serdes_cmn_msg_rw_spare_1_reg_t;

#define PCS_SERDES_CMN_MSG_RW_SPARE_1_DEFAULT (0x00000000U)
#define PCS_SERDES_CMN_MSG_RW_SPARE_1_RD_MASK (0xffffffffU)
#define PCS_SERDES_CMN_MSG_RW_SPARE_1_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define PCS_SERDES_CMN_MSG_RW_SPARE_1_BF_OFF ( 0)
#define PCS_SERDES_CMN_MSG_RW_SPARE_1_BF_WID (32)
#define PCS_SERDES_CMN_MSG_RW_SPARE_1_BF_MSK (0xFFFFFFFF)
#define PCS_SERDES_CMN_MSG_RW_SPARE_1_BF_DEF (0x00000000)


/** @brief PCS_SERDES_CMN_REGS_MSG_PCS_SERDES_CMN_REGS_PCS_SERDES_CMN_RW_SPARE_2 register description at address offset 0x3ec
  *
  * Register default value:        0x00000000
  * Register full path in IP: PCS_SERDES_CMN_regs_MSG/PCS_SERDES_CMN_regs/pcs_serdes_cmn_rw_spare_2
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t CMN_RW_SPARE_2 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pcs_serdes_cmn_msg_rw_spare_2_reg_t;

#define PCS_SERDES_CMN_MSG_RW_SPARE_2_DEFAULT (0x00000000U)
#define PCS_SERDES_CMN_MSG_RW_SPARE_2_RD_MASK (0xffffffffU)
#define PCS_SERDES_CMN_MSG_RW_SPARE_2_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define PCS_SERDES_CMN_MSG_RW_SPARE_2_BF_OFF ( 0)
#define PCS_SERDES_CMN_MSG_RW_SPARE_2_BF_WID (32)
#define PCS_SERDES_CMN_MSG_RW_SPARE_2_BF_MSK (0xFFFFFFFF)
#define PCS_SERDES_CMN_MSG_RW_SPARE_2_BF_DEF (0x00000000)


/** @brief PCS_SERDES_CMN_REGS_MSG_PCS_SERDES_CMN_REGS_PCS_SERDES_CMN_RW_SPARE_3 register description at address offset 0x3f0
  *
  * Register default value:        0x00000000
  * Register full path in IP: PCS_SERDES_CMN_regs_MSG/PCS_SERDES_CMN_regs/pcs_serdes_cmn_rw_spare_3
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t CMN_RW_SPARE_3 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pcs_serdes_cmn_msg_rw_spare_3_reg_t;

#define PCS_SERDES_CMN_MSG_RW_SPARE_3_DEFAULT (0x00000000U)
#define PCS_SERDES_CMN_MSG_RW_SPARE_3_RD_MASK (0xffffffffU)
#define PCS_SERDES_CMN_MSG_RW_SPARE_3_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define PCS_SERDES_CMN_MSG_RW_SPARE_3_BF_OFF ( 0)
#define PCS_SERDES_CMN_MSG_RW_SPARE_3_BF_WID (32)
#define PCS_SERDES_CMN_MSG_RW_SPARE_3_BF_MSK (0xFFFFFFFF)
#define PCS_SERDES_CMN_MSG_RW_SPARE_3_BF_DEF (0x00000000)


/** @brief PCS_SERDES_CMN_REGS_MSG_PCS_SERDES_CMN_REGS_PCS_SERDES_CMN_RO_SPARE_0 register description at address offset 0x3f4
  *
  * Register default value:        0x00000000
  * Register full path in IP: PCS_SERDES_CMN_regs_MSG/PCS_SERDES_CMN_regs/pcs_serdes_cmn_ro_spare_0
  * Spare RO register
  */

typedef union {
  struct {
    uint32_t CMN_RO_SPARE_0 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pcs_serdes_cmn_msg_ro_spare_0_reg_t;

#define PCS_SERDES_CMN_MSG_RO_SPARE_0_DEFAULT (0x00000000U)
#define PCS_SERDES_CMN_MSG_RO_SPARE_0_RD_MASK (0xffffffffU)
#define PCS_SERDES_CMN_MSG_RO_SPARE_0_WR_MASK (0x00000000U)


///< Spare register.  Reseved for future
#define PCS_SERDES_CMN_MSG_RO_SPARE_0_BF_OFF ( 0)
#define PCS_SERDES_CMN_MSG_RO_SPARE_0_BF_WID (32)
#define PCS_SERDES_CMN_MSG_RO_SPARE_0_BF_MSK (0xFFFFFFFF)
#define PCS_SERDES_CMN_MSG_RO_SPARE_0_BF_DEF (0x00000000)


/** @brief PCS_SERDES_CMN_REGS_MSG_PCS_SERDES_CMN_REGS_PCS_SERDES_CMN_RO_SPARE_1 register description at address offset 0x3f8
  *
  * Register default value:        0x00000000
  * Register full path in IP: PCS_SERDES_CMN_regs_MSG/PCS_SERDES_CMN_regs/pcs_serdes_cmn_ro_spare_1
  * Spare RO register
  */

typedef union {
  struct {
    uint32_t CMN_RO_SPARE_1 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pcs_serdes_cmn_msg_ro_spare_1_reg_t;

#define PCS_SERDES_CMN_MSG_RO_SPARE_1_DEFAULT (0x00000000U)
#define PCS_SERDES_CMN_MSG_RO_SPARE_1_RD_MASK (0xffffffffU)
#define PCS_SERDES_CMN_MSG_RO_SPARE_1_WR_MASK (0x00000000U)


///< Spare register.  Reseved for future
#define PCS_SERDES_CMN_MSG_RO_SPARE_1_BF_OFF ( 0)
#define PCS_SERDES_CMN_MSG_RO_SPARE_1_BF_WID (32)
#define PCS_SERDES_CMN_MSG_RO_SPARE_1_BF_MSK (0xFFFFFFFF)
#define PCS_SERDES_CMN_MSG_RO_SPARE_1_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define PCS_SERDES_CMN_MSG_REVISION_REG(_BASE) ((pcs_serdes_cmn_msg_revision_reg_t*) PCS_SERDES_CMN_MSG_REVISION_ADR(_BASE))
#define PCS_SERDES_CMN_MSG_JTAG_VER_REG(_BASE) ((pcs_serdes_cmn_msg_jtag_ver_reg_t*) PCS_SERDES_CMN_MSG_JTAG_VER_ADR(_BASE))
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_REG(_BASE) ((pcs_serdes_cmn_msg_scratch_pad_0_reg_t*) PCS_SERDES_CMN_MSG_SCRATCH_PAD_0_ADR(_BASE))
#define PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_REG(_BASE) ((pcs_serdes_cmn_msg_scratch_pad_1_reg_t*) PCS_SERDES_CMN_MSG_SCRATCH_PAD_1_ADR(_BASE))
#define PCS_SERDES_CMN_MSG_RW_SPARE_0_REG(_BASE) ((pcs_serdes_cmn_msg_rw_spare_0_reg_t*) PCS_SERDES_CMN_MSG_RW_SPARE_0_ADR(_BASE))
#define PCS_SERDES_CMN_MSG_RW_SPARE_1_REG(_BASE) ((pcs_serdes_cmn_msg_rw_spare_1_reg_t*) PCS_SERDES_CMN_MSG_RW_SPARE_1_ADR(_BASE))
#define PCS_SERDES_CMN_MSG_RW_SPARE_2_REG(_BASE) ((pcs_serdes_cmn_msg_rw_spare_2_reg_t*) PCS_SERDES_CMN_MSG_RW_SPARE_2_ADR(_BASE))
#define PCS_SERDES_CMN_MSG_RW_SPARE_3_REG(_BASE) ((pcs_serdes_cmn_msg_rw_spare_3_reg_t*) PCS_SERDES_CMN_MSG_RW_SPARE_3_ADR(_BASE))
#define PCS_SERDES_CMN_MSG_RO_SPARE_0_REG(_BASE) ((pcs_serdes_cmn_msg_ro_spare_0_reg_t*) PCS_SERDES_CMN_MSG_RO_SPARE_0_ADR(_BASE))
#define PCS_SERDES_CMN_MSG_RO_SPARE_1_REG(_BASE) ((pcs_serdes_cmn_msg_ro_spare_1_reg_t*) PCS_SERDES_CMN_MSG_RO_SPARE_1_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    pcs_serdes_cmn_msg_revision_reg_t PCS_SERDES_REVISION; /*< Address offset = 0x0 */
    pcs_serdes_cmn_msg_jtag_ver_reg_t PCS_SERDES_JTAG_VER; /*< Address offset = 0x4 */
    pcs_serdes_cmn_msg_scratch_pad_0_reg_t PCS_SERDES_SCRATCH_PAD_0; /*< Address offset = 0x8 */
    pcs_serdes_cmn_msg_scratch_pad_1_reg_t PCS_SERDES_SCRATCH_PAD_1; /*< Address offset = 0xc */
    const uint8_t        reservedArea0 [980]; /*< Address offset = 0x10 */
    pcs_serdes_cmn_msg_rw_spare_0_reg_t PCS_SERDES_CMN_RW_SPARE_0; /*< Address offset = 0x3e4 */
    pcs_serdes_cmn_msg_rw_spare_1_reg_t PCS_SERDES_CMN_RW_SPARE_1; /*< Address offset = 0x3e8 */
    pcs_serdes_cmn_msg_rw_spare_2_reg_t PCS_SERDES_CMN_RW_SPARE_2; /*< Address offset = 0x3ec */
    pcs_serdes_cmn_msg_rw_spare_3_reg_t PCS_SERDES_CMN_RW_SPARE_3; /*< Address offset = 0x3f0 */
    pcs_serdes_cmn_msg_ro_spare_0_reg_t PCS_SERDES_CMN_RO_SPARE_0; /*< Address offset = 0x3f4 */
    pcs_serdes_cmn_msg_ro_spare_1_reg_t PCS_SERDES_CMN_RO_SPARE_1; /*< Address offset = 0x3f8 */
} pcs_serdes_cmn_msg_t;     // size: 0x0028

// AddressSpace struct pointer
//
#define DLNK_JESD0_PHY_PCS_SERDES_CMN  ((pcs_serdes_cmn_msg_t*) DLNK_JESD0_PHY_PCS_SERDES_CMN_BASE)
#define DLNK_JESD1_PHY_PCS_SERDES_CMN  ((pcs_serdes_cmn_msg_t*) DLNK_JESD1_PHY_PCS_SERDES_CMN_BASE)
#define DLNK_JESD2_PHY_PCS_SERDES_CMN  ((pcs_serdes_cmn_msg_t*) DLNK_JESD2_PHY_PCS_SERDES_CMN_BASE)
#define DLNK_JESD3_PHY_PCS_SERDES_CMN  ((pcs_serdes_cmn_msg_t*) DLNK_JESD3_PHY_PCS_SERDES_CMN_BASE)

// ******************************************* /Address Space

#endif      // _PCS_SERDES_CMN_MSG_H_

