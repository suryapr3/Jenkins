#ifndef _DLNK_HUB_APB_H_
#define _DLNK_HUB_APB_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_HUB_BASE         ( 0x01b01000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define DLNK_HUB_APB_HUB_SCRATCH_OFFSET ( 0x00000000U )
#define DLNK_HUB_APB_HUB_VER_OFFSET ( 0x00000004U )
#define DLNK_HUB_APB_HUB_OFFSET ( 0x00000008U )
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_OFFSET ( 0x0000000cU )
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_OFFSET ( 0x00000010U )
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_OFFSET ( 0x00000014U )
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_OFFSET ( 0x00000018U )
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_OFFSET ( 0x00000020U )
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_OFFSET ( 0x00000024U )
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_OFFSET ( 0x00000028U )
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_OFFSET ( 0x0000002cU )
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_OFFSET ( 0x00000030U )
#define DLNK_HUB_APB_LDO_BGR_SW_RST_OFFSET ( 0x00000034U )
#define DLNK_HUB_APB_PCIE_MEM_DIS_OFFSET ( 0x0000003cU )
#define DLNK_HUB_APB_PCIE_CLK_EN_OFFSET ( 0x00000040U )
#define DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_OFFSET ( 0x00000044U )
#define DLNK_HUB_APB_PCIE_SW_RST_N_OFFSET ( 0x00000048U )
#define DLNK_HUB_APB_JESD_MAP0_JESD_MEM_DIS_OFFSET ( 0x0000004cU )
#define DLNK_HUB_APB_JESD_MAP0_JESD_CLK_EN_OFFSET ( 0x00000050U )
#define DLNK_HUB_APB_JESD_MAP0_JESD_GLITCH_SUPPRESS_N_OFFSET ( 0x00000054U )
#define DLNK_HUB_APB_JESD_MAP0_JESD_SW_RST_N_OFFSET ( 0x00000058U )
#define DLNK_HUB_APB_JESD_MAP1_JESD_MEM_DIS_OFFSET ( 0x0000005cU )
#define DLNK_HUB_APB_JESD_MAP1_JESD_CLK_EN_OFFSET ( 0x00000060U )
#define DLNK_HUB_APB_JESD_MAP1_JESD_GLITCH_SUPPRESS_N_OFFSET ( 0x00000064U )
#define DLNK_HUB_APB_JESD_MAP1_JESD_SW_RST_N_OFFSET ( 0x00000068U )
#define DLNK_HUB_APB_JESD_MAP2_JESD_MEM_DIS_OFFSET ( 0x0000006cU )
#define DLNK_HUB_APB_JESD_MAP2_JESD_CLK_EN_OFFSET ( 0x00000070U )
#define DLNK_HUB_APB_JESD_MAP2_JESD_GLITCH_SUPPRESS_N_OFFSET ( 0x00000074U )
#define DLNK_HUB_APB_JESD_MAP2_JESD_SW_RST_N_OFFSET ( 0x00000078U )
#define DLNK_HUB_APB_JESD_MAP3_JESD_MEM_DIS_OFFSET ( 0x0000007cU )
#define DLNK_HUB_APB_JESD_MAP3_JESD_CLK_EN_OFFSET ( 0x00000080U )
#define DLNK_HUB_APB_JESD_MAP3_JESD_GLITCH_SUPPRESS_N_OFFSET ( 0x00000084U )
#define DLNK_HUB_APB_JESD_MAP3_JESD_SW_RST_N_OFFSET ( 0x00000088U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define DLNK_HUB_APB_HUB_SCRATCH_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_HUB_SCRATCH_OFFSET ) ))
#define DLNK_HUB_APB_HUB_VER_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_HUB_VER_OFFSET ) ))
#define DLNK_HUB_APB_HUB_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_HUB_OFFSET ) ))
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_OFFSET ) ))
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_OFFSET ) ))
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_OFFSET ) ))
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_OFFSET ) ))
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_OFFSET ) ))
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_OFFSET ) ))
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_OFFSET ) ))
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_OFFSET ) ))
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_OFFSET ) ))
#define DLNK_HUB_APB_LDO_BGR_SW_RST_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_LDO_BGR_SW_RST_OFFSET ) ))
#define DLNK_HUB_APB_PCIE_MEM_DIS_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_PCIE_MEM_DIS_OFFSET ) ))
#define DLNK_HUB_APB_PCIE_CLK_EN_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_PCIE_CLK_EN_OFFSET ) ))
#define DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_OFFSET ) ))
#define DLNK_HUB_APB_PCIE_SW_RST_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_PCIE_SW_RST_N_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP0_JESD_MEM_DIS_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP0_JESD_MEM_DIS_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP0_JESD_CLK_EN_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP0_JESD_CLK_EN_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP0_JESD_GLITCH_SUPPRESS_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP0_JESD_GLITCH_SUPPRESS_N_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP0_JESD_SW_RST_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP0_JESD_SW_RST_N_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP1_JESD_MEM_DIS_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP1_JESD_MEM_DIS_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP1_JESD_CLK_EN_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP1_JESD_CLK_EN_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP1_JESD_GLITCH_SUPPRESS_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP1_JESD_GLITCH_SUPPRESS_N_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP1_JESD_SW_RST_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP1_JESD_SW_RST_N_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP2_JESD_MEM_DIS_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP2_JESD_MEM_DIS_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP2_JESD_CLK_EN_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP2_JESD_CLK_EN_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP2_JESD_GLITCH_SUPPRESS_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP2_JESD_GLITCH_SUPPRESS_N_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP2_JESD_SW_RST_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP2_JESD_SW_RST_N_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP3_JESD_MEM_DIS_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP3_JESD_MEM_DIS_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP3_JESD_CLK_EN_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP3_JESD_CLK_EN_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP3_JESD_GLITCH_SUPPRESS_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP3_JESD_GLITCH_SUPPRESS_N_OFFSET ) ))
#define DLNK_HUB_APB_JESD_MAP3_JESD_SW_RST_N_ADR (( ( DLNK_HUB_BASE ) + ( DLNK_HUB_APB_JESD_MAP3_JESD_SW_RST_N_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief DLNK_HUB_APB_REG_HUB_MAP_SCRATCH register description at address offset 0x0
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/HUB_MAP/Scratch
  * DLNK_HUB Control scratchpad register.
  */

typedef union {
  struct {
    uint32_t SCRATCHPAD_L : 8;
    ///< Scratchpad low
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t SCRATCHPAD_M : 8;
    ///< Scratchpad low
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t SCRATCHPAD_H : 16;
    ///< Scratchpad high
    ///< AccessType="RW/P" BitOffset="16" ResetValue="0x0"
  } ;
  uint32_t value;
} dlnk_hub_apb_hub_scratch_reg_t;

#define DLNK_HUB_APB_HUB_SCRATCH_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_HUB_SCRATCH_RD_MASK (0xffffffffU)
#define DLNK_HUB_APB_HUB_SCRATCH_WR_MASK (0xffffffffU)


///< Scratchpad low
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_L_BF_OFF ( 0)
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_L_BF_WID ( 8)
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_L_BF_MSK (0x000000FF)
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_L_BF_DEF (0x00000000)

///< Scratchpad low
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_M_BF_OFF ( 8)
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_M_BF_WID ( 8)
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_M_BF_MSK (0x0000FF00)
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_M_BF_DEF (0x00000000)

///< Scratchpad high
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_H_BF_OFF (16)
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_H_BF_WID (16)
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_H_BF_MSK (0xFFFF0000)
#define DLNK_HUB_APB_HUB_SCRATCH_SCRATCHPAD_H_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_HUB_MAP_VERSION register description at address offset 0x4
  *
  * Register default value:        0x00000001
  * Register full path in IP: dlnk_hub_apb/reg/HUB_MAP/Version
  * HUB Version Register
  */

typedef union {
  struct {
    uint32_t HUB_VERSION_ID : 4;
    ///< HUB ID value - Set to Ascii value  DLNK
    ///< AccessType="RO" BitOffset="0" ResetValue="0x1"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_hub_ver_reg_t;

#define DLNK_HUB_APB_HUB_VER_DEFAULT (0x00000001U)
#define DLNK_HUB_APB_HUB_VER_RD_MASK (0x0000000fU)
#define DLNK_HUB_APB_HUB_VER_WR_MASK (0x00000000U)


///< HUB ID value - Set to Ascii value  DLNK
#define DLNK_HUB_APB_HUB_VER_HUB_VER_ID_BF_OFF ( 0)
#define DLNK_HUB_APB_HUB_VER_HUB_VER_ID_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_VER_HUB_VER_ID_BF_MSK (0x0000000F)
#define DLNK_HUB_APB_HUB_VER_HUB_VER_ID_BF_DEF (0x00000001)


/** @brief DLNK_HUB_APB_REG_HUB_MAP_INSTANCE register description at address offset 0x8
  *
  * Register default value:        0x68767875
  * Register full path in IP: dlnk_hub_apb/reg/HUB_MAP/Instance
  * HUB Instance Register
  */

typedef union {
  struct {
    uint32_t HUB_INST_ID : 32;
    ///< HUB ID value - Set to Ascii value  DLNK
    ///< AccessType="RO" BitOffset="0" ResetValue="0x68767875"
  } ;
  uint32_t value;
} dlnk_hub_apb_hub_reg_t;

#define DLNK_HUB_APB_HUB_DEFAULT (0x68767875U)
#define DLNK_HUB_APB_HUB_RD_MASK (0xffffffffU)
#define DLNK_HUB_APB_HUB_WR_MASK (0x00000000U)


///< HUB ID value - Set to Ascii value  DLNK
#define DLNK_HUB_APB_HUB_INST_ID_BF_OFF ( 0)
#define DLNK_HUB_APB_HUB_INST_ID_BF_WID (32)
#define DLNK_HUB_APB_HUB_INST_ID_BF_MSK (0xFFFFFFFF)
#define DLNK_HUB_APB_HUB_INST_ID_BF_DEF (0x68767875)


/** @brief DLNK_HUB_APB_REG_HUB_MAP_FSM_WR_SEQ_SM_STATUS register description at address offset 0xc
  *
  * Register default value:        0x80000000
  * Register full path in IP: dlnk_hub_apb/reg/HUB_MAP/FSM_WR_SEQ_SM_STATUS
  * Status Register
  */

typedef union {
  struct {
    uint32_t FSM_JESD0_SEQ_ERR_ALM : 1;
    ///< ---
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
    uint32_t FSM_JESD0_SEQ_ERR_VAL : 2;
    ///< ---
    ///< AccessType="RO/V" BitOffset="2" ResetValue="0x0"
    uint32_t FSM_JESD1_SEQ_ERR_ALM : 1;
    ///< ---
    ///< AccessType="RO/V" BitOffset="4" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
    uint32_t FSM_JESD1_SEQ_ERR_VAL : 2;
    ///< ---
    ///< AccessType="RO/V" BitOffset="6" ResetValue="0x0"
    uint32_t FSM_JESD2_SEQ_ERR_ALM : 1;
    ///< ---
    ///< AccessType="RO/V" BitOffset="8" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="9" ResetValue="None"
    uint32_t FSM_JESD2_SEQ_ERR_VAL : 2;
    ///< ---
    ///< AccessType="RO/V" BitOffset="10" ResetValue="0x0"
    uint32_t FSM_JESD3_SEQ_ERR_ALM : 1;
    ///< ---
    ///< AccessType="RO/V" BitOffset="12" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="13" ResetValue="None"
    uint32_t FSM_JESD3_SEQ_ERR_VAL : 2;
    ///< ---
    ///< AccessType="RO/V" BitOffset="14" ResetValue="0x0"
    uint32_t FSM_PCIE_SEQ_ERR_ALM : 1;
    ///< ---
    ///< AccessType="RO/V" BitOffset="16" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="17" ResetValue="None"
    uint32_t FSM_PCIE_SEQ_ERR_VAL : 2;
    ///< ---
    ///< AccessType="RO/V" BitOffset="18" ResetValue="0x0"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t PCIE_M3_JESD_LANE0_RESET_SEL : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="31" ResetValue="0x1"
  } ;
  uint32_t value;
} dlnk_hub_apb_hub_fsm_wr_seq_sm_stat_reg_t;

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_DEFAULT (0x80000000U)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_RD_MASK (0x800dddddU)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_WR_MASK (0x80000000U)


#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD0_SEQ_ERR_ALM_BF_OFF ( 0)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD0_SEQ_ERR_ALM_BF_WID ( 1)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD0_SEQ_ERR_ALM_BF_MSK (0x00000001)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD0_SEQ_ERR_ALM_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD0_SEQ_ERR_VAL_BF_OFF ( 2)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD0_SEQ_ERR_VAL_BF_WID ( 2)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD0_SEQ_ERR_VAL_BF_MSK (0x0000000C)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD0_SEQ_ERR_VAL_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD1_SEQ_ERR_ALM_BF_OFF ( 4)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD1_SEQ_ERR_ALM_BF_WID ( 1)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD1_SEQ_ERR_ALM_BF_MSK (0x00000010)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD1_SEQ_ERR_ALM_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD1_SEQ_ERR_VAL_BF_OFF ( 6)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD1_SEQ_ERR_VAL_BF_WID ( 2)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD1_SEQ_ERR_VAL_BF_MSK (0x000000C0)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD1_SEQ_ERR_VAL_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD2_SEQ_ERR_ALM_BF_OFF ( 8)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD2_SEQ_ERR_ALM_BF_WID ( 1)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD2_SEQ_ERR_ALM_BF_MSK (0x00000100)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD2_SEQ_ERR_ALM_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD2_SEQ_ERR_VAL_BF_OFF (10)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD2_SEQ_ERR_VAL_BF_WID ( 2)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD2_SEQ_ERR_VAL_BF_MSK (0x00000C00)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD2_SEQ_ERR_VAL_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD3_SEQ_ERR_ALM_BF_OFF (12)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD3_SEQ_ERR_ALM_BF_WID ( 1)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD3_SEQ_ERR_ALM_BF_MSK (0x00001000)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD3_SEQ_ERR_ALM_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD3_SEQ_ERR_VAL_BF_OFF (14)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD3_SEQ_ERR_VAL_BF_WID ( 2)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD3_SEQ_ERR_VAL_BF_MSK (0x0000C000)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_JESD3_SEQ_ERR_VAL_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_PCIE_SEQ_ERR_ALM_BF_OFF (16)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_PCIE_SEQ_ERR_ALM_BF_WID ( 1)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_PCIE_SEQ_ERR_ALM_BF_MSK (0x00010000)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_PCIE_SEQ_ERR_ALM_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_PCIE_SEQ_ERR_VAL_BF_OFF (18)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_PCIE_SEQ_ERR_VAL_BF_WID ( 2)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_PCIE_SEQ_ERR_VAL_BF_MSK (0x000C0000)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_FSM_PCIE_SEQ_ERR_VAL_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_PCIE_M3_JESD_LANE0_RST_SEL_BF_OFF (31)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_PCIE_M3_JESD_LANE0_RST_SEL_BF_WID ( 1)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_PCIE_M3_JESD_LANE0_RST_SEL_BF_MSK (0x80000000)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_PCIE_M3_JESD_LANE0_RST_SEL_BF_DEF (0x80000000)


/** @brief DLNK_HUB_APB_REG_HUB_MAP_FSM_WR_SEQ_SM_CTRL register description at address offset 0x10
  *
  * Register default value:        0x0000010F
  * Register full path in IP: dlnk_hub_apb/reg/HUB_MAP/FSM_WR_SEQ_SM_CTRL
  * FSM State Machine Control for PCIe and JESD instances
  */

typedef union {
  struct {
    uint32_t FSM_JESD_SW_RESET_N : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0xF"
    uint32_t FSM_JESD_CLR_ALM : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t FSM_PCIE_SW_RESET_N : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="8" ResetValue="0x1"
    uint32_t FSM_PCIE_CLR_ALM : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="9" ResetValue="0x0"
    uint32_t  : 21;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
    uint32_t WRITE_PSLVERR_DISABLE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} dlnk_hub_apb_hub_fsm_wr_seq_sm_ctrl_reg_t;

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_DEFAULT (0x0000010fU)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_RD_MASK (0x800003ffU)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_WR_MASK (0x800003ffU)


#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_JESD_SW_RST_N_BF_OFF ( 0)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_JESD_SW_RST_N_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_JESD_SW_RST_N_BF_MSK (0x0000000F)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_JESD_SW_RST_N_BF_DEF (0x0000000F)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_JESD_CLR_ALM_BF_OFF ( 4)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_JESD_CLR_ALM_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_JESD_CLR_ALM_BF_MSK (0x000000F0)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_JESD_CLR_ALM_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_PCIE_SW_RST_N_BF_OFF ( 8)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_PCIE_SW_RST_N_BF_WID ( 1)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_PCIE_SW_RST_N_BF_MSK (0x00000100)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_PCIE_SW_RST_N_BF_DEF (0x00000100)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_PCIE_CLR_ALM_BF_OFF ( 9)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_PCIE_CLR_ALM_BF_WID ( 1)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_PCIE_CLR_ALM_BF_MSK (0x00000200)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_FSM_PCIE_CLR_ALM_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_WRITE_PSLVERR_DIS_BF_OFF (31)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_WRITE_PSLVERR_DIS_BF_WID ( 1)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_WRITE_PSLVERR_DIS_BF_MSK (0x80000000)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_WRITE_PSLVERR_DIS_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_HUB_MAP_FSM_DEBUG_WR_SEQ_SM register description at address offset 0x14
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/HUB_MAP/FSM_DEBUG_WR_SEQ_SM
  * FSM WR Sequence State Machine State Status Register
  */

typedef union {
  struct {
    uint32_t FSM_JESD0_STATE : 3;
    ///< ---
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
    uint32_t FSM_JESD1_STATE : 3;
    ///< ---
    ///< AccessType="RO/V" BitOffset="4" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
    uint32_t FSM_JESD2_STATE : 3;
    ///< ---
    ///< AccessType="RO/V" BitOffset="8" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t FSM_JESD3_STATE : 3;
    ///< ---
    ///< AccessType="RO/V" BitOffset="12" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
    uint32_t FSM_PCIE_STATE : 3;
    ///< ---
    ///< AccessType="RO/V" BitOffset="16" ResetValue="0x0"
    uint32_t  : 13;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_hub_fsm_dbg_wr_seq_sm_reg_t;

#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_RD_MASK (0x00077777U)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_WR_MASK (0x00000000U)


#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD0_STATE_BF_OFF ( 0)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD0_STATE_BF_WID ( 3)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD0_STATE_BF_MSK (0x00000007)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD0_STATE_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD1_STATE_BF_OFF ( 4)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD1_STATE_BF_WID ( 3)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD1_STATE_BF_MSK (0x00000070)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD1_STATE_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD2_STATE_BF_OFF ( 8)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD2_STATE_BF_WID ( 3)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD2_STATE_BF_MSK (0x00000700)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD2_STATE_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD3_STATE_BF_OFF (12)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD3_STATE_BF_WID ( 3)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD3_STATE_BF_MSK (0x00007000)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_JESD3_STATE_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_PCIE_STATE_BF_OFF (16)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_PCIE_STATE_BF_WID ( 3)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_PCIE_STATE_BF_MSK (0x00070000)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_FSM_PCIE_STATE_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_HUB_MAP_DRF_TX_ALARM_SEL register description at address offset 0x18
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/HUB_MAP/DRF_TX_ALARM_SEL
  * Select Control to geneate TX Alarm to DRF module
  */

typedef union {
  struct {
    uint32_t DRF_TX_ALARM_0 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t DRF_TX_ALARM_1 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t DRF_TX_ALARM_2 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t DRF_TX_ALARM_3 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_hub_drf_tx_alarm_sel_reg_t;

#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_RD_MASK (0x0000ffffU)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_WR_MASK (0x0000ffffU)


#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_0_BF_OFF ( 0)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_0_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_0_BF_MSK (0x0000000F)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_0_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_1_BF_OFF ( 4)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_1_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_1_BF_MSK (0x000000F0)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_1_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_2_BF_OFF ( 8)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_2_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_2_BF_MSK (0x00000F00)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_2_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_3_BF_OFF (12)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_3_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_3_BF_MSK (0x0000F000)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_DRF_TX_ALARM_3_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_HUB_MAP_EVC_TX_RX_EN_MASK_N register description at address offset 0x20
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/HUB_MAP/EVC_TX_RX_EN_MASK_N
  * Select Msdk Bits to Create tx_en and rx_en to JESD Modules
  */

typedef union {
  struct {
    uint32_t TX_EN_MASK_N_0 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TX_EN_MASK_N_1 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t TX_EN_MASK_N_2 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t TX_EN_MASK_N_3 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t RX_EN_MASK_N_0 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t RX_EN_MASK_N_1 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t RX_EN_MASK_N_2 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t RX_EN_MASK_N_3 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="28" ResetValue="0x0"
  } ;
  uint32_t value;
} dlnk_hub_apb_hub_evc_tx_rx_en_mask_n_reg_t;

#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RD_MASK (0xffffffffU)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_WR_MASK (0xffffffffU)


#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_0_BF_OFF ( 0)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_0_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_0_BF_MSK (0x0000000F)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_0_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_1_BF_OFF ( 4)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_1_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_1_BF_MSK (0x000000F0)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_1_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_2_BF_OFF ( 8)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_2_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_2_BF_MSK (0x00000F00)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_2_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_3_BF_OFF (12)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_3_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_3_BF_MSK (0x0000F000)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_TX_EN_MASK_N_3_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_0_BF_OFF (16)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_0_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_0_BF_MSK (0x000F0000)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_0_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_1_BF_OFF (20)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_1_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_1_BF_MSK (0x00F00000)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_1_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_2_BF_OFF (24)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_2_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_2_BF_MSK (0x0F000000)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_2_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_3_BF_OFF (28)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_3_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_3_BF_MSK (0xF0000000)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_RX_EN_MASK_N_3_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_HUB_MAP_EVC_FB_EN_RX_STARTED_MASK_N register description at address offset 0x24
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/HUB_MAP/EVC_FB_EN_RX_STARTED_MASK_N
  * Select Mask Bits to Create fb_en to JESD Modules
  */

typedef union {
  struct {
    uint32_t FB_EN_MASK_N_0 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FB_EN_MASK_N_1 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t FB_EN_MASK_N_2 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t FB_EN_MASK_N_3 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t RX_STARTED_MASK_N_0 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t RX_STARTED_MASK_N_1 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t RX_STARTED_MASK_N_2 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t RX_STARTED_MASK_N_3 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="28" ResetValue="0x0"
  } ;
  uint32_t value;
} dlnk_hub_apb_hub_evc_fb_en_rx_started_mask_n_reg_t;

#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RD_MASK (0xffffffffU)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_WR_MASK (0xffffffffU)


#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_0_BF_OFF ( 0)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_0_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_0_BF_MSK (0x0000000F)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_0_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_1_BF_OFF ( 4)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_1_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_1_BF_MSK (0x000000F0)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_1_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_2_BF_OFF ( 8)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_2_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_2_BF_MSK (0x00000F00)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_2_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_3_BF_OFF (12)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_3_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_3_BF_MSK (0x0000F000)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_FB_EN_MASK_N_3_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_0_BF_OFF (16)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_0_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_0_BF_MSK (0x000F0000)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_0_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_1_BF_OFF (20)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_1_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_1_BF_MSK (0x00F00000)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_1_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_2_BF_OFF (24)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_2_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_2_BF_MSK (0x0F000000)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_2_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_3_BF_OFF (28)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_3_BF_WID ( 4)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_3_BF_MSK (0xF0000000)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_RX_STARTED_MASK_N_3_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_HUB_MAP_DRF_RX_FB_STARTED_EN_MASK_N register description at address offset 0x28
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/HUB_MAP/DRF_RX_FB_STARTED_EN_MASK_N
  * Select Mask Bits to Create STARTED signal to JESD Modules
  */

typedef union {
  struct {
    uint32_t RX_FB_EN_MASK_N_0 : 8;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t RX_FB_EN_MASK_N_1 : 8;
    ///< ---
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t RX_FB_EN_MASK_N_2 : 8;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t RX_FB_EN_MASK_N_3 : 8;
    ///< ---
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} dlnk_hub_apb_hub_drf_rx_fb_started_en_mask_n_reg_t;

#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RD_MASK (0xffffffffU)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_WR_MASK (0xffffffffU)


#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_0_BF_OFF ( 0)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_0_BF_WID ( 8)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_0_BF_MSK (0x000000FF)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_0_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_1_BF_OFF ( 8)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_1_BF_WID ( 8)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_1_BF_MSK (0x0000FF00)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_1_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_2_BF_OFF (16)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_2_BF_WID ( 8)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_2_BF_MSK (0x00FF0000)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_2_BF_DEF (0x00000000)

#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_3_BF_OFF (24)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_3_BF_WID ( 8)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_3_BF_MSK (0xFF000000)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_RX_FB_EN_MASK_N_3_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_LDO_BGR_MAP_LDO_MISC_CTRL_0 register description at address offset 0x2c
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/LDO_BGR_MAP/LDO_MISC_CTRL_0
  * LDO MISC CTRL
  */

typedef union {
  struct {
    uint32_t LDO_MISC_CTRL_0 : 10;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 6;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
    uint32_t LDO_MISC_CTRL_1 : 10;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t  : 6;
    ///< Reserved
    ///< AccessType="RO" BitOffset="26" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_ldo_bgr_ldo_misc_ctrl_0_reg_t;

#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_RD_MASK (0x03ff03ffU)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_WR_MASK (0x03ff03ffU)


#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_LDO_MISC_CTRL_0_BF_OFF ( 0)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_LDO_MISC_CTRL_0_BF_WID (10)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_LDO_MISC_CTRL_0_BF_MSK (0x000003FF)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_LDO_MISC_CTRL_0_BF_DEF (0x00000000)

#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_LDO_MISC_CTRL_1_BF_OFF (16)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_LDO_MISC_CTRL_1_BF_WID (10)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_LDO_MISC_CTRL_1_BF_MSK (0x03FF0000)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_LDO_MISC_CTRL_1_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_LDO_BGR_MAP_LDO_MISC_CTRL_1 register description at address offset 0x30
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/LDO_BGR_MAP/LDO_MISC_CTRL_1
  * LDO MISC CTRL
  */

typedef union {
  struct {
    uint32_t LDO_MISC_CTRL_2 : 10;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 6;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
    uint32_t LDO_MISC_CTRL_3 : 10;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t  : 6;
    ///< Reserved
    ///< AccessType="RO" BitOffset="26" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_ldo_bgr_ldo_misc_ctrl_1_reg_t;

#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_RD_MASK (0x03ff03ffU)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_WR_MASK (0x03ff03ffU)


#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_LDO_MISC_CTRL_2_BF_OFF ( 0)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_LDO_MISC_CTRL_2_BF_WID (10)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_LDO_MISC_CTRL_2_BF_MSK (0x000003FF)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_LDO_MISC_CTRL_2_BF_DEF (0x00000000)

#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_LDO_MISC_CTRL_3_BF_OFF (16)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_LDO_MISC_CTRL_3_BF_WID (10)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_LDO_MISC_CTRL_3_BF_MSK (0x03FF0000)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_LDO_MISC_CTRL_3_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_LDO_BGR_MAP_BGR_SW_RESET register description at address offset 0x34
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/LDO_BGR_MAP/BGR_SW_RESET
  * BGR Software Reset, active high
  */

typedef union {
  struct {
    uint32_t SW_RESET : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
    uint32_t BGR_01_FUSE_WRITE_STATE : 3;
    ///< ---
    ///< AccessType="RO/V" BitOffset="4" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
    uint32_t BGR_01_FUSE_CNT_VALUE : 2;
    ///< ---
    ///< AccessType="RO/V" BitOffset="8" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
    uint32_t BGR_23_FUSE_WRITE_STATE : 3;
    ///< ---
    ///< AccessType="RO/V" BitOffset="12" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
    uint32_t BGR_23_FUSE_CNT_VALUE : 2;
    ///< ---
    ///< AccessType="RO/V" BitOffset="16" ResetValue="0x0"
    uint32_t  : 14;
    ///< Reserved
    ///< AccessType="RO" BitOffset="18" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_ldo_bgr_sw_rst_reg_t;

#define DLNK_HUB_APB_LDO_BGR_SW_RST_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_RD_MASK (0x00037371U)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_WR_MASK (0x00000001U)


#define DLNK_HUB_APB_LDO_BGR_SW_RST_SW_RST_BF_OFF ( 0)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_SW_RST_BF_WID ( 1)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_SW_RST_BF_MSK (0x00000001)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_SW_RST_BF_DEF (0x00000000)

#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_01_FUSE_WRITE_STATE_BF_OFF ( 4)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_01_FUSE_WRITE_STATE_BF_WID ( 3)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_01_FUSE_WRITE_STATE_BF_MSK (0x00000070)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_01_FUSE_WRITE_STATE_BF_DEF (0x00000000)

#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_01_FUSE_CNT_VAL_BF_OFF ( 8)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_01_FUSE_CNT_VAL_BF_WID ( 2)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_01_FUSE_CNT_VAL_BF_MSK (0x00000300)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_01_FUSE_CNT_VAL_BF_DEF (0x00000000)

#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_23_FUSE_WRITE_STATE_BF_OFF (12)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_23_FUSE_WRITE_STATE_BF_WID ( 3)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_23_FUSE_WRITE_STATE_BF_MSK (0x00007000)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_23_FUSE_WRITE_STATE_BF_DEF (0x00000000)

#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_23_FUSE_CNT_VAL_BF_OFF (16)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_23_FUSE_CNT_VAL_BF_WID ( 2)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_23_FUSE_CNT_VAL_BF_MSK (0x00030000)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_BGR_23_FUSE_CNT_VAL_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_PCIE_MAP_PCIE_MEM_DISABLE register description at address offset 0x3c
  *
  * Register default value:        0x00000001
  * Register full path in IP: dlnk_hub_apb/reg/PCIE_MAP/PCIE_MEM_DISABLE
  * PCIE Memory Disable
  */

typedef union {
  struct {
    uint32_t MEM_DISABLE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x1"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_pcie_mem_dis_reg_t;

#define DLNK_HUB_APB_PCIE_MEM_DIS_DEFAULT (0x00000001U)
#define DLNK_HUB_APB_PCIE_MEM_DIS_RD_MASK (0x00000001U)
#define DLNK_HUB_APB_PCIE_MEM_DIS_WR_MASK (0x00000001U)


#define DLNK_HUB_APB_PCIE_MEM_DIS_MEM_DIS_BF_OFF ( 0)
#define DLNK_HUB_APB_PCIE_MEM_DIS_MEM_DIS_BF_WID ( 1)
#define DLNK_HUB_APB_PCIE_MEM_DIS_MEM_DIS_BF_MSK (0x00000001)
#define DLNK_HUB_APB_PCIE_MEM_DIS_MEM_DIS_BF_DEF (0x00000001)


/** @brief DLNK_HUB_APB_REG_PCIE_MAP_PCIE_CLOCK_EN register description at address offset 0x40
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/PCIE_MAP/PCIE_CLOCK_EN
  * PCIE Clock Enables
  */

typedef union {
  struct {
    uint32_t PCIE_CLK_AXI_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t PCIE_CLK_APB_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t PCIE_DEBUG_CLK_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_pcie_clk_en_reg_t;

#define DLNK_HUB_APB_PCIE_CLK_EN_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_PCIE_CLK_EN_RD_MASK (0x00000007U)
#define DLNK_HUB_APB_PCIE_CLK_EN_WR_MASK (0x00000007U)


#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_CLK_AXI_EN_BF_OFF ( 0)
#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_CLK_AXI_EN_BF_WID ( 1)
#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_CLK_AXI_EN_BF_MSK (0x00000001)
#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_CLK_AXI_EN_BF_DEF (0x00000000)

#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_CLK_APB_EN_BF_OFF ( 1)
#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_CLK_APB_EN_BF_WID ( 1)
#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_CLK_APB_EN_BF_MSK (0x00000002)
#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_CLK_APB_EN_BF_DEF (0x00000000)

#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_DBG_CLK_EN_BF_OFF ( 2)
#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_DBG_CLK_EN_BF_WID ( 1)
#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_DBG_CLK_EN_BF_MSK (0x00000004)
#define DLNK_HUB_APB_PCIE_CLK_EN_PCIE_DBG_CLK_EN_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_PCIE_MAP_PCIE_GLITCH_SUPPRESS_N register description at address offset 0x44
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/PCIE_MAP/PCIE_GLITCH_SUPPRESS_N
  * PCIE SGCDC Glitch Suppress Control
  */

typedef union {
  struct {
    uint32_t GLITCH_SUPPRESS_N : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_pcie_glitch_suppress_n_reg_t;

#define DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_RD_MASK (0x00000001U)
#define DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_WR_MASK (0x00000001U)


#define DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_GLITCH_SUPPRESS_N_BF_OFF ( 0)
#define DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_GLITCH_SUPPRESS_N_BF_WID ( 1)
#define DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_GLITCH_SUPPRESS_N_BF_MSK (0x00000001)
#define DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_GLITCH_SUPPRESS_N_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_PCIE_MAP_PCIE_SW_RESET_N register description at address offset 0x48
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/PCIE_MAP/PCIE_SW_RESET_N
  * PCIE Software Reset
  */

typedef union {
  struct {
    uint32_t SW_RESET_N : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_pcie_sw_rst_n_reg_t;

#define DLNK_HUB_APB_PCIE_SW_RST_N_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_PCIE_SW_RST_N_RD_MASK (0x00000001U)
#define DLNK_HUB_APB_PCIE_SW_RST_N_WR_MASK (0x00000001U)


#define DLNK_HUB_APB_PCIE_SW_RST_N_SW_RST_N_BF_OFF ( 0)
#define DLNK_HUB_APB_PCIE_SW_RST_N_SW_RST_N_BF_WID ( 1)
#define DLNK_HUB_APB_PCIE_SW_RST_N_SW_RST_N_BF_MSK (0x00000001)
#define DLNK_HUB_APB_PCIE_SW_RST_N_SW_RST_N_BF_DEF (0x00000000)


/** @brief DLNK_HUB_APB_REG_JESD_REG_MAP0_JESD_MEM_DISABLE[4] register description at address offset 0x4c
  *
  * Register default value:        0x0FFFFFFF
  * Register full path in IP: dlnk_hub_apb/reg/JESD_REG_MAP0/JESD_MEM_DISABLE
  * JESD Memory Disable
  */

typedef union {
  struct {
    uint32_t MEM_DISABLE : 28;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0xFFFFFFF"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_jesd_mem_dis_reg_t;

#define DLNK_HUB_APB_JESD_MEM_DIS_DEFAULT (0x0fffffffU)
#define DLNK_HUB_APB_JESD_MEM_DIS_RD_MASK (0x0fffffffU)
#define DLNK_HUB_APB_JESD_MEM_DIS_WR_MASK (0x0fffffffU)


#define DLNK_HUB_APB_JESD_MEM_DIS_MEM_DIS_BF_OFF ( 0)
#define DLNK_HUB_APB_JESD_MEM_DIS_MEM_DIS_BF_WID (28)
#define DLNK_HUB_APB_JESD_MEM_DIS_MEM_DIS_BF_MSK (0x0FFFFFFF)
#define DLNK_HUB_APB_JESD_MEM_DIS_MEM_DIS_BF_DEF (0x0FFFFFFF)
#define DLNK_HUB_APB_JESD_MEM_DIS_ARR_SZ0 (4)
#define DLNK_HUB_APB_JESD_MEM_DIS_ARRAY_STRIDE0 (0x0010)


/** @brief DLNK_HUB_APB_REG_JESD_REG_MAP0_JESD_CLOCK_EN[4] register description at address offset 0x50
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/JESD_REG_MAP0/JESD_CLOCK_EN
  * JESD Clock Enables
  */

typedef union {
  struct {
    uint32_t CLK_BFN_DLNK_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t CLK_CRUX_DLNK_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t CLK_JESD_1G_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t CLK_JESD_1P5G_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t CLK_AXI_S_ACLK_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t CLK_JESD_122M_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t CLK_JESD_PHM_FOVR_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="6" ResetValue="0x0"
    uint32_t  : 25;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_jesd_clk_en_reg_t;

#define DLNK_HUB_APB_JESD_CLK_EN_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_JESD_CLK_EN_RD_MASK (0x0000007fU)
#define DLNK_HUB_APB_JESD_CLK_EN_WR_MASK (0x0000007fU)


#define DLNK_HUB_APB_JESD_CLK_EN_CLK_BFN_DLNK_EN_BF_OFF ( 0)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_BFN_DLNK_EN_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_BFN_DLNK_EN_BF_MSK (0x00000001)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_BFN_DLNK_EN_BF_DEF (0x00000000)

#define DLNK_HUB_APB_JESD_CLK_EN_CLK_CRUX_DLNK_EN_BF_OFF ( 1)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_CRUX_DLNK_EN_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_CRUX_DLNK_EN_BF_MSK (0x00000002)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_CRUX_DLNK_EN_BF_DEF (0x00000000)

#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_1G_EN_BF_OFF ( 2)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_1G_EN_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_1G_EN_BF_MSK (0x00000004)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_1G_EN_BF_DEF (0x00000000)

#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_1P5G_EN_BF_OFF ( 3)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_1P5G_EN_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_1P5G_EN_BF_MSK (0x00000008)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_1P5G_EN_BF_DEF (0x00000000)

#define DLNK_HUB_APB_JESD_CLK_EN_CLK_AXI_S_ACLK_EN_BF_OFF ( 4)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_AXI_S_ACLK_EN_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_AXI_S_ACLK_EN_BF_MSK (0x00000010)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_AXI_S_ACLK_EN_BF_DEF (0x00000000)

#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_122M_EN_BF_OFF ( 5)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_122M_EN_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_122M_EN_BF_MSK (0x00000020)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_122M_EN_BF_DEF (0x00000000)

#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_PHM_FOVR_EN_BF_OFF ( 6)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_PHM_FOVR_EN_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_PHM_FOVR_EN_BF_MSK (0x00000040)
#define DLNK_HUB_APB_JESD_CLK_EN_CLK_JESD_PHM_FOVR_EN_BF_DEF (0x00000000)
#define DLNK_HUB_APB_JESD_CLK_EN_ARR_SZ0 (4)
#define DLNK_HUB_APB_JESD_CLK_EN_ARRAY_STRIDE0 (0x0010)


/** @brief DLNK_HUB_APB_REG_JESD_REG_MAP0_JESD_GLITCH_SUPPRESS_N[4] register description at address offset 0x54
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/JESD_REG_MAP0/JESD_GLITCH_SUPPRESS_N
  * JESD Glitch Suppress
  */

typedef union {
  struct {
    uint32_t AXIS_GLITCH_SUPPRESS_N : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t NON_AXIS_GLITCH_SUPPRESS_N : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_jesd_glitch_suppress_n_reg_t;

#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_RD_MASK (0x00000003U)
#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_WR_MASK (0x00000003U)


#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_AXIS_GLITCH_SUPPRESS_N_BF_OFF ( 0)
#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_AXIS_GLITCH_SUPPRESS_N_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_AXIS_GLITCH_SUPPRESS_N_BF_MSK (0x00000001)
#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_AXIS_GLITCH_SUPPRESS_N_BF_DEF (0x00000000)

#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_NON_AXIS_GLITCH_SUPPRESS_N_BF_OFF ( 1)
#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_NON_AXIS_GLITCH_SUPPRESS_N_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_NON_AXIS_GLITCH_SUPPRESS_N_BF_MSK (0x00000002)
#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_NON_AXIS_GLITCH_SUPPRESS_N_BF_DEF (0x00000000)
#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_ARR_SZ0 (4)
#define DLNK_HUB_APB_JESD_GLITCH_SUPPRESS_N_ARRAY_STRIDE0 (0x0010)


/** @brief DLNK_HUB_APB_REG_JESD_REG_MAP0_JESD_SW_RESET_N[4] register description at address offset 0x58
  *
  * Register default value:        0x00000000
  * Register full path in IP: dlnk_hub_apb/reg/JESD_REG_MAP0/JESD_SW_RESET_N
  * JESD SW Reset
  */

typedef union {
  struct {
    uint32_t SW_RESET_N : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t SW_AXIS_RESET_N : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
    uint32_t SW_PHY_LANE_RESET_N : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} dlnk_hub_apb_jesd_sw_rst_n_reg_t;

#define DLNK_HUB_APB_JESD_SW_RST_N_DEFAULT (0x00000000U)
#define DLNK_HUB_APB_JESD_SW_RST_N_RD_MASK (0x000000f3U)
#define DLNK_HUB_APB_JESD_SW_RST_N_WR_MASK (0x000000f3U)


#define DLNK_HUB_APB_JESD_SW_RST_N_SW_RST_N_BF_OFF ( 0)
#define DLNK_HUB_APB_JESD_SW_RST_N_SW_RST_N_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_SW_RST_N_SW_RST_N_BF_MSK (0x00000001)
#define DLNK_HUB_APB_JESD_SW_RST_N_SW_RST_N_BF_DEF (0x00000000)

#define DLNK_HUB_APB_JESD_SW_RST_N_SW_AXIS_RST_N_BF_OFF ( 1)
#define DLNK_HUB_APB_JESD_SW_RST_N_SW_AXIS_RST_N_BF_WID ( 1)
#define DLNK_HUB_APB_JESD_SW_RST_N_SW_AXIS_RST_N_BF_MSK (0x00000002)
#define DLNK_HUB_APB_JESD_SW_RST_N_SW_AXIS_RST_N_BF_DEF (0x00000000)

#define DLNK_HUB_APB_JESD_SW_RST_N_SW_PHY_LANE_RST_N_BF_OFF ( 4)
#define DLNK_HUB_APB_JESD_SW_RST_N_SW_PHY_LANE_RST_N_BF_WID ( 4)
#define DLNK_HUB_APB_JESD_SW_RST_N_SW_PHY_LANE_RST_N_BF_MSK (0x000000F0)
#define DLNK_HUB_APB_JESD_SW_RST_N_SW_PHY_LANE_RST_N_BF_DEF (0x00000000)
#define DLNK_HUB_APB_JESD_SW_RST_N_ARR_SZ0 (4)
#define DLNK_HUB_APB_JESD_SW_RST_N_ARRAY_STRIDE0 (0x0010)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define DLNK_HUB_APB_HUB_SCRATCH_REG ((dlnk_hub_apb_hub_scratch_reg_t*) DLNK_HUB_APB_HUB_SCRATCH_ADR)
#define DLNK_HUB_APB_HUB_VER_REG ((dlnk_hub_apb_hub_ver_reg_t*) DLNK_HUB_APB_HUB_VER_ADR)
#define DLNK_HUB_APB_HUB_REG ((dlnk_hub_apb_hub_reg_t*) DLNK_HUB_APB_HUB_ADR)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_REG ((dlnk_hub_apb_hub_fsm_wr_seq_sm_stat_reg_t*) DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_STAT_ADR)
#define DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_REG ((dlnk_hub_apb_hub_fsm_wr_seq_sm_ctrl_reg_t*) DLNK_HUB_APB_HUB_FSM_WR_SEQ_SM_CTRL_ADR)
#define DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_REG ((dlnk_hub_apb_hub_fsm_dbg_wr_seq_sm_reg_t*) DLNK_HUB_APB_HUB_FSM_DBG_WR_SEQ_SM_ADR)
#define DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_REG ((dlnk_hub_apb_hub_drf_tx_alarm_sel_reg_t*) DLNK_HUB_APB_HUB_DRF_TX_ALARM_SEL_ADR)
#define DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_REG ((dlnk_hub_apb_hub_evc_tx_rx_en_mask_n_reg_t*) DLNK_HUB_APB_HUB_EVC_TX_RX_EN_MASK_N_ADR)
#define DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_REG ((dlnk_hub_apb_hub_evc_fb_en_rx_started_mask_n_reg_t*) DLNK_HUB_APB_HUB_EVC_FB_EN_RX_STARTED_MASK_N_ADR)
#define DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_REG ((dlnk_hub_apb_hub_drf_rx_fb_started_en_mask_n_reg_t*) DLNK_HUB_APB_HUB_DRF_RX_FB_STARTED_EN_MASK_N_ADR)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_REG ((dlnk_hub_apb_ldo_bgr_ldo_misc_ctrl_0_reg_t*) DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_0_ADR)
#define DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_REG ((dlnk_hub_apb_ldo_bgr_ldo_misc_ctrl_1_reg_t*) DLNK_HUB_APB_LDO_BGR_LDO_MISC_CTRL_1_ADR)
#define DLNK_HUB_APB_LDO_BGR_SW_RST_REG ((dlnk_hub_apb_ldo_bgr_sw_rst_reg_t*) DLNK_HUB_APB_LDO_BGR_SW_RST_ADR)
#define DLNK_HUB_APB_PCIE_MEM_DIS_REG ((dlnk_hub_apb_pcie_mem_dis_reg_t*) DLNK_HUB_APB_PCIE_MEM_DIS_ADR)
#define DLNK_HUB_APB_PCIE_CLK_EN_REG ((dlnk_hub_apb_pcie_clk_en_reg_t*) DLNK_HUB_APB_PCIE_CLK_EN_ADR)
#define DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_REG ((dlnk_hub_apb_pcie_glitch_suppress_n_reg_t*) DLNK_HUB_APB_PCIE_GLITCH_SUPPRESS_N_ADR)
#define DLNK_HUB_APB_PCIE_SW_RST_N_REG ((dlnk_hub_apb_pcie_sw_rst_n_reg_t*) DLNK_HUB_APB_PCIE_SW_RST_N_ADR)
#define DLNK_HUB_APB_JESD_MAP0_JESD_MEM_DIS_REG ((dlnk_hub_apb_jesd_mem_dis_reg_t*) DLNK_HUB_APB_JESD_MAP0_JESD_MEM_DIS_ADR)
#define DLNK_HUB_APB_JESD_MAP0_JESD_CLK_EN_REG ((dlnk_hub_apb_jesd_clk_en_reg_t*) DLNK_HUB_APB_JESD_MAP0_JESD_CLK_EN_ADR)
#define DLNK_HUB_APB_JESD_MAP0_JESD_GLITCH_SUPPRESS_N_REG ((dlnk_hub_apb_jesd_glitch_suppress_n_reg_t*) DLNK_HUB_APB_JESD_MAP0_JESD_GLITCH_SUPPRESS_N_ADR)
#define DLNK_HUB_APB_JESD_MAP0_JESD_SW_RST_N_REG ((dlnk_hub_apb_jesd_sw_rst_n_reg_t*) DLNK_HUB_APB_JESD_MAP0_JESD_SW_RST_N_ADR)
#define DLNK_HUB_APB_JESD_MAP1_JESD_MEM_DIS_REG ((dlnk_hub_apb_jesd_mem_dis_reg_t*) DLNK_HUB_APB_JESD_MAP1_JESD_MEM_DIS_ADR)
#define DLNK_HUB_APB_JESD_MAP1_JESD_CLK_EN_REG ((dlnk_hub_apb_jesd_clk_en_reg_t*) DLNK_HUB_APB_JESD_MAP1_JESD_CLK_EN_ADR)
#define DLNK_HUB_APB_JESD_MAP1_JESD_GLITCH_SUPPRESS_N_REG ((dlnk_hub_apb_jesd_glitch_suppress_n_reg_t*) DLNK_HUB_APB_JESD_MAP1_JESD_GLITCH_SUPPRESS_N_ADR)
#define DLNK_HUB_APB_JESD_MAP1_JESD_SW_RST_N_REG ((dlnk_hub_apb_jesd_sw_rst_n_reg_t*) DLNK_HUB_APB_JESD_MAP1_JESD_SW_RST_N_ADR)
#define DLNK_HUB_APB_JESD_MAP2_JESD_MEM_DIS_REG ((dlnk_hub_apb_jesd_mem_dis_reg_t*) DLNK_HUB_APB_JESD_MAP2_JESD_MEM_DIS_ADR)
#define DLNK_HUB_APB_JESD_MAP2_JESD_CLK_EN_REG ((dlnk_hub_apb_jesd_clk_en_reg_t*) DLNK_HUB_APB_JESD_MAP2_JESD_CLK_EN_ADR)
#define DLNK_HUB_APB_JESD_MAP2_JESD_GLITCH_SUPPRESS_N_REG ((dlnk_hub_apb_jesd_glitch_suppress_n_reg_t*) DLNK_HUB_APB_JESD_MAP2_JESD_GLITCH_SUPPRESS_N_ADR)
#define DLNK_HUB_APB_JESD_MAP2_JESD_SW_RST_N_REG ((dlnk_hub_apb_jesd_sw_rst_n_reg_t*) DLNK_HUB_APB_JESD_MAP2_JESD_SW_RST_N_ADR)
#define DLNK_HUB_APB_JESD_MAP3_JESD_MEM_DIS_REG ((dlnk_hub_apb_jesd_mem_dis_reg_t*) DLNK_HUB_APB_JESD_MAP3_JESD_MEM_DIS_ADR)
#define DLNK_HUB_APB_JESD_MAP3_JESD_CLK_EN_REG ((dlnk_hub_apb_jesd_clk_en_reg_t*) DLNK_HUB_APB_JESD_MAP3_JESD_CLK_EN_ADR)
#define DLNK_HUB_APB_JESD_MAP3_JESD_GLITCH_SUPPRESS_N_REG ((dlnk_hub_apb_jesd_glitch_suppress_n_reg_t*) DLNK_HUB_APB_JESD_MAP3_JESD_GLITCH_SUPPRESS_N_ADR)
#define DLNK_HUB_APB_JESD_MAP3_JESD_SW_RST_N_REG ((dlnk_hub_apb_jesd_sw_rst_n_reg_t*) DLNK_HUB_APB_JESD_MAP3_JESD_SW_RST_N_ADR)

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    dlnk_hub_apb_hub_scratch_reg_t HUB_SCRATCH; /*< Address offset = 0x0 */
    dlnk_hub_apb_hub_ver_reg_t HUB_VER; /*< Address offset = 0x4 */
    dlnk_hub_apb_hub_reg_t HUB_INSTANCE; /*< Address offset = 0x8 */
    dlnk_hub_apb_hub_fsm_wr_seq_sm_stat_reg_t HUB_FSM_WR_SEQ_SM_STAT; /*< Address offset = 0xc */
    dlnk_hub_apb_hub_fsm_wr_seq_sm_ctrl_reg_t HUB_FSM_WR_SEQ_SM_CTRL; /*< Address offset = 0x10 */
    dlnk_hub_apb_hub_fsm_dbg_wr_seq_sm_reg_t HUB_FSM_DBG_WR_SEQ_SM; /*< Address offset = 0x14 */
    dlnk_hub_apb_hub_drf_tx_alarm_sel_reg_t HUB_DRF_TX_ALARM_SEL; /*< Address offset = 0x18 */
    const uint8_t        reservedArea0 [4];   /*< Address offset = 0x1c */
    dlnk_hub_apb_hub_evc_tx_rx_en_mask_n_reg_t HUB_EVC_TX_RX_EN_MASK_N; /*< Address offset = 0x20 */
    dlnk_hub_apb_hub_evc_fb_en_rx_started_mask_n_reg_t HUB_EVC_FB_EN_RX_STARTED_MASK_N; /*< Address offset = 0x24 */
    dlnk_hub_apb_hub_drf_rx_fb_started_en_mask_n_reg_t HUB_DRF_RX_FB_STARTED_EN_MASK_N; /*< Address offset = 0x28 */
    dlnk_hub_apb_ldo_bgr_ldo_misc_ctrl_0_reg_t LDO_BGR_LDO_MISC_CTRL_0; /*< Address offset = 0x2c */
    dlnk_hub_apb_ldo_bgr_ldo_misc_ctrl_1_reg_t LDO_BGR_LDO_MISC_CTRL_1; /*< Address offset = 0x30 */
    dlnk_hub_apb_ldo_bgr_sw_rst_reg_t LDO_BGR_SW_RST; /*< Address offset = 0x34 */
    const uint8_t        reservedArea1 [4];   /*< Address offset = 0x38 */
    dlnk_hub_apb_pcie_mem_dis_reg_t PCIE_MEM_DIS; /*< Address offset = 0x3c */
    dlnk_hub_apb_pcie_clk_en_reg_t PCIE_CLK_EN; /*< Address offset = 0x40 */
    dlnk_hub_apb_pcie_glitch_suppress_n_reg_t PCIE_GLITCH_SUPPRESS_N; /*< Address offset = 0x44 */
    dlnk_hub_apb_pcie_sw_rst_n_reg_t PCIE_SW_RST_N; /*< Address offset = 0x48 */
    dlnk_hub_apb_jesd_mem_dis_reg_t JESD_MAP0_JESD_MEM_DIS; /*< Address offset = 0x4c */
    dlnk_hub_apb_jesd_clk_en_reg_t JESD_MAP0_JESD_CLK_EN; /*< Address offset = 0x50 */
    dlnk_hub_apb_jesd_glitch_suppress_n_reg_t JESD_MAP0_JESD_GLITCH_SUPPRESS_N; /*< Address offset = 0x54 */
    dlnk_hub_apb_jesd_sw_rst_n_reg_t JESD_MAP0_JESD_SW_RST_N; /*< Address offset = 0x58 */
    dlnk_hub_apb_jesd_mem_dis_reg_t JESD_MAP1_JESD_MEM_DIS; /*< Address offset = 0x5c */
    dlnk_hub_apb_jesd_clk_en_reg_t JESD_MAP1_JESD_CLK_EN; /*< Address offset = 0x60 */
    dlnk_hub_apb_jesd_glitch_suppress_n_reg_t JESD_MAP1_JESD_GLITCH_SUPPRESS_N; /*< Address offset = 0x64 */
    dlnk_hub_apb_jesd_sw_rst_n_reg_t JESD_MAP1_JESD_SW_RST_N; /*< Address offset = 0x68 */
    dlnk_hub_apb_jesd_mem_dis_reg_t JESD_MAP2_JESD_MEM_DIS; /*< Address offset = 0x6c */
    dlnk_hub_apb_jesd_clk_en_reg_t JESD_MAP2_JESD_CLK_EN; /*< Address offset = 0x70 */
    dlnk_hub_apb_jesd_glitch_suppress_n_reg_t JESD_MAP2_JESD_GLITCH_SUPPRESS_N; /*< Address offset = 0x74 */
    dlnk_hub_apb_jesd_sw_rst_n_reg_t JESD_MAP2_JESD_SW_RST_N; /*< Address offset = 0x78 */
    dlnk_hub_apb_jesd_mem_dis_reg_t JESD_MAP3_JESD_MEM_DIS; /*< Address offset = 0x7c */
    dlnk_hub_apb_jesd_clk_en_reg_t JESD_MAP3_JESD_CLK_EN; /*< Address offset = 0x80 */
    dlnk_hub_apb_jesd_glitch_suppress_n_reg_t JESD_MAP3_JESD_GLITCH_SUPPRESS_N; /*< Address offset = 0x84 */
    dlnk_hub_apb_jesd_sw_rst_n_reg_t JESD_MAP3_JESD_SW_RST_N; /*< Address offset = 0x88 */
} dlnk_hub_apb_t;     // size: 0x0084

// AddressSpace struct pointer
//
#define DLNK_HUB         ((dlnk_hub_apb_t*) DLNK_HUB_BASE)

// ******************************************* /Address Space

#endif      // _DLNK_HUB_APB_H_

