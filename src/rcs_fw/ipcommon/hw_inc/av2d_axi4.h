#ifndef _AV2D_AXI4_H_
#define _AV2D_AXI4_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define V2D0_AV2D_AXI4_0_BASE  ( 0x03810000 )
#define V2D0_AV2D_AXI4_1_BASE  ( 0x03830000 )
#define V2D1_AV2D_AXI4_0_BASE  ( 0x03850000 )
#define V2D1_AV2D_AXI4_1_BASE  ( 0x03870000 )
#define V2D2_AV2D_AXI4_0_BASE  ( 0x03890000 )
#define V2D2_AV2D_AXI4_1_BASE  ( 0x038b0000 )
#define V2D3_AV2D_AXI4_0_BASE  ( 0x038d0000 )
#define V2D3_AV2D_AXI4_1_BASE  ( 0x038f0000 )
#define V2D4_AV2D_AXI4_0_BASE  ( 0x03910000 )
#define V2D4_AV2D_AXI4_1_BASE  ( 0x03930000 )
#define V2D5_AV2D_AXI4_0_BASE  ( 0x03950000 )
#define V2D5_AV2D_AXI4_1_BASE  ( 0x03970000 )
#define V2D6_AV2D_AXI4_0_BASE  ( 0x03990000 )
#define V2D6_AV2D_AXI4_1_BASE  ( 0x039b0000 )
#define V2D7_AV2D_AXI4_0_BASE  ( 0x039d0000 )
#define V2D7_AV2D_AXI4_1_BASE  ( 0x039f0000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define AV2D_AXI4_AV2D_AXI4_PC_M1_OFFSET ( 0x00000000U )
#define AV2D_AXI4_AV2D_AXI4_PC_M2_OFFSET ( 0x00004000U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define AV2D_AXI4_AV2D_AXI4_PC_M1_ADR(_BASE) (( ( _BASE ) + ( AV2D_AXI4_AV2D_AXI4_PC_M1_OFFSET ) ))
#define AV2D_AXI4_AV2D_AXI4_PC_M2_ADR(_BASE) (( ( _BASE ) + ( AV2D_AXI4_AV2D_AXI4_PC_M2_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief AV2D_AXI4_COM_REG_AV2D_AXI4_PC_M1 register description at address offset 0x0
  *
  * Register default value:        0x00000000
  * Register full path in IP: av2d_axi4_com/reg/AV2D_AXI4_PC_M1
  * ABC V2D Core AXI4 Writable Space for PDPD Coeff-update Mode 1
  */

typedef union {
  struct {
    uint128_t AV2D_AXI4_PC_M1 : 128;
    ///< This is the dummy register to represent abc_v2d AXI4 space for PDPD
    ///< Mode 1 coefficient update.
    ///< AccessType="WO" BitOffset="0" ResetValue="0x0"
  } ;
  uint128_t value;
} av2d_axi4_av2d_axi4_pc_m1_reg_t;

#define AV2D_AXI4_AV2D_AXI4_PC_M1_DEFAULT (0x00000000000000000000000000000000ULLLL)
#define AV2D_AXI4_AV2D_AXI4_PC_M1_RD_MASK (0x00000000000000000000000000000000ULLLL)
#define AV2D_AXI4_AV2D_AXI4_PC_M1_WR_MASK (0xffffffffffffffffffffffffffffffffULLLL)


///< This is the dummy register to represent abc_v2d AXI4 space for PDPD
///< Mode 1 coefficient update.
#define AV2D_AXI4_AV2D_AXI4_PC_M1_AV2D_AXI4_PC_M1_BF_OFF ( 0)
#define AV2D_AXI4_AV2D_AXI4_PC_M1_AV2D_AXI4_PC_M1_BF_WID (128)
#define AV2D_AXI4_AV2D_AXI4_PC_M1_AV2D_AXI4_PC_M1_BF_MSK (0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)
#define AV2D_AXI4_AV2D_AXI4_PC_M1_AV2D_AXI4_PC_M1_BF_DEF (0x00000000)


/** @brief AV2D_AXI4_COM_REG_AV2D_AXI4_PC_M2 register description at address offset 0x4000
  *
  * Register default value:        0x00000000
  * Register full path in IP: av2d_axi4_com/reg/AV2D_AXI4_PC_M2
  * ABC V2D Core AXI4 Writable Space for PDPD Coeff-update Mode 2
  */

typedef union {
  struct {
    uint128_t AV2D_AXI4_PC_M2 : 128;
    ///< This is the dummy register to represent abc_v2d AXI4 space for PDPD
    ///< Mode 2 coefficient update.
    ///< AccessType="WO" BitOffset="0" ResetValue="0x0"
  } ;
  uint128_t value;
} av2d_axi4_av2d_axi4_pc_m2_reg_t;

#define AV2D_AXI4_AV2D_AXI4_PC_M2_DEFAULT (0x00000000000000000000000000000000ULLLL)
#define AV2D_AXI4_AV2D_AXI4_PC_M2_RD_MASK (0x00000000000000000000000000000000ULLLL)
#define AV2D_AXI4_AV2D_AXI4_PC_M2_WR_MASK (0xffffffffffffffffffffffffffffffffULLLL)


///< This is the dummy register to represent abc_v2d AXI4 space for PDPD
///< Mode 2 coefficient update.
#define AV2D_AXI4_AV2D_AXI4_PC_M2_AV2D_AXI4_PC_M2_BF_OFF ( 0)
#define AV2D_AXI4_AV2D_AXI4_PC_M2_AV2D_AXI4_PC_M2_BF_WID (128)
#define AV2D_AXI4_AV2D_AXI4_PC_M2_AV2D_AXI4_PC_M2_BF_MSK (0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)
#define AV2D_AXI4_AV2D_AXI4_PC_M2_AV2D_AXI4_PC_M2_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define AV2D_AXI4_AV2D_AXI4_PC_M1_REG(_BASE) ((av2d_axi4_av2d_axi4_pc_m1_reg_t*) AV2D_AXI4_AV2D_AXI4_PC_M1_ADR(_BASE))
#define AV2D_AXI4_AV2D_AXI4_PC_M2_REG(_BASE) ((av2d_axi4_av2d_axi4_pc_m2_reg_t*) AV2D_AXI4_AV2D_AXI4_PC_M2_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    av2d_axi4_av2d_axi4_pc_m1_reg_t AV2D_AXI4_PC_M1; /*< Address offset = 0x0 */
    const uint8_t        reservedArea0 [16368]; /*< Address offset = 0x10 */
    av2d_axi4_av2d_axi4_pc_m2_reg_t AV2D_AXI4_PC_M2; /*< Address offset = 0x4000 */
} av2d_axi4_t;     // size: 0x0020

// AddressSpace struct pointer
//
#define V2D0_AV2D_AXI4_0  ((av2d_axi4_t*) V2D0_AV2D_AXI4_0_BASE)
#define V2D0_AV2D_AXI4_1  ((av2d_axi4_t*) V2D0_AV2D_AXI4_1_BASE)
#define V2D1_AV2D_AXI4_0  ((av2d_axi4_t*) V2D1_AV2D_AXI4_0_BASE)
#define V2D1_AV2D_AXI4_1  ((av2d_axi4_t*) V2D1_AV2D_AXI4_1_BASE)
#define V2D2_AV2D_AXI4_0  ((av2d_axi4_t*) V2D2_AV2D_AXI4_0_BASE)
#define V2D2_AV2D_AXI4_1  ((av2d_axi4_t*) V2D2_AV2D_AXI4_1_BASE)
#define V2D3_AV2D_AXI4_0  ((av2d_axi4_t*) V2D3_AV2D_AXI4_0_BASE)
#define V2D3_AV2D_AXI4_1  ((av2d_axi4_t*) V2D3_AV2D_AXI4_1_BASE)
#define V2D4_AV2D_AXI4_0  ((av2d_axi4_t*) V2D4_AV2D_AXI4_0_BASE)
#define V2D4_AV2D_AXI4_1  ((av2d_axi4_t*) V2D4_AV2D_AXI4_1_BASE)
#define V2D5_AV2D_AXI4_0  ((av2d_axi4_t*) V2D5_AV2D_AXI4_0_BASE)
#define V2D5_AV2D_AXI4_1  ((av2d_axi4_t*) V2D5_AV2D_AXI4_1_BASE)
#define V2D6_AV2D_AXI4_0  ((av2d_axi4_t*) V2D6_AV2D_AXI4_0_BASE)
#define V2D6_AV2D_AXI4_1  ((av2d_axi4_t*) V2D6_AV2D_AXI4_1_BASE)
#define V2D7_AV2D_AXI4_0  ((av2d_axi4_t*) V2D7_AV2D_AXI4_0_BASE)
#define V2D7_AV2D_AXI4_1  ((av2d_axi4_t*) V2D7_AV2D_AXI4_1_BASE)

// ******************************************* /Address Space

#endif      // _AV2D_AXI4_H_

