#ifndef _RCS_SCB_H_
#define _RCS_SCB_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define RCS_SCB_BASE          ( 0x00300000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define RCS_SCB_PERIPH_REMAP_OFFSET ( 0x00000000U )
#define RCS_SCB_S_RSM_0_SECURITY_OFFSET ( 0x00000008U )
#define RCS_SCB_S_RSM_1_SECURITY_OFFSET ( 0x0000000cU )
#define RCS_SCB_S_VEX_STRM_SECURITY_OFFSET ( 0x00000010U )
#define RCS_SCB_S_ORION_KP1_SECURITY_OFFSET ( 0x00000014U )
#define RCS_SCB_S_ORION_MAIN_SECURITY_OFFSET ( 0x00000018U )
#define RCS_SCB_S_CORE_0_SECURITY_OFFSET ( 0x0000001cU )
#define RCS_SCB_S_CORE_1_SECURITY_OFFSET ( 0x00000020U )
#define RCS_SCB_S_CORE_3_SECURITY_OFFSET ( 0x00000024U )
#define RCS_SCB_S_ROM_SECURITY_OFFSET ( 0x00000028U )
#define RCS_SCB_S_PHM_SECURITY_OFFSET ( 0x0000002cU )
#define RCS_SCB_S_PHM1_SECURITY_OFFSET ( 0x00000030U )
#define RCS_SCB_S_CORE_2_SECURITY_OFFSET ( 0x00000034U )
#define RCS_SCB_APB_BFN_GRP_SECURITY_OFFSET ( 0x00000038U )
#define RCS_SCB_APB_RCS_GRP_SECURITY_OFFSET ( 0x0000003cU )
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_OFFSET ( 0x00000800U )
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_OFFSET ( 0x00000804U )
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_OFFSET ( 0x00000808U )
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_OFFSET ( 0x0000080cU )
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_OFFSET ( 0x00000900U )
#define RCS_SCB_PERIPH_ID4_OFFSET ( 0x00001fd0U )
#define RCS_SCB_PERIPH_ID5_OFFSET ( 0x00001fd4U )
#define RCS_SCB_PERIPH_ID6_OFFSET ( 0x00001fd8U )
#define RCS_SCB_PERIPH_ID7_OFFSET ( 0x00001fdcU )
#define RCS_SCB_PERIPH_ID0_OFFSET ( 0x00001fe0U )
#define RCS_SCB_PERIPH_ID1_OFFSET ( 0x00001fe4U )
#define RCS_SCB_PERIPH_ID2_OFFSET ( 0x00001fe8U )
#define RCS_SCB_PERIPH_ID3_OFFSET ( 0x00001fecU )
#define RCS_SCB_COMP_ID0_OFFSET ( 0x00001ff0U )
#define RCS_SCB_COMP_ID1_OFFSET ( 0x00001ff4U )
#define RCS_SCB_COMP_ID2_OFFSET ( 0x00001ff8U )
#define RCS_SCB_COMP_ID3_OFFSET ( 0x00001ffcU )
#define RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_OFFSET ( 0x00002008U )
#define RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_OFFSET ( 0x00003008U )
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_OFFSET ( 0x00004008U )
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD2_OFFSET ( 0x00004024U )
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_OFFSET ( 0x00004108U )
#define RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_OFFSET ( 0x00005008U )
#define RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_OFFSET ( 0x00006008U )
#define RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_OFFSET ( 0x00007008U )
#define RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_OFFSET ( 0x00008008U )
#define RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_OFFSET ( 0x00009008U )
#define RCS_SCB_S_ROM_FN_MOD_ISS_BM_OFFSET ( 0x0000a008U )
#define RCS_SCB_S_PHM_FN_MOD_ISS_BM_OFFSET ( 0x0000b008U )
#define RCS_SCB_S_PHM1_FN_MOD_ISS_BM_OFFSET ( 0x0000c008U )
#define RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_OFFSET ( 0x0000d008U )
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_OFFSET ( 0x0000e008U )
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_OFFSET ( 0x0000e024U )
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_OFFSET ( 0x0000f008U )
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_OFFSET ( 0x0000f024U )
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_OFFSET ( 0x00042108U )
#define RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_OFFSET ( 0x00042800U )
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_OFFSET ( 0x00043108U )
#define RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_OFFSET ( 0x00043800U )
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_OFFSET ( 0x00044108U )
#define RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_OFFSET ( 0x00044800U )
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_OFFSET ( 0x00045108U )
#define RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_OFFSET ( 0x00045800U )
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_OFFSET ( 0x00046108U )
#define RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_OFFSET ( 0x00046800U )
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_OFFSET ( 0x00047108U )
#define RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_OFFSET ( 0x00047800U )
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_OFFSET ( 0x00048108U )
#define RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_OFFSET ( 0x00048800U )
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_OFFSET ( 0x00049108U )
#define RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_OFFSET ( 0x00049800U )
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_OFFSET ( 0x0004a108U )
#define RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_OFFSET ( 0x0004a800U )
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_OFFSET ( 0x0004b108U )
#define RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_OFFSET ( 0x0004b800U )
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_OFFSET ( 0x0004c108U )
#define RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_OFFSET ( 0x0004c800U )
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_OFFSET ( 0x0004d108U )
#define RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_OFFSET ( 0x0004d800U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define RCS_SCB_PERIPH_REMAP_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_PERIPH_REMAP_OFFSET ) ))
#define RCS_SCB_S_RSM_0_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_RSM_0_SECURITY_OFFSET ) ))
#define RCS_SCB_S_RSM_1_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_RSM_1_SECURITY_OFFSET ) ))
#define RCS_SCB_S_VEX_STRM_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_VEX_STRM_SECURITY_OFFSET ) ))
#define RCS_SCB_S_ORION_KP1_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_ORION_KP1_SECURITY_OFFSET ) ))
#define RCS_SCB_S_ORION_MAIN_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_ORION_MAIN_SECURITY_OFFSET ) ))
#define RCS_SCB_S_CORE_0_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_CORE_0_SECURITY_OFFSET ) ))
#define RCS_SCB_S_CORE_1_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_CORE_1_SECURITY_OFFSET ) ))
#define RCS_SCB_S_CORE_3_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_CORE_3_SECURITY_OFFSET ) ))
#define RCS_SCB_S_ROM_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_ROM_SECURITY_OFFSET ) ))
#define RCS_SCB_S_PHM_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_PHM_SECURITY_OFFSET ) ))
#define RCS_SCB_S_PHM1_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_PHM1_SECURITY_OFFSET ) ))
#define RCS_SCB_S_CORE_2_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_CORE_2_SECURITY_OFFSET ) ))
#define RCS_SCB_APB_BFN_GRP_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_APB_BFN_GRP_SECURITY_OFFSET ) ))
#define RCS_SCB_APB_RCS_GRP_SECURITY_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_APB_RCS_GRP_SECURITY_OFFSET ) ))
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_OFFSET ) ))
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_OFFSET ) ))
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_OFFSET ) ))
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_OFFSET ) ))
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_SECURE_BOOT_CFG_LOCK_OFFSET ) ))
#define RCS_SCB_PERIPH_ID4_ADR   (( ( RCS_SCB_BASE ) + ( RCS_SCB_PERIPH_ID4_OFFSET ) ))
#define RCS_SCB_PERIPH_ID5_ADR   (( ( RCS_SCB_BASE ) + ( RCS_SCB_PERIPH_ID5_OFFSET ) ))
#define RCS_SCB_PERIPH_ID6_ADR   (( ( RCS_SCB_BASE ) + ( RCS_SCB_PERIPH_ID6_OFFSET ) ))
#define RCS_SCB_PERIPH_ID7_ADR   (( ( RCS_SCB_BASE ) + ( RCS_SCB_PERIPH_ID7_OFFSET ) ))
#define RCS_SCB_PERIPH_ID0_ADR   (( ( RCS_SCB_BASE ) + ( RCS_SCB_PERIPH_ID0_OFFSET ) ))
#define RCS_SCB_PERIPH_ID1_ADR   (( ( RCS_SCB_BASE ) + ( RCS_SCB_PERIPH_ID1_OFFSET ) ))
#define RCS_SCB_PERIPH_ID2_ADR   (( ( RCS_SCB_BASE ) + ( RCS_SCB_PERIPH_ID2_OFFSET ) ))
#define RCS_SCB_PERIPH_ID3_ADR   (( ( RCS_SCB_BASE ) + ( RCS_SCB_PERIPH_ID3_OFFSET ) ))
#define RCS_SCB_COMP_ID0_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_COMP_ID0_OFFSET ) ))
#define RCS_SCB_COMP_ID1_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_COMP_ID1_OFFSET ) ))
#define RCS_SCB_COMP_ID2_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_COMP_ID2_OFFSET ) ))
#define RCS_SCB_COMP_ID3_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_COMP_ID3_OFFSET ) ))
#define RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD2_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_VEX_STRM_IB_FN_MOD2_OFFSET ) ))
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_VEX_STRM_IB_FN_MOD_OFFSET ) ))
#define RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_ROM_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_ROM_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_PHM_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_PHM_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_PHM1_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_PHM1_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_OFFSET ) ))
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_OFFSET ) ))
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_OFFSET ) ))
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_DMAC_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_CORE_0_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_CORE_1_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_CORE_3_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_CORE_2_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_OFFSET ) ))
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_OFFSET ) ))
#define RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_ADR (( ( RCS_SCB_BASE ) + ( RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief RCS_SCB_COM_REG_PERIPH_REMAP register description at address offset 0x0
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/periph_remap
  * Remap
  */

typedef union {
  struct {
    uint32_t REMAP : 8;
    ///< Remap Control
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_periph_remap_reg_t;

#define RCS_SCB_PERIPH_REMAP_DEFAULT (0x00000000U)
#define RCS_SCB_PERIPH_REMAP_RD_MASK (0x000000ffU)
#define RCS_SCB_PERIPH_REMAP_WR_MASK (0x000000ffU)


///< Remap Control
#define RCS_SCB_PERIPH_REMAP_BF_OFF ( 0)
#define RCS_SCB_PERIPH_REMAP_BF_WID ( 8)
#define RCS_SCB_PERIPH_REMAP_BF_MSK (0x000000FF)
#define RCS_SCB_PERIPH_REMAP_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_RSM_0_SECURITY register description at address offset 0x8
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_rsm_0_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_rsm_0_security_reg_t;

#define RCS_SCB_S_RSM_0_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_RSM_0_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_RSM_0_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_RSM_0_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_RSM_0_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_RSM_0_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_RSM_0_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_RSM_0_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_RSM_0_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_RSM_0_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_RSM_0_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_RSM_1_SECURITY register description at address offset 0xc
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_rsm_1_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_rsm_1_security_reg_t;

#define RCS_SCB_S_RSM_1_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_RSM_1_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_RSM_1_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_RSM_1_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_RSM_1_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_RSM_1_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_RSM_1_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_RSM_1_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_RSM_1_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_RSM_1_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_RSM_1_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_VEX_STRM_SECURITY register description at address offset 0x10
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_vex_strm_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_vex_strm_security_reg_t;

#define RCS_SCB_S_VEX_STRM_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_VEX_STRM_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_VEX_STRM_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_VEX_STRM_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_VEX_STRM_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_VEX_STRM_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_VEX_STRM_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_VEX_STRM_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_VEX_STRM_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_VEX_STRM_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_VEX_STRM_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_ORION_KP1_SECURITY register description at address offset 0x14
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_orion_kp1_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_orion_kp1_security_reg_t;

#define RCS_SCB_S_ORION_KP1_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_ORION_KP1_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_ORION_KP1_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_ORION_KP1_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_ORION_KP1_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_ORION_KP1_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_ORION_KP1_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_ORION_KP1_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_ORION_KP1_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_ORION_KP1_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_ORION_KP1_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_ORION_MAIN_SECURITY register description at address offset 0x18
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_orion_main_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_orion_main_security_reg_t;

#define RCS_SCB_S_ORION_MAIN_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_ORION_MAIN_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_ORION_MAIN_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_ORION_MAIN_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_ORION_MAIN_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_ORION_MAIN_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_ORION_MAIN_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_ORION_MAIN_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_ORION_MAIN_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_ORION_MAIN_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_ORION_MAIN_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_CORE_0_SECURITY register description at address offset 0x1c
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_core_0_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_core_0_security_reg_t;

#define RCS_SCB_S_CORE_0_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_CORE_0_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_CORE_0_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_CORE_0_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_CORE_0_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_CORE_0_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_CORE_0_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_CORE_0_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_CORE_0_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_CORE_0_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_CORE_0_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_CORE_1_SECURITY register description at address offset 0x20
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_core_1_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_core_1_security_reg_t;

#define RCS_SCB_S_CORE_1_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_CORE_1_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_CORE_1_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_CORE_1_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_CORE_1_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_CORE_1_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_CORE_1_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_CORE_1_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_CORE_1_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_CORE_1_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_CORE_1_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_CORE_3_SECURITY register description at address offset 0x24
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_core_3_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_core_3_security_reg_t;

#define RCS_SCB_S_CORE_3_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_CORE_3_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_CORE_3_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_CORE_3_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_CORE_3_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_CORE_3_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_CORE_3_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_CORE_3_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_CORE_3_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_CORE_3_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_CORE_3_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_ROM_SECURITY register description at address offset 0x28
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_rom_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_rom_security_reg_t;

#define RCS_SCB_S_ROM_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_ROM_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_ROM_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_ROM_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_ROM_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_ROM_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_ROM_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_ROM_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_ROM_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_ROM_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_ROM_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_PHM_SECURITY register description at address offset 0x2c
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_phm_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_phm_security_reg_t;

#define RCS_SCB_S_PHM_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_PHM_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_PHM_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_PHM_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_PHM_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_PHM_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_PHM_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_PHM_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_PHM_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_PHM_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_PHM_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_PHM1_SECURITY register description at address offset 0x30
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_phm1_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_phm1_security_reg_t;

#define RCS_SCB_S_PHM1_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_PHM1_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_PHM1_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_PHM1_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_PHM1_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_PHM1_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_PHM1_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_PHM1_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_PHM1_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_PHM1_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_PHM1_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_CORE_2_SECURITY register description at address offset 0x34
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/s_core_2_security
  * AMIB Security
  */

typedef union {
  struct {
    uint32_t FIELD : 1;
    ///< Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t RSVD : 15;
    ///< UNUSED
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_core_2_security_reg_t;

#define RCS_SCB_S_CORE_2_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_S_CORE_2_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_S_CORE_2_SECURITY_WR_MASK (0x0000ffffU)


///< Security
#define RCS_SCB_S_CORE_2_SECURITY_FIELD_BF_OFF ( 0)
#define RCS_SCB_S_CORE_2_SECURITY_FIELD_BF_WID ( 1)
#define RCS_SCB_S_CORE_2_SECURITY_FIELD_BF_MSK (0x00000001)
#define RCS_SCB_S_CORE_2_SECURITY_FIELD_BF_DEF (0x00000001)

///< UNUSED
#define RCS_SCB_S_CORE_2_SECURITY_RSVD_BF_OFF ( 1)
#define RCS_SCB_S_CORE_2_SECURITY_RSVD_BF_WID (15)
#define RCS_SCB_S_CORE_2_SECURITY_RSVD_BF_MSK (0x0000FFFE)
#define RCS_SCB_S_CORE_2_SECURITY_RSVD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_APB_BFN_GRP_SECURITY register description at address offset 0x38
  *
  * Register default value:        0x00000001
  * Register full path in IP: rcs_scb_com/reg/apb_bfn_grp_security
  * AMIB APB Security for BFN GRP
  */

typedef union {
  struct {
    uint32_t GPREG_BFN_CFG : 1;
    ///< Subordinate #1  Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t SPARE : 15;
    ///< Subordinate #0  Security
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_apb_bfn_grp_security_reg_t;

#define RCS_SCB_APB_BFN_GRP_SECURITY_DEFAULT (0x00000001U)
#define RCS_SCB_APB_BFN_GRP_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_APB_BFN_GRP_SECURITY_WR_MASK (0x0000ffffU)


///< Subordinate #1  Security
#define RCS_SCB_APB_BFN_GRP_SECURITY_GPREG_BFN_CFG_BF_OFF ( 0)
#define RCS_SCB_APB_BFN_GRP_SECURITY_GPREG_BFN_CFG_BF_WID ( 1)
#define RCS_SCB_APB_BFN_GRP_SECURITY_GPREG_BFN_CFG_BF_MSK (0x00000001)
#define RCS_SCB_APB_BFN_GRP_SECURITY_GPREG_BFN_CFG_BF_DEF (0x00000001)

///< Subordinate #0  Security
#define RCS_SCB_APB_BFN_GRP_SECURITY_SPARE_BF_OFF ( 1)
#define RCS_SCB_APB_BFN_GRP_SECURITY_SPARE_BF_WID (15)
#define RCS_SCB_APB_BFN_GRP_SECURITY_SPARE_BF_MSK (0x0000FFFE)
#define RCS_SCB_APB_BFN_GRP_SECURITY_SPARE_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_APB_RCS_GRP_SECURITY register description at address offset 0x3c
  *
  * Register default value:        0x0000017F
  * Register full path in IP: rcs_scb_com/reg/apb_rcs_grp_security
  * AMIB APB Security for APB blocks in clk_rcs group
  */

typedef union {
  struct {
    uint32_t GPREG_RCS : 1;
    ///< Subordinate Security
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x1"
    uint32_t DMAC_CFG : 1;
    ///< Subordinate Security
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x1"
    uint32_t FOVR_CFG : 1;
    ///< Subordinate  Security
    ///< AccessType="RW/L" BitOffset="2" ResetValue="0x1"
    uint32_t SSP_0 : 1;
    ///< Subordinate Security
    ///< AccessType="RW/L" BitOffset="3" ResetValue="0x1"
    uint32_t I3CM_0 : 1;
    ///< Subordinate Security
    ///< AccessType="RW/L" BitOffset="4" ResetValue="0x1"
    uint32_t CRUX_CFG : 1;
    ///< Subordinate Security
    ///< AccessType="RW/L" BitOffset="5" ResetValue="0x1"
    uint32_t AXI2ED_LOGGER : 1;
    ///< Subordinate Security
    ///< AccessType="RW/L" BitOffset="6" ResetValue="0x1"
    uint32_t SCB_CFG : 1;
    ///< Subordinate Security
    ///< AccessType="RW/L" BitOffset="7" ResetValue="0x0"
    uint32_t FOVR1_CFG : 1;
    ///< Subordinate Security
    ///< AccessType="RW/L" BitOffset="8" ResetValue="0x1"
    uint32_t SPARE : 7;
    ///< Subordinate Security
    ///< AccessType="RW/L" BitOffset="9" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_apb_rcs_grp_security_reg_t;

#define RCS_SCB_APB_RCS_GRP_SECURITY_DEFAULT (0x0000017fU)
#define RCS_SCB_APB_RCS_GRP_SECURITY_RD_MASK (0x0000ffffU)
#define RCS_SCB_APB_RCS_GRP_SECURITY_WR_MASK (0x0000ffffU)


///< Subordinate Security
#define RCS_SCB_APB_RCS_GRP_SECURITY_GPREG_RCS_BF_OFF ( 0)
#define RCS_SCB_APB_RCS_GRP_SECURITY_GPREG_RCS_BF_WID ( 1)
#define RCS_SCB_APB_RCS_GRP_SECURITY_GPREG_RCS_BF_MSK (0x00000001)
#define RCS_SCB_APB_RCS_GRP_SECURITY_GPREG_RCS_BF_DEF (0x00000001)

///< Subordinate Security
#define RCS_SCB_APB_RCS_GRP_SECURITY_DMAC_CFG_BF_OFF ( 1)
#define RCS_SCB_APB_RCS_GRP_SECURITY_DMAC_CFG_BF_WID ( 1)
#define RCS_SCB_APB_RCS_GRP_SECURITY_DMAC_CFG_BF_MSK (0x00000002)
#define RCS_SCB_APB_RCS_GRP_SECURITY_DMAC_CFG_BF_DEF (0x00000002)

///< Subordinate  Security
#define RCS_SCB_APB_RCS_GRP_SECURITY_FOVR_CFG_BF_OFF ( 2)
#define RCS_SCB_APB_RCS_GRP_SECURITY_FOVR_CFG_BF_WID ( 1)
#define RCS_SCB_APB_RCS_GRP_SECURITY_FOVR_CFG_BF_MSK (0x00000004)
#define RCS_SCB_APB_RCS_GRP_SECURITY_FOVR_CFG_BF_DEF (0x00000004)

///< Subordinate Security
#define RCS_SCB_APB_RCS_GRP_SECURITY_SSP_0_BF_OFF ( 3)
#define RCS_SCB_APB_RCS_GRP_SECURITY_SSP_0_BF_WID ( 1)
#define RCS_SCB_APB_RCS_GRP_SECURITY_SSP_0_BF_MSK (0x00000008)
#define RCS_SCB_APB_RCS_GRP_SECURITY_SSP_0_BF_DEF (0x00000008)

///< Subordinate Security
#define RCS_SCB_APB_RCS_GRP_SECURITY_I3CM_0_BF_OFF ( 4)
#define RCS_SCB_APB_RCS_GRP_SECURITY_I3CM_0_BF_WID ( 1)
#define RCS_SCB_APB_RCS_GRP_SECURITY_I3CM_0_BF_MSK (0x00000010)
#define RCS_SCB_APB_RCS_GRP_SECURITY_I3CM_0_BF_DEF (0x00000010)

///< Subordinate Security
#define RCS_SCB_APB_RCS_GRP_SECURITY_CRUX_CFG_BF_OFF ( 5)
#define RCS_SCB_APB_RCS_GRP_SECURITY_CRUX_CFG_BF_WID ( 1)
#define RCS_SCB_APB_RCS_GRP_SECURITY_CRUX_CFG_BF_MSK (0x00000020)
#define RCS_SCB_APB_RCS_GRP_SECURITY_CRUX_CFG_BF_DEF (0x00000020)

///< Subordinate Security
#define RCS_SCB_APB_RCS_GRP_SECURITY_AXI2ED_LOGGER_BF_OFF ( 6)
#define RCS_SCB_APB_RCS_GRP_SECURITY_AXI2ED_LOGGER_BF_WID ( 1)
#define RCS_SCB_APB_RCS_GRP_SECURITY_AXI2ED_LOGGER_BF_MSK (0x00000040)
#define RCS_SCB_APB_RCS_GRP_SECURITY_AXI2ED_LOGGER_BF_DEF (0x00000040)

///< Subordinate Security
#define RCS_SCB_APB_RCS_GRP_SECURITY_SCB_CFG_BF_OFF ( 7)
#define RCS_SCB_APB_RCS_GRP_SECURITY_SCB_CFG_BF_WID ( 1)
#define RCS_SCB_APB_RCS_GRP_SECURITY_SCB_CFG_BF_MSK (0x00000080)
#define RCS_SCB_APB_RCS_GRP_SECURITY_SCB_CFG_BF_DEF (0x00000000)

///< Subordinate Security
#define RCS_SCB_APB_RCS_GRP_SECURITY_FOVR1_CFG_BF_OFF ( 8)
#define RCS_SCB_APB_RCS_GRP_SECURITY_FOVR1_CFG_BF_WID ( 1)
#define RCS_SCB_APB_RCS_GRP_SECURITY_FOVR1_CFG_BF_MSK (0x00000100)
#define RCS_SCB_APB_RCS_GRP_SECURITY_FOVR1_CFG_BF_DEF (0x00000100)

///< Subordinate Security
#define RCS_SCB_APB_RCS_GRP_SECURITY_SPARE_BF_OFF ( 9)
#define RCS_SCB_APB_RCS_GRP_SECURITY_SPARE_BF_WID ( 7)
#define RCS_SCB_APB_RCS_GRP_SECURITY_SPARE_BF_MSK (0x0000FE00)
#define RCS_SCB_APB_RCS_GRP_SECURITY_SPARE_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_AXI2SER_NONSECURE_ACCESS_31_0 register description at address offset 0x800
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/axi2ser_nonsecure_access_31_0
  * Bits 31 down to 0 of axi2ser secure access signal
  */

typedef union {
  struct {
    uint32_t AXI2SER_NONSECURE_ACCESS : 32;
    ///< 32 bits of axi2ser_secure_access signal, it is inverted at output.
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} rcs_scb_axi2ser_nonsecure_access_31_0_reg_t;

#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_DEFAULT (0x00000000U)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_RD_MASK (0xffffffffU)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_WR_MASK (0xffffffffU)


///< 32 bits of axi2ser_secure_access signal, it is inverted at output.
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_AXI2SER_NONSECURE_ACCESS_BF_OFF ( 0)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_AXI2SER_NONSECURE_ACCESS_BF_WID (32)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_AXI2SER_NONSECURE_ACCESS_BF_MSK (0xFFFFFFFF)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_AXI2SER_NONSECURE_ACCESS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_AXI2SER_NONSECURE_ACCESS_63_32 register description at address offset 0x804
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/axi2ser_nonsecure_access_63_32
  * Bits 63 down to 32 of axi2ser secure access signal
  */

typedef union {
  struct {
    uint32_t AXI2SER_NONSECURE_ACCESS : 32;
    ///< 32 bits of axi2ser_secure_access signal, it is inverted at output.
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} rcs_scb_axi2ser_nonsecure_access_63_32_reg_t;

#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_DEFAULT (0x00000000U)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_RD_MASK (0xffffffffU)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_WR_MASK (0xffffffffU)


///< 32 bits of axi2ser_secure_access signal, it is inverted at output.
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_AXI2SER_NONSECURE_ACCESS_BF_OFF ( 0)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_AXI2SER_NONSECURE_ACCESS_BF_WID (32)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_AXI2SER_NONSECURE_ACCESS_BF_MSK (0xFFFFFFFF)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_AXI2SER_NONSECURE_ACCESS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_AXI2SER_NONSECURE_ACCESS_95_64 register description at address offset 0x808
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/axi2ser_nonsecure_access_95_64
  * Bits 95 downto 64 of axi2ser_secure_access signal, inverted
  */

typedef union {
  struct {
    uint32_t AXI2SER_NONSECURE_ACCESS : 32;
    ///< 32 bits of axi2ser_secure_access signal, it is inverted at output.
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} rcs_scb_axi2ser_nonsecure_access_95_64_reg_t;

#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_DEFAULT (0x00000000U)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_RD_MASK (0xffffffffU)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_WR_MASK (0xffffffffU)


///< 32 bits of axi2ser_secure_access signal, it is inverted at output.
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_AXI2SER_NONSECURE_ACCESS_BF_OFF ( 0)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_AXI2SER_NONSECURE_ACCESS_BF_WID (32)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_AXI2SER_NONSECURE_ACCESS_BF_MSK (0xFFFFFFFF)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_AXI2SER_NONSECURE_ACCESS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_AXI2SER_NONSECURE_ACCESS_127_96 register description at address offset 0x80c
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/axi2ser_nonsecure_access_127_96
  * Bits 127 down to 96 of axi2ser secure access signal
  */

typedef union {
  struct {
    uint32_t AXI2SER_NONSECURE_ACCESS : 32;
    ///< 32 bits of axi2ser_secure_access signal, it is inverted at output.
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} rcs_scb_axi2ser_nonsecure_access_127_96_reg_t;

#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_DEFAULT (0x00000000U)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_RD_MASK (0xffffffffU)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_WR_MASK (0xffffffffU)


///< 32 bits of axi2ser_secure_access signal, it is inverted at output.
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_AXI2SER_NONSECURE_ACCESS_BF_OFF ( 0)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_AXI2SER_NONSECURE_ACCESS_BF_WID (32)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_AXI2SER_NONSECURE_ACCESS_BF_MSK (0xFFFFFFFF)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_AXI2SER_NONSECURE_ACCESS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_SECURE_BOOT_CFG_LOCK register description at address offset 0x900
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/secure_boot_cfg_lock
  * Boot config lock bits
  */

typedef union {
  struct {
    uint32_t SCB_CFG_LOCK : 1;
    ///< When set the remap, amib_security[n], axi2ser_nonsecure_access, and
    ///< asib_axprot registers cannot be written to.
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x0"
    uint32_t RSVD0 : 1;
    ///< These bits are currantly unconnected.
    ///< AccessType="RW/L" BitOffset="1" ResetValue="0x0"
    uint32_t RSVD1 : 1;
    ///< These bits are currantly unconnected.
    ///< AccessType="RW/L" BitOffset="2" ResetValue="0x0"
    uint32_t RSVD2 : 1;
    ///< These bits are currantly unconnected.
    ///< AccessType="RW/L" BitOffset="3" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_secure_boot_cfg_lock_reg_t;

#define RCS_SCB_SECURE_BOOT_CFG_LOCK_DEFAULT (0x00000000U)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RD_MASK (0x0000000fU)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_WR_MASK (0x0000000fU)


///< When set the remap, amib_security[n], axi2ser_nonsecure_access, and
///< asib_axprot registers cannot be written to.
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_SCB_CFG_LOCK_BF_OFF ( 0)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_SCB_CFG_LOCK_BF_WID ( 1)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_SCB_CFG_LOCK_BF_MSK (0x00000001)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_SCB_CFG_LOCK_BF_DEF (0x00000000)

///< These bits are currantly unconnected.
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD0_BF_OFF ( 1)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD0_BF_WID ( 1)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD0_BF_MSK (0x00000002)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD0_BF_DEF (0x00000000)

///< These bits are currantly unconnected.
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD1_BF_OFF ( 2)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD1_BF_WID ( 1)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD1_BF_MSK (0x00000004)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD1_BF_DEF (0x00000000)

///< These bits are currantly unconnected.
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD2_BF_OFF ( 3)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD2_BF_WID ( 1)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD2_BF_MSK (0x00000008)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_RSVD2_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_PERIPH_ID4 register description at address offset 0x1fd0
  *
  * Register default value:        0x00000004
  * Register full path in IP: rcs_scb_com/reg/periph_id4
  * Periph ID4
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Periph ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x4"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_periph_id4_reg_t;

#define RCS_SCB_PERIPH_ID4_DEFAULT (0x00000004U)
#define RCS_SCB_PERIPH_ID4_RD_MASK (0x000000ffU)
#define RCS_SCB_PERIPH_ID4_WR_MASK (0x00000000U)


///< Periph ID
#define RCS_SCB_PERIPH_ID4_FIELD_BF_OFF ( 0)
#define RCS_SCB_PERIPH_ID4_FIELD_BF_WID ( 8)
#define RCS_SCB_PERIPH_ID4_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_PERIPH_ID4_FIELD_BF_DEF (0x00000004)


/** @brief RCS_SCB_COM_REG_PERIPH_ID5 register description at address offset 0x1fd4
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/periph_id5
  * Periph ID5
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Periph ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_periph_id5_reg_t;

#define RCS_SCB_PERIPH_ID5_DEFAULT (0x00000000U)
#define RCS_SCB_PERIPH_ID5_RD_MASK (0x000000ffU)
#define RCS_SCB_PERIPH_ID5_WR_MASK (0x00000000U)


///< Periph ID
#define RCS_SCB_PERIPH_ID5_FIELD_BF_OFF ( 0)
#define RCS_SCB_PERIPH_ID5_FIELD_BF_WID ( 8)
#define RCS_SCB_PERIPH_ID5_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_PERIPH_ID5_FIELD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_PERIPH_ID6 register description at address offset 0x1fd8
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/periph_id6
  * Periph ID6
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Periph ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_periph_id6_reg_t;

#define RCS_SCB_PERIPH_ID6_DEFAULT (0x00000000U)
#define RCS_SCB_PERIPH_ID6_RD_MASK (0x000000ffU)
#define RCS_SCB_PERIPH_ID6_WR_MASK (0x00000000U)


///< Periph ID
#define RCS_SCB_PERIPH_ID6_FIELD_BF_OFF ( 0)
#define RCS_SCB_PERIPH_ID6_FIELD_BF_WID ( 8)
#define RCS_SCB_PERIPH_ID6_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_PERIPH_ID6_FIELD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_PERIPH_ID7 register description at address offset 0x1fdc
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/periph_id7
  * Periph ID7
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Periph ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_periph_id7_reg_t;

#define RCS_SCB_PERIPH_ID7_DEFAULT (0x00000000U)
#define RCS_SCB_PERIPH_ID7_RD_MASK (0x000000ffU)
#define RCS_SCB_PERIPH_ID7_WR_MASK (0x00000000U)


///< Periph ID
#define RCS_SCB_PERIPH_ID7_FIELD_BF_OFF ( 0)
#define RCS_SCB_PERIPH_ID7_FIELD_BF_WID ( 8)
#define RCS_SCB_PERIPH_ID7_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_PERIPH_ID7_FIELD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_PERIPH_ID0 register description at address offset 0x1fe0
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/periph_id0
  * Periph ID0
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Periph ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_periph_id0_reg_t;

#define RCS_SCB_PERIPH_ID0_DEFAULT (0x00000000U)
#define RCS_SCB_PERIPH_ID0_RD_MASK (0x000000ffU)
#define RCS_SCB_PERIPH_ID0_WR_MASK (0x00000000U)


///< Periph ID
#define RCS_SCB_PERIPH_ID0_FIELD_BF_OFF ( 0)
#define RCS_SCB_PERIPH_ID0_FIELD_BF_WID ( 8)
#define RCS_SCB_PERIPH_ID0_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_PERIPH_ID0_FIELD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_PERIPH_ID1 register description at address offset 0x1fe4
  *
  * Register default value:        0x000000B4
  * Register full path in IP: rcs_scb_com/reg/periph_id1
  * Periph ID1
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Periph ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0xB4"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_periph_id1_reg_t;

#define RCS_SCB_PERIPH_ID1_DEFAULT (0x000000b4U)
#define RCS_SCB_PERIPH_ID1_RD_MASK (0x000000ffU)
#define RCS_SCB_PERIPH_ID1_WR_MASK (0x00000000U)


///< Periph ID
#define RCS_SCB_PERIPH_ID1_FIELD_BF_OFF ( 0)
#define RCS_SCB_PERIPH_ID1_FIELD_BF_WID ( 8)
#define RCS_SCB_PERIPH_ID1_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_PERIPH_ID1_FIELD_BF_DEF (0x000000B4)


/** @brief RCS_SCB_COM_REG_PERIPH_ID2 register description at address offset 0x1fe8
  *
  * Register default value:        0x0000006B
  * Register full path in IP: rcs_scb_com/reg/periph_id2
  * Periph ID2
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Periph ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x6B"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_periph_id2_reg_t;

#define RCS_SCB_PERIPH_ID2_DEFAULT (0x0000006bU)
#define RCS_SCB_PERIPH_ID2_RD_MASK (0x000000ffU)
#define RCS_SCB_PERIPH_ID2_WR_MASK (0x00000000U)


///< Periph ID
#define RCS_SCB_PERIPH_ID2_FIELD_BF_OFF ( 0)
#define RCS_SCB_PERIPH_ID2_FIELD_BF_WID ( 8)
#define RCS_SCB_PERIPH_ID2_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_PERIPH_ID2_FIELD_BF_DEF (0x0000006B)


/** @brief RCS_SCB_COM_REG_PERIPH_ID3 register description at address offset 0x1fec
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/periph_id3
  * Periph ID3
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Periph ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_periph_id3_reg_t;

#define RCS_SCB_PERIPH_ID3_DEFAULT (0x00000000U)
#define RCS_SCB_PERIPH_ID3_RD_MASK (0x000000ffU)
#define RCS_SCB_PERIPH_ID3_WR_MASK (0x00000000U)


///< Periph ID
#define RCS_SCB_PERIPH_ID3_FIELD_BF_OFF ( 0)
#define RCS_SCB_PERIPH_ID3_FIELD_BF_WID ( 8)
#define RCS_SCB_PERIPH_ID3_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_PERIPH_ID3_FIELD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_COMPONENT_ID0 register description at address offset 0x1ff0
  *
  * Register default value:        0x0000000D
  * Register full path in IP: rcs_scb_com/reg/component_id0
  * Component ID0
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Component ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0xD"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_comp_id0_reg_t;

#define RCS_SCB_COMP_ID0_DEFAULT (0x0000000dU)
#define RCS_SCB_COMP_ID0_RD_MASK (0x000000ffU)
#define RCS_SCB_COMP_ID0_WR_MASK (0x00000000U)


///< Component ID
#define RCS_SCB_COMP_ID0_FIELD_BF_OFF ( 0)
#define RCS_SCB_COMP_ID0_FIELD_BF_WID ( 8)
#define RCS_SCB_COMP_ID0_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_COMP_ID0_FIELD_BF_DEF (0x0000000D)


/** @brief RCS_SCB_COM_REG_COMPONENT_ID1 register description at address offset 0x1ff4
  *
  * Register default value:        0x000000F0
  * Register full path in IP: rcs_scb_com/reg/component_id1
  * Component ID1
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Component ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0xF0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_comp_id1_reg_t;

#define RCS_SCB_COMP_ID1_DEFAULT (0x000000f0U)
#define RCS_SCB_COMP_ID1_RD_MASK (0x000000ffU)
#define RCS_SCB_COMP_ID1_WR_MASK (0x00000000U)


///< Component ID
#define RCS_SCB_COMP_ID1_FIELD_BF_OFF ( 0)
#define RCS_SCB_COMP_ID1_FIELD_BF_WID ( 8)
#define RCS_SCB_COMP_ID1_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_COMP_ID1_FIELD_BF_DEF (0x000000F0)


/** @brief RCS_SCB_COM_REG_COMPONENT_ID2 register description at address offset 0x1ff8
  *
  * Register default value:        0x00000005
  * Register full path in IP: rcs_scb_com/reg/component_id2
  * Component ID2
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Component ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x5"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_comp_id2_reg_t;

#define RCS_SCB_COMP_ID2_DEFAULT (0x00000005U)
#define RCS_SCB_COMP_ID2_RD_MASK (0x000000ffU)
#define RCS_SCB_COMP_ID2_WR_MASK (0x00000000U)


///< Component ID
#define RCS_SCB_COMP_ID2_FIELD_BF_OFF ( 0)
#define RCS_SCB_COMP_ID2_FIELD_BF_WID ( 8)
#define RCS_SCB_COMP_ID2_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_COMP_ID2_FIELD_BF_DEF (0x00000005)


/** @brief RCS_SCB_COM_REG_COMPONENT_ID3 register description at address offset 0x1ffc
  *
  * Register default value:        0x000000B1
  * Register full path in IP: rcs_scb_com/reg/component_id3
  * Component ID3
  */

typedef union {
  struct {
    uint32_t FIELD : 8;
    ///< Component ID
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0xB1"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_comp_id3_reg_t;

#define RCS_SCB_COMP_ID3_DEFAULT (0x000000b1U)
#define RCS_SCB_COMP_ID3_RD_MASK (0x000000ffU)
#define RCS_SCB_COMP_ID3_WR_MASK (0x00000000U)


///< Component ID
#define RCS_SCB_COMP_ID3_FIELD_BF_OFF ( 0)
#define RCS_SCB_COMP_ID3_FIELD_BF_WID ( 8)
#define RCS_SCB_COMP_ID3_FIELD_BF_MSK (0x000000FF)
#define RCS_SCB_COMP_ID3_FIELD_BF_DEF (0x000000B1)


/** @brief RCS_SCB_COM_REG_S_RSM_0_FN_MOD_ISS_BM register description at address offset 0x2008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_rsm_0_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_rsm_0_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_RSM_1_FN_MOD_ISS_BM register description at address offset 0x3008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_rsm_1_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_rsm_1_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_VEX_STRM_IB_FN_MOD_ISS_BM register description at address offset 0x4008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_vex_strm_ib_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_vex_strm_ib_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_VEX_STRM_IB_FN_MOD2 register description at address offset 0x4024
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_vex_strm_ib_fn_mod2
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t BYPASS_MERGE : 1;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_vex_strm_ib_fn_mod2_reg_t;

#define RCS_SCB_S_VEX_STRM_IB_FN_MOD2_DEFAULT (0x00000000U)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD2_RD_MASK (0x00000001U)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD2_WR_MASK (0x00000001U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD2_BYP_MERGE_BF_OFF ( 0)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD2_BYP_MERGE_BF_WID ( 1)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD2_BYP_MERGE_BF_MSK (0x00000001)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD2_BYP_MERGE_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_VEX_STRM_IB_FN_MOD register description at address offset 0x4108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_vex_strm_ib_fn_mod
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_vex_strm_ib_fn_mod_reg_t;

#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_FN_MOD_BF_OFF ( 0)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_FN_MOD_BF_WID ( 2)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_FN_MOD_BF_MSK (0x00000003)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_FN_MOD_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_ORION_KP1_FN_MOD_ISS_BM register description at address offset 0x5008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_orion_kp1_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_orion_kp1_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_ORION_MAIN_FN_MOD_ISS_BM register description at address offset 0x6008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_orion_main_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_orion_main_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_CORE_0_FN_MOD_ISS_BM register description at address offset 0x7008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_core_0_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_core_0_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_CORE_1_FN_MOD_ISS_BM register description at address offset 0x8008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_core_1_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_core_1_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_CORE_3_FN_MOD_ISS_BM register description at address offset 0x9008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_core_3_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_core_3_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_ROM_FN_MOD_ISS_BM register description at address offset 0xa008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_rom_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_rom_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_ROM_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_ROM_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_ROM_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_ROM_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_ROM_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_ROM_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_ROM_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_PHM_FN_MOD_ISS_BM register description at address offset 0xb008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_phm_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_phm_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_PHM_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_PHM_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_PHM_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_PHM_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_PHM_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_PHM_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_PHM_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_PHM1_FN_MOD_ISS_BM register description at address offset 0xc008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_phm1_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_phm1_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_PHM1_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_PHM1_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_PHM1_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_PHM1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_PHM1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_PHM1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_PHM1_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_S_CORE_2_FN_MOD_ISS_BM register description at address offset 0xd008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/s_core_2_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_s_core_2_fn_mod_iss_bm_reg_t;

#define RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_APB_BFN_GROUP_IB_FN_MOD_ISS_BM register description at address offset 0xe008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/apb_bfn_group_ib_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_apb_bfn_grp_ib_fn_mod_iss_bm_reg_t;

#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_APB_BFN_GROUP_IB_FN_MOD2 register description at address offset 0xe024
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/apb_bfn_group_ib_fn_mod2
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t BYPASS_MERGE : 1;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_apb_bfn_grp_ib_fn_mod2_reg_t;

#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_DEFAULT (0x00000000U)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_RD_MASK (0x00000001U)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_WR_MASK (0x00000001U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_BYP_MERGE_BF_OFF ( 0)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_BYP_MERGE_BF_WID ( 1)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_BYP_MERGE_BF_MSK (0x00000001)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_BYP_MERGE_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_APB_RCS_GROUP_IB_FN_MOD_ISS_BM register description at address offset 0xf008
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/apb_rcs_group_ib_fn_mod_iss_bm
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t FN_MOD_ISS_BM : 2;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_apb_rcs_grp_ib_fn_mod_iss_bm_reg_t;

#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_DEFAULT (0x00000000U)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_RD_MASK (0x00000003U)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_WR_MASK (0x00000003U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_OFF ( 0)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_WID ( 2)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_MSK (0x00000003)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_FN_MOD_ISS_BM_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_APB_RCS_GROUP_IB_FN_MOD2 register description at address offset 0xf024
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/apb_rcs_group_ib_fn_mod2
  * AMIB Func Modification
  */

typedef union {
  struct {
    uint32_t BYPASS_MERGE : 1;
    ///< The register bits are active high and have the following purpose:
    ///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_apb_rcs_grp_ib_fn_mod2_reg_t;

#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_DEFAULT (0x00000000U)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_RD_MASK (0x00000001U)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_WR_MASK (0x00000001U)


///< The register bits are active high and have the following purpose:
///< 0 Read issuing, read_iss_override.  1 Write issuing, write_iss_override
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_BYP_MERGE_BF_OFF ( 0)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_BYP_MERGE_BF_WID ( 1)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_BYP_MERGE_BF_MSK (0x00000001)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_BYP_MERGE_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_DMAC_ASIB_FN_MOD register description at address offset 0x42108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_dmac_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_dmac_asib_fn_mod_reg_t;

#define RCS_SCB_M_DMAC_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_DMAC_ASIB_AXPROT_OVERRIDE register description at address offset 0x42800
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_dmac_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_dmac_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_DEFAULT (0x00000000U)
#define RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_ORION_RSM_ASIB_FN_MOD register description at address offset 0x43108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_orion_rsm_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_orion_rsm_asib_fn_mod_reg_t;

#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_ORION_RSM_ASIB_AXPROT_OVERRIDE register description at address offset 0x43800
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_orion_rsm_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_orion_rsm_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_DEFAULT (0x00000000U)
#define RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_SSPDMA_0_ASIB_FN_MOD register description at address offset 0x44108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_sspdma_0_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_sspdma_0_asib_fn_mod_reg_t;

#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_SSPDMA_0_ASIB_AXPROT_OVERRIDE register description at address offset 0x44800
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_sspdma_0_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_sspdma_0_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_DEFAULT (0x00000000U)
#define RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_CORE_0_ASIB_FN_MOD register description at address offset 0x45108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_core_0_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_core_0_asib_fn_mod_reg_t;

#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_CORE_0_ASIB_AXPROT_OVERRIDE register description at address offset 0x45800
  *
  * Register default value:        0x00000002
  * Register full path in IP: rcs_scb_com/reg/m_core_0_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x2"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_core_0_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_DEFAULT (0x00000002U)
#define RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000002)


/** @brief RCS_SCB_COM_REG_M_CORE_1_ASIB_FN_MOD register description at address offset 0x46108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_core_1_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_core_1_asib_fn_mod_reg_t;

#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_CORE_1_ASIB_AXPROT_OVERRIDE register description at address offset 0x46800
  *
  * Register default value:        0x00000002
  * Register full path in IP: rcs_scb_com/reg/m_core_1_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x2"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_core_1_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_DEFAULT (0x00000002U)
#define RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000002)


/** @brief RCS_SCB_COM_REG_M_CORE_3_ASIB_FN_MOD register description at address offset 0x47108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_core_3_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_core_3_asib_fn_mod_reg_t;

#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_CORE_3_ASIB_AXPROT_OVERRIDE register description at address offset 0x47800
  *
  * Register default value:        0x00000002
  * Register full path in IP: rcs_scb_com/reg/m_core_3_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x2"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_core_3_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_DEFAULT (0x00000002U)
#define RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000002)


/** @brief RCS_SCB_COM_REG_M_ORION_MAIN_ASIB_FN_MOD register description at address offset 0x48108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_orion_main_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_orion_main_asib_fn_mod_reg_t;

#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_ORION_MAIN_ASIB_AXPROT_OVERRIDE register description at address offset 0x48800
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_orion_main_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_orion_main_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_DEFAULT (0x00000000U)
#define RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_DMA_CORE_0_ASIB_FN_MOD register description at address offset 0x49108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_dma_core_0_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_dma_core_0_asib_fn_mod_reg_t;

#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_DMA_CORE_0_ASIB_AXPROT_OVERRIDE register description at address offset 0x49800
  *
  * Register default value:        0x00000002
  * Register full path in IP: rcs_scb_com/reg/m_dma_core_0_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x2"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_dma_core_0_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_DEFAULT (0x00000002U)
#define RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000002)


/** @brief RCS_SCB_COM_REG_M_DMA_CORE_1_ASIB_FN_MOD register description at address offset 0x4a108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_dma_core_1_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_dma_core_1_asib_fn_mod_reg_t;

#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_DMA_CORE_1_ASIB_AXPROT_OVERRIDE register description at address offset 0x4a800
  *
  * Register default value:        0x00000002
  * Register full path in IP: rcs_scb_com/reg/m_dma_core_1_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x2"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_dma_core_1_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_DEFAULT (0x00000002U)
#define RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000002)


/** @brief RCS_SCB_COM_REG_M_DMA_CORE_3_ASIB_FN_MOD register description at address offset 0x4b108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_dma_core_3_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_dma_core_3_asib_fn_mod_reg_t;

#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_DMA_CORE_3_ASIB_AXPROT_OVERRIDE register description at address offset 0x4b800
  *
  * Register default value:        0x00000002
  * Register full path in IP: rcs_scb_com/reg/m_dma_core_3_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x2"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_dma_core_3_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_DEFAULT (0x00000002U)
#define RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000002)


/** @brief RCS_SCB_COM_REG_M_CORE_2_ASIB_FN_MOD register description at address offset 0x4c108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_core_2_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_core_2_asib_fn_mod_reg_t;

#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_CORE_2_ASIB_AXPROT_OVERRIDE register description at address offset 0x4c800
  *
  * Register default value:        0x00000002
  * Register full path in IP: rcs_scb_com/reg/m_core_2_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x2"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_core_2_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_DEFAULT (0x00000002U)
#define RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000002)


/** @brief RCS_SCB_COM_REG_M_DMA_CORE_2_ASIB_FN_MOD register description at address offset 0x4d108
  *
  * Register default value:        0x00000000
  * Register full path in IP: rcs_scb_com/reg/m_dma_core_2_asib_fn_mod
  * Functionality Modification
  */

typedef union {
  struct {
    uint32_t RD_ISS : 1;
    ///< Read Issuing Override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t WR_ISS : 1;
    ///< Write Issuing Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_dma_core_2_asib_fn_mod_reg_t;

#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_DEFAULT (0x00000000U)
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_RD_MASK (0x00000003U)
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_WR_MASK (0x00000003U)


///< Read Issuing Override
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_RD_ISS_BF_OFF ( 0)
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_RD_ISS_BF_WID ( 1)
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_RD_ISS_BF_MSK (0x00000001)
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_RD_ISS_BF_DEF (0x00000000)

///< Write Issuing Override
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_WR_ISS_BF_OFF ( 1)
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_WR_ISS_BF_WID ( 1)
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_WR_ISS_BF_MSK (0x00000002)
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_WR_ISS_BF_DEF (0x00000000)


/** @brief RCS_SCB_COM_REG_M_DMA_CORE_2_ASIB_AXPROT_OVERRIDE register description at address offset 0x4d800
  *
  * Register default value:        0x00000002
  * Register full path in IP: rcs_scb_com/reg/m_dma_core_2_asib_axprot_override
  * ASIB AxPROT bus override
  */

typedef union {
  struct {
    uint32_t AXPROT : 2;
    ///< AxPROT Override setting
    ///< AccessType="RW/L" BitOffset="0" ResetValue="0x2"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} rcs_scb_m_dma_core_2_asib_axprot_ovrd_reg_t;

#define RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_DEFAULT (0x00000002U)
#define RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_RD_MASK (0x00000003U)
#define RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_WR_MASK (0x00000003U)


///< AxPROT Override setting
#define RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_AXPROT_BF_OFF ( 0)
#define RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_AXPROT_BF_WID ( 2)
#define RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_AXPROT_BF_MSK (0x00000003)
#define RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_AXPROT_BF_DEF (0x00000002)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define RCS_SCB_PERIPH_REMAP_REG ((rcs_scb_periph_remap_reg_t*) RCS_SCB_PERIPH_REMAP_ADR)
#define RCS_SCB_S_RSM_0_SECURITY_REG ((rcs_scb_s_rsm_0_security_reg_t*) RCS_SCB_S_RSM_0_SECURITY_ADR)
#define RCS_SCB_S_RSM_1_SECURITY_REG ((rcs_scb_s_rsm_1_security_reg_t*) RCS_SCB_S_RSM_1_SECURITY_ADR)
#define RCS_SCB_S_VEX_STRM_SECURITY_REG ((rcs_scb_s_vex_strm_security_reg_t*) RCS_SCB_S_VEX_STRM_SECURITY_ADR)
#define RCS_SCB_S_ORION_KP1_SECURITY_REG ((rcs_scb_s_orion_kp1_security_reg_t*) RCS_SCB_S_ORION_KP1_SECURITY_ADR)
#define RCS_SCB_S_ORION_MAIN_SECURITY_REG ((rcs_scb_s_orion_main_security_reg_t*) RCS_SCB_S_ORION_MAIN_SECURITY_ADR)
#define RCS_SCB_S_CORE_0_SECURITY_REG ((rcs_scb_s_core_0_security_reg_t*) RCS_SCB_S_CORE_0_SECURITY_ADR)
#define RCS_SCB_S_CORE_1_SECURITY_REG ((rcs_scb_s_core_1_security_reg_t*) RCS_SCB_S_CORE_1_SECURITY_ADR)
#define RCS_SCB_S_CORE_3_SECURITY_REG ((rcs_scb_s_core_3_security_reg_t*) RCS_SCB_S_CORE_3_SECURITY_ADR)
#define RCS_SCB_S_ROM_SECURITY_REG ((rcs_scb_s_rom_security_reg_t*) RCS_SCB_S_ROM_SECURITY_ADR)
#define RCS_SCB_S_PHM_SECURITY_REG ((rcs_scb_s_phm_security_reg_t*) RCS_SCB_S_PHM_SECURITY_ADR)
#define RCS_SCB_S_PHM1_SECURITY_REG ((rcs_scb_s_phm1_security_reg_t*) RCS_SCB_S_PHM1_SECURITY_ADR)
#define RCS_SCB_S_CORE_2_SECURITY_REG ((rcs_scb_s_core_2_security_reg_t*) RCS_SCB_S_CORE_2_SECURITY_ADR)
#define RCS_SCB_APB_BFN_GRP_SECURITY_REG ((rcs_scb_apb_bfn_grp_security_reg_t*) RCS_SCB_APB_BFN_GRP_SECURITY_ADR)
#define RCS_SCB_APB_RCS_GRP_SECURITY_REG ((rcs_scb_apb_rcs_grp_security_reg_t*) RCS_SCB_APB_RCS_GRP_SECURITY_ADR)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_REG ((rcs_scb_axi2ser_nonsecure_access_31_0_reg_t*) RCS_SCB_AXI2SER_NONSECURE_ACCESS_31_0_ADR)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_REG ((rcs_scb_axi2ser_nonsecure_access_63_32_reg_t*) RCS_SCB_AXI2SER_NONSECURE_ACCESS_63_32_ADR)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_REG ((rcs_scb_axi2ser_nonsecure_access_95_64_reg_t*) RCS_SCB_AXI2SER_NONSECURE_ACCESS_95_64_ADR)
#define RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_REG ((rcs_scb_axi2ser_nonsecure_access_127_96_reg_t*) RCS_SCB_AXI2SER_NONSECURE_ACCESS_127_96_ADR)
#define RCS_SCB_SECURE_BOOT_CFG_LOCK_REG ((rcs_scb_secure_boot_cfg_lock_reg_t*) RCS_SCB_SECURE_BOOT_CFG_LOCK_ADR)
#define RCS_SCB_PERIPH_ID4_REG ((rcs_scb_periph_id4_reg_t*) RCS_SCB_PERIPH_ID4_ADR)
#define RCS_SCB_PERIPH_ID5_REG ((rcs_scb_periph_id5_reg_t*) RCS_SCB_PERIPH_ID5_ADR)
#define RCS_SCB_PERIPH_ID6_REG ((rcs_scb_periph_id6_reg_t*) RCS_SCB_PERIPH_ID6_ADR)
#define RCS_SCB_PERIPH_ID7_REG ((rcs_scb_periph_id7_reg_t*) RCS_SCB_PERIPH_ID7_ADR)
#define RCS_SCB_PERIPH_ID0_REG ((rcs_scb_periph_id0_reg_t*) RCS_SCB_PERIPH_ID0_ADR)
#define RCS_SCB_PERIPH_ID1_REG ((rcs_scb_periph_id1_reg_t*) RCS_SCB_PERIPH_ID1_ADR)
#define RCS_SCB_PERIPH_ID2_REG ((rcs_scb_periph_id2_reg_t*) RCS_SCB_PERIPH_ID2_ADR)
#define RCS_SCB_PERIPH_ID3_REG ((rcs_scb_periph_id3_reg_t*) RCS_SCB_PERIPH_ID3_ADR)
#define RCS_SCB_COMP_ID0_REG ((rcs_scb_comp_id0_reg_t*) RCS_SCB_COMP_ID0_ADR)
#define RCS_SCB_COMP_ID1_REG ((rcs_scb_comp_id1_reg_t*) RCS_SCB_COMP_ID1_ADR)
#define RCS_SCB_COMP_ID2_REG ((rcs_scb_comp_id2_reg_t*) RCS_SCB_COMP_ID2_ADR)
#define RCS_SCB_COMP_ID3_REG ((rcs_scb_comp_id3_reg_t*) RCS_SCB_COMP_ID3_ADR)
#define RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_REG ((rcs_scb_s_rsm_0_fn_mod_iss_bm_reg_t*) RCS_SCB_S_RSM_0_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_REG ((rcs_scb_s_rsm_1_fn_mod_iss_bm_reg_t*) RCS_SCB_S_RSM_1_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_REG ((rcs_scb_s_vex_strm_ib_fn_mod_iss_bm_reg_t*) RCS_SCB_S_VEX_STRM_IB_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD2_REG ((rcs_scb_s_vex_strm_ib_fn_mod2_reg_t*) RCS_SCB_S_VEX_STRM_IB_FN_MOD2_ADR)
#define RCS_SCB_S_VEX_STRM_IB_FN_MOD_REG ((rcs_scb_s_vex_strm_ib_fn_mod_reg_t*) RCS_SCB_S_VEX_STRM_IB_FN_MOD_ADR)
#define RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_REG ((rcs_scb_s_orion_kp1_fn_mod_iss_bm_reg_t*) RCS_SCB_S_ORION_KP1_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_REG ((rcs_scb_s_orion_main_fn_mod_iss_bm_reg_t*) RCS_SCB_S_ORION_MAIN_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_REG ((rcs_scb_s_core_0_fn_mod_iss_bm_reg_t*) RCS_SCB_S_CORE_0_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_REG ((rcs_scb_s_core_1_fn_mod_iss_bm_reg_t*) RCS_SCB_S_CORE_1_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_REG ((rcs_scb_s_core_3_fn_mod_iss_bm_reg_t*) RCS_SCB_S_CORE_3_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_ROM_FN_MOD_ISS_BM_REG ((rcs_scb_s_rom_fn_mod_iss_bm_reg_t*) RCS_SCB_S_ROM_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_PHM_FN_MOD_ISS_BM_REG ((rcs_scb_s_phm_fn_mod_iss_bm_reg_t*) RCS_SCB_S_PHM_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_PHM1_FN_MOD_ISS_BM_REG ((rcs_scb_s_phm1_fn_mod_iss_bm_reg_t*) RCS_SCB_S_PHM1_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_REG ((rcs_scb_s_core_2_fn_mod_iss_bm_reg_t*) RCS_SCB_S_CORE_2_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_REG ((rcs_scb_apb_bfn_grp_ib_fn_mod_iss_bm_reg_t*) RCS_SCB_APB_BFN_GRP_IB_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_REG ((rcs_scb_apb_bfn_grp_ib_fn_mod2_reg_t*) RCS_SCB_APB_BFN_GRP_IB_FN_MOD2_ADR)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_REG ((rcs_scb_apb_rcs_grp_ib_fn_mod_iss_bm_reg_t*) RCS_SCB_APB_RCS_GRP_IB_FN_MOD_ISS_BM_ADR)
#define RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_REG ((rcs_scb_apb_rcs_grp_ib_fn_mod2_reg_t*) RCS_SCB_APB_RCS_GRP_IB_FN_MOD2_ADR)
#define RCS_SCB_M_DMAC_ASIB_FN_MOD_REG ((rcs_scb_m_dmac_asib_fn_mod_reg_t*) RCS_SCB_M_DMAC_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_dmac_asib_axprot_ovrd_reg_t*) RCS_SCB_M_DMAC_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_REG ((rcs_scb_m_orion_rsm_asib_fn_mod_reg_t*) RCS_SCB_M_ORION_RSM_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_orion_rsm_asib_axprot_ovrd_reg_t*) RCS_SCB_M_ORION_RSM_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_REG ((rcs_scb_m_sspdma_0_asib_fn_mod_reg_t*) RCS_SCB_M_SSPDMA_0_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_sspdma_0_asib_axprot_ovrd_reg_t*) RCS_SCB_M_SSPDMA_0_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_CORE_0_ASIB_FN_MOD_REG ((rcs_scb_m_core_0_asib_fn_mod_reg_t*) RCS_SCB_M_CORE_0_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_core_0_asib_axprot_ovrd_reg_t*) RCS_SCB_M_CORE_0_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_CORE_1_ASIB_FN_MOD_REG ((rcs_scb_m_core_1_asib_fn_mod_reg_t*) RCS_SCB_M_CORE_1_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_core_1_asib_axprot_ovrd_reg_t*) RCS_SCB_M_CORE_1_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_CORE_3_ASIB_FN_MOD_REG ((rcs_scb_m_core_3_asib_fn_mod_reg_t*) RCS_SCB_M_CORE_3_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_core_3_asib_axprot_ovrd_reg_t*) RCS_SCB_M_CORE_3_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_REG ((rcs_scb_m_orion_main_asib_fn_mod_reg_t*) RCS_SCB_M_ORION_MAIN_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_orion_main_asib_axprot_ovrd_reg_t*) RCS_SCB_M_ORION_MAIN_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_REG ((rcs_scb_m_dma_core_0_asib_fn_mod_reg_t*) RCS_SCB_M_DMA_CORE_0_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_dma_core_0_asib_axprot_ovrd_reg_t*) RCS_SCB_M_DMA_CORE_0_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_REG ((rcs_scb_m_dma_core_1_asib_fn_mod_reg_t*) RCS_SCB_M_DMA_CORE_1_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_dma_core_1_asib_axprot_ovrd_reg_t*) RCS_SCB_M_DMA_CORE_1_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_REG ((rcs_scb_m_dma_core_3_asib_fn_mod_reg_t*) RCS_SCB_M_DMA_CORE_3_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_dma_core_3_asib_axprot_ovrd_reg_t*) RCS_SCB_M_DMA_CORE_3_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_CORE_2_ASIB_FN_MOD_REG ((rcs_scb_m_core_2_asib_fn_mod_reg_t*) RCS_SCB_M_CORE_2_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_core_2_asib_axprot_ovrd_reg_t*) RCS_SCB_M_CORE_2_ASIB_AXPROT_OVRD_ADR)
#define RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_REG ((rcs_scb_m_dma_core_2_asib_fn_mod_reg_t*) RCS_SCB_M_DMA_CORE_2_ASIB_FN_MOD_ADR)
#define RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_REG ((rcs_scb_m_dma_core_2_asib_axprot_ovrd_reg_t*) RCS_SCB_M_DMA_CORE_2_ASIB_AXPROT_OVRD_ADR)

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    rcs_scb_periph_remap_reg_t PERIPH_REMAP;    /*< Address offset = 0x0 */
    const uint8_t        reservedArea0 [4];   /*< Address offset = 0x4 */
    rcs_scb_s_rsm_0_security_reg_t S_RSM_0_SECURITY; /*< Address offset = 0x8 */
    rcs_scb_s_rsm_1_security_reg_t S_RSM_1_SECURITY; /*< Address offset = 0xc */
    rcs_scb_s_vex_strm_security_reg_t S_VEX_STRM_SECURITY; /*< Address offset = 0x10 */
    rcs_scb_s_orion_kp1_security_reg_t S_ORION_KP1_SECURITY; /*< Address offset = 0x14 */
    rcs_scb_s_orion_main_security_reg_t S_ORION_MAIN_SECURITY; /*< Address offset = 0x18 */
    rcs_scb_s_core_0_security_reg_t S_CORE_0_SECURITY; /*< Address offset = 0x1c */
    rcs_scb_s_core_1_security_reg_t S_CORE_1_SECURITY; /*< Address offset = 0x20 */
    rcs_scb_s_core_3_security_reg_t S_CORE_3_SECURITY; /*< Address offset = 0x24 */
    rcs_scb_s_rom_security_reg_t S_ROM_SECURITY;  /*< Address offset = 0x28 */
    rcs_scb_s_phm_security_reg_t S_PHM_SECURITY;  /*< Address offset = 0x2c */
    rcs_scb_s_phm1_security_reg_t S_PHM1_SECURITY; /*< Address offset = 0x30 */
    rcs_scb_s_core_2_security_reg_t S_CORE_2_SECURITY; /*< Address offset = 0x34 */
    rcs_scb_apb_bfn_grp_security_reg_t APB_BFN_GRP_SECURITY; /*< Address offset = 0x38 */
    rcs_scb_apb_rcs_grp_security_reg_t APB_RCS_GRP_SECURITY; /*< Address offset = 0x3c */
    const uint8_t        reservedArea1 [1984]; /*< Address offset = 0x40 */
    rcs_scb_axi2ser_nonsecure_access_31_0_reg_t AXI2SER_NONSECURE_ACCESS_31_0; /*< Address offset = 0x800 */
    rcs_scb_axi2ser_nonsecure_access_63_32_reg_t AXI2SER_NONSECURE_ACCESS_63_32; /*< Address offset = 0x804 */
    rcs_scb_axi2ser_nonsecure_access_95_64_reg_t AXI2SER_NONSECURE_ACCESS_95_64; /*< Address offset = 0x808 */
    rcs_scb_axi2ser_nonsecure_access_127_96_reg_t AXI2SER_NONSECURE_ACCESS_127_96; /*< Address offset = 0x80c */
    const uint8_t        reservedArea2 [240]; /*< Address offset = 0x810 */
    rcs_scb_secure_boot_cfg_lock_reg_t SECURE_BOOT_CFG_LOCK; /*< Address offset = 0x900 */
    const uint8_t        reservedArea3 [5836]; /*< Address offset = 0x904 */
    rcs_scb_periph_id4_reg_t PERIPH_ID4;      /*< Address offset = 0x1fd0 */
    rcs_scb_periph_id5_reg_t PERIPH_ID5;      /*< Address offset = 0x1fd4 */
    rcs_scb_periph_id6_reg_t PERIPH_ID6;      /*< Address offset = 0x1fd8 */
    rcs_scb_periph_id7_reg_t PERIPH_ID7;      /*< Address offset = 0x1fdc */
    rcs_scb_periph_id0_reg_t PERIPH_ID0;      /*< Address offset = 0x1fe0 */
    rcs_scb_periph_id1_reg_t PERIPH_ID1;      /*< Address offset = 0x1fe4 */
    rcs_scb_periph_id2_reg_t PERIPH_ID2;      /*< Address offset = 0x1fe8 */
    rcs_scb_periph_id3_reg_t PERIPH_ID3;      /*< Address offset = 0x1fec */
    rcs_scb_comp_id0_reg_t COMP_ID0;   /*< Address offset = 0x1ff0 */
    rcs_scb_comp_id1_reg_t COMP_ID1;   /*< Address offset = 0x1ff4 */
    rcs_scb_comp_id2_reg_t COMP_ID2;   /*< Address offset = 0x1ff8 */
    rcs_scb_comp_id3_reg_t COMP_ID3;   /*< Address offset = 0x1ffc */
    const uint8_t        reservedArea4 [8];   /*< Address offset = 0x2000 */
    rcs_scb_s_rsm_0_fn_mod_iss_bm_reg_t S_RSM_0_FN_MOD_ISS_BM; /*< Address offset = 0x2008 */
    const uint8_t        reservedArea5 [4092]; /*< Address offset = 0x200c */
    rcs_scb_s_rsm_1_fn_mod_iss_bm_reg_t S_RSM_1_FN_MOD_ISS_BM; /*< Address offset = 0x3008 */
    const uint8_t        reservedArea6 [4092]; /*< Address offset = 0x300c */
    rcs_scb_s_vex_strm_ib_fn_mod_iss_bm_reg_t S_VEX_STRM_IB_FN_MOD_ISS_BM; /*< Address offset = 0x4008 */
    const uint8_t        reservedArea7 [24];  /*< Address offset = 0x400c */
    rcs_scb_s_vex_strm_ib_fn_mod2_reg_t S_VEX_STRM_IB_FN_MOD2; /*< Address offset = 0x4024 */
    const uint8_t        reservedArea8 [224]; /*< Address offset = 0x4028 */
    rcs_scb_s_vex_strm_ib_fn_mod_reg_t S_VEX_STRM_IB_FN_MOD; /*< Address offset = 0x4108 */
    const uint8_t        reservedArea9 [3836]; /*< Address offset = 0x410c */
    rcs_scb_s_orion_kp1_fn_mod_iss_bm_reg_t S_ORION_KP1_FN_MOD_ISS_BM; /*< Address offset = 0x5008 */
    const uint8_t        reservedArea10 [4092]; /*< Address offset = 0x500c */
    rcs_scb_s_orion_main_fn_mod_iss_bm_reg_t S_ORION_MAIN_FN_MOD_ISS_BM; /*< Address offset = 0x6008 */
    const uint8_t        reservedArea11 [4092]; /*< Address offset = 0x600c */
    rcs_scb_s_core_0_fn_mod_iss_bm_reg_t S_CORE_0_FN_MOD_ISS_BM; /*< Address offset = 0x7008 */
    const uint8_t        reservedArea12 [4092]; /*< Address offset = 0x700c */
    rcs_scb_s_core_1_fn_mod_iss_bm_reg_t S_CORE_1_FN_MOD_ISS_BM; /*< Address offset = 0x8008 */
    const uint8_t        reservedArea13 [4092]; /*< Address offset = 0x800c */
    rcs_scb_s_core_3_fn_mod_iss_bm_reg_t S_CORE_3_FN_MOD_ISS_BM; /*< Address offset = 0x9008 */
    const uint8_t        reservedArea14 [4092]; /*< Address offset = 0x900c */
    rcs_scb_s_rom_fn_mod_iss_bm_reg_t S_ROM_FN_MOD_ISS_BM; /*< Address offset = 0xa008 */
    const uint8_t        reservedArea15 [4092]; /*< Address offset = 0xa00c */
    rcs_scb_s_phm_fn_mod_iss_bm_reg_t S_PHM_FN_MOD_ISS_BM; /*< Address offset = 0xb008 */
    const uint8_t        reservedArea16 [4092]; /*< Address offset = 0xb00c */
    rcs_scb_s_phm1_fn_mod_iss_bm_reg_t S_PHM1_FN_MOD_ISS_BM; /*< Address offset = 0xc008 */
    const uint8_t        reservedArea17 [4092]; /*< Address offset = 0xc00c */
    rcs_scb_s_core_2_fn_mod_iss_bm_reg_t S_CORE_2_FN_MOD_ISS_BM; /*< Address offset = 0xd008 */
    const uint8_t        reservedArea18 [4092]; /*< Address offset = 0xd00c */
    rcs_scb_apb_bfn_grp_ib_fn_mod_iss_bm_reg_t APB_BFN_GRP_IB_FN_MOD_ISS_BM; /*< Address offset = 0xe008 */
    const uint8_t        reservedArea19 [24]; /*< Address offset = 0xe00c */
    rcs_scb_apb_bfn_grp_ib_fn_mod2_reg_t APB_BFN_GRP_IB_FN_MOD2; /*< Address offset = 0xe024 */
    const uint8_t        reservedArea20 [4064]; /*< Address offset = 0xe028 */
    rcs_scb_apb_rcs_grp_ib_fn_mod_iss_bm_reg_t APB_RCS_GRP_IB_FN_MOD_ISS_BM; /*< Address offset = 0xf008 */
    const uint8_t        reservedArea21 [24]; /*< Address offset = 0xf00c */
    rcs_scb_apb_rcs_grp_ib_fn_mod2_reg_t APB_RCS_GRP_IB_FN_MOD2; /*< Address offset = 0xf024 */
    const uint8_t        reservedArea22 [209120]; /*< Address offset = 0xf028 */
    rcs_scb_m_dmac_asib_fn_mod_reg_t M_DMAC_ASIB_FN_MOD; /*< Address offset = 0x42108 */
    const uint8_t        reservedArea23 [1780]; /*< Address offset = 0x4210c */
    rcs_scb_m_dmac_asib_axprot_ovrd_reg_t M_DMAC_ASIB_AXPROT_OVRD; /*< Address offset = 0x42800 */
    const uint8_t        reservedArea24 [2308]; /*< Address offset = 0x42804 */
    rcs_scb_m_orion_rsm_asib_fn_mod_reg_t M_ORION_RSM_ASIB_FN_MOD; /*< Address offset = 0x43108 */
    const uint8_t        reservedArea25 [1780]; /*< Address offset = 0x4310c */
    rcs_scb_m_orion_rsm_asib_axprot_ovrd_reg_t M_ORION_RSM_ASIB_AXPROT_OVRD; /*< Address offset = 0x43800 */
    const uint8_t        reservedArea26 [2308]; /*< Address offset = 0x43804 */
    rcs_scb_m_sspdma_0_asib_fn_mod_reg_t M_SSPDMA_0_ASIB_FN_MOD; /*< Address offset = 0x44108 */
    const uint8_t        reservedArea27 [1780]; /*< Address offset = 0x4410c */
    rcs_scb_m_sspdma_0_asib_axprot_ovrd_reg_t M_SSPDMA_0_ASIB_AXPROT_OVRD; /*< Address offset = 0x44800 */
    const uint8_t        reservedArea28 [2308]; /*< Address offset = 0x44804 */
    rcs_scb_m_core_0_asib_fn_mod_reg_t M_CORE_0_ASIB_FN_MOD; /*< Address offset = 0x45108 */
    const uint8_t        reservedArea29 [1780]; /*< Address offset = 0x4510c */
    rcs_scb_m_core_0_asib_axprot_ovrd_reg_t M_CORE_0_ASIB_AXPROT_OVRD; /*< Address offset = 0x45800 */
    const uint8_t        reservedArea30 [2308]; /*< Address offset = 0x45804 */
    rcs_scb_m_core_1_asib_fn_mod_reg_t M_CORE_1_ASIB_FN_MOD; /*< Address offset = 0x46108 */
    const uint8_t        reservedArea31 [1780]; /*< Address offset = 0x4610c */
    rcs_scb_m_core_1_asib_axprot_ovrd_reg_t M_CORE_1_ASIB_AXPROT_OVRD; /*< Address offset = 0x46800 */
    const uint8_t        reservedArea32 [2308]; /*< Address offset = 0x46804 */
    rcs_scb_m_core_3_asib_fn_mod_reg_t M_CORE_3_ASIB_FN_MOD; /*< Address offset = 0x47108 */
    const uint8_t        reservedArea33 [1780]; /*< Address offset = 0x4710c */
    rcs_scb_m_core_3_asib_axprot_ovrd_reg_t M_CORE_3_ASIB_AXPROT_OVRD; /*< Address offset = 0x47800 */
    const uint8_t        reservedArea34 [2308]; /*< Address offset = 0x47804 */
    rcs_scb_m_orion_main_asib_fn_mod_reg_t M_ORION_MAIN_ASIB_FN_MOD; /*< Address offset = 0x48108 */
    const uint8_t        reservedArea35 [1780]; /*< Address offset = 0x4810c */
    rcs_scb_m_orion_main_asib_axprot_ovrd_reg_t M_ORION_MAIN_ASIB_AXPROT_OVRD; /*< Address offset = 0x48800 */
    const uint8_t        reservedArea36 [2308]; /*< Address offset = 0x48804 */
    rcs_scb_m_dma_core_0_asib_fn_mod_reg_t M_DMA_CORE_0_ASIB_FN_MOD; /*< Address offset = 0x49108 */
    const uint8_t        reservedArea37 [1780]; /*< Address offset = 0x4910c */
    rcs_scb_m_dma_core_0_asib_axprot_ovrd_reg_t M_DMA_CORE_0_ASIB_AXPROT_OVRD; /*< Address offset = 0x49800 */
    const uint8_t        reservedArea38 [2308]; /*< Address offset = 0x49804 */
    rcs_scb_m_dma_core_1_asib_fn_mod_reg_t M_DMA_CORE_1_ASIB_FN_MOD; /*< Address offset = 0x4a108 */
    const uint8_t        reservedArea39 [1780]; /*< Address offset = 0x4a10c */
    rcs_scb_m_dma_core_1_asib_axprot_ovrd_reg_t M_DMA_CORE_1_ASIB_AXPROT_OVRD; /*< Address offset = 0x4a800 */
    const uint8_t        reservedArea40 [2308]; /*< Address offset = 0x4a804 */
    rcs_scb_m_dma_core_3_asib_fn_mod_reg_t M_DMA_CORE_3_ASIB_FN_MOD; /*< Address offset = 0x4b108 */
    const uint8_t        reservedArea41 [1780]; /*< Address offset = 0x4b10c */
    rcs_scb_m_dma_core_3_asib_axprot_ovrd_reg_t M_DMA_CORE_3_ASIB_AXPROT_OVRD; /*< Address offset = 0x4b800 */
    const uint8_t        reservedArea42 [2308]; /*< Address offset = 0x4b804 */
    rcs_scb_m_core_2_asib_fn_mod_reg_t M_CORE_2_ASIB_FN_MOD; /*< Address offset = 0x4c108 */
    const uint8_t        reservedArea43 [1780]; /*< Address offset = 0x4c10c */
    rcs_scb_m_core_2_asib_axprot_ovrd_reg_t M_CORE_2_ASIB_AXPROT_OVRD; /*< Address offset = 0x4c800 */
    const uint8_t        reservedArea44 [2308]; /*< Address offset = 0x4c804 */
    rcs_scb_m_dma_core_2_asib_fn_mod_reg_t M_DMA_CORE_2_ASIB_FN_MOD; /*< Address offset = 0x4d108 */
    const uint8_t        reservedArea45 [1780]; /*< Address offset = 0x4d10c */
    rcs_scb_m_dma_core_2_asib_axprot_ovrd_reg_t M_DMA_CORE_2_ASIB_AXPROT_OVRD; /*< Address offset = 0x4d800 */
} rcs_scb_t;     // size: 0x0128

// AddressSpace struct pointer
//
#define RCS_SCB          ((rcs_scb_t*) RCS_SCB_BASE)

// ******************************************* /Address Space

#endif      // _RCS_SCB_H_

