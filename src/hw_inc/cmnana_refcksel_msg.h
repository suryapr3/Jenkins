#ifndef _CMNANA_REFCKSEL_MSG_H_
#define _CMNANA_REFCKSEL_MSG_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_JESD0_PHY_PMA0_CMNANA_REFCKSEL_BASE  ( 0x06020980 )
#define DLNK_JESD1_PHY_PMA0_CMNANA_REFCKSEL_BASE  ( 0x06820980 )
#define DLNK_JESD2_PHY_PMA0_CMNANA_REFCKSEL_BASE  ( 0x07020980 )
#define DLNK_JESD3_PHY_PMA0_CMNANA_REFCKSEL_BASE  ( 0x07820980 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_OFFSET ( 0x00000000U )
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_OFFSET ( 0x00000004U )
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_OFFSET ( 0x00000008U )
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_OFFSET ( 0x0000000cU )
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_OFFSET ( 0x00000010U )
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_OFFSET ( 0x00000014U )
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_OFFSET ( 0x00000018U )
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_OFFSET ( 0x0000001cU )
#define CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_OFFSET ( 0x00000020U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_OFFSET ) ))
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_OFFSET ) ))
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_OFFSET ) ))
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_OFFSET ) ))
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_ADR(_BASE) (( ( _BASE ) + ( CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_OFFSET ) ))
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_ADR(_BASE) (( ( _BASE ) + ( CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_OFFSET ) ))
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_ADR(_BASE) (( ( _BASE ) + ( CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_OFFSET ) ))
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_ADR(_BASE) (( ( _BASE ) + ( CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_OFFSET ) ))
#define CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief CMNANA_REFCKSEL_REGS_MSG_CMNANA_REFCKSEL_REGS_CMNCHARGEPUMP_CTRL0 register description at address offset 0x0
  *
  * Register default value:        0x00004802
  * Register full path in IP: CMNANA_REFCKSEL_regs_MSG/CMNANA_REFCKSEL_regs/cmnchargepump_ctrl0
  * cmnchargepump_ctrl0
  */

typedef union {
  struct {
    uint32_t CHARGEPUMP_BST_CTR : 5;
    ///< gray coded_boost cap control
    ///< AccessType="RW" BitOffset="0" ResetValue="0x2"
    uint32_t CHARGEPUMP_PD_B : 1;
    ///< power down chargepump
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t CHARGEPUMP_DCMON_SEL : 3;
    ///< dcmon control bits
    ///< AccessType="RW" BitOffset="6" ResetValue="0x0"
    uint32_t CHARGEPUMP_HSMON_EN : 1;
    ///< hsmon enable
    ///< AccessType="RW" BitOffset="9" ResetValue="0x0"
    uint32_t CHARGEPUMP_RO_CTRL_GRY : 4;
    ///< gray coeded ro control
    ///< AccessType="RW" BitOffset="10" ResetValue="0x2"
    uint32_t CHARGEPUMP_CLKDIV_BYPASS : 1;
    ///< bypass the divider by 2
    ///< AccessType="RW" BitOffset="14" ResetValue="0x1"
    uint32_t CHARGEPUMP_RST_B : 1;
    ///< reset charge pump. Active low
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_refcksel_msg_cmnchargepump_ctrl0_reg_t;

#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_DEFAULT (0x00004802U)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_RD_MASK (0x0000ffffU)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_WR_MASK (0x0000ffffU)


///< gray coded_boost cap control
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_BST_CTR_BF_OFF ( 0)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_BST_CTR_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_BST_CTR_BF_MSK (0x0000001F)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_BST_CTR_BF_DEF (0x00000002)

///< power down chargepump
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_PD_B_BF_OFF ( 5)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_PD_B_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_PD_B_BF_MSK (0x00000020)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_PD_B_BF_DEF (0x00000000)

///< dcmon control bits
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_DCMON_SEL_BF_OFF ( 6)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_DCMON_SEL_BF_WID ( 3)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_DCMON_SEL_BF_MSK (0x000001C0)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_DCMON_SEL_BF_DEF (0x00000000)

///< hsmon enable
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_HSMON_EN_BF_OFF ( 9)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_HSMON_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_HSMON_EN_BF_MSK (0x00000200)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_HSMON_EN_BF_DEF (0x00000000)

///< gray coeded ro control
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_RO_CTRL_GRY_BF_OFF (10)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_RO_CTRL_GRY_BF_WID ( 4)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_RO_CTRL_GRY_BF_MSK (0x00003C00)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_RO_CTRL_GRY_BF_DEF (0x00000800)

///< bypass the divider by 2
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_CLKDIV_BYP_BF_OFF (14)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_CLKDIV_BYP_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_CLKDIV_BYP_BF_MSK (0x00004000)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_CLKDIV_BYP_BF_DEF (0x00004000)

///< reset charge pump. Active low
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_RST_B_BF_OFF (15)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_RST_B_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_RST_B_BF_MSK (0x00008000)
#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_CHARGEPUMP_RST_B_BF_DEF (0x00000000)


/** @brief CMNANA_REFCKSEL_REGS_MSG_CMNANA_REFCKSEL_REGS_CMNPLLAREFCLK_CTRL0 register description at address offset 0x4
  *
  * Register default value:        0x00004000
  * Register full path in IP: CMNANA_REFCKSEL_regs_MSG/CMNANA_REFCKSEL_regs/cmnpllarefclk_ctrl0
  * cmnpllarefclk_ctrl0
  */

typedef union {
  struct {
    uint32_t REG_REFCKSEL0_STG1_BYP_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t REG_REFCKSEL0_STG2_BYP_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t REFCKSEL0 : 3;
    ///< 3'000b: ick_refck<0> is selected                               3'001b:
    ///< ick_refck<1> is selected    3'010b: ick_refck<2> is selected    3'011b:
    ///< ick_refck<3> is selected  3'100b: ick_refck<4> is selected 3'101b:
    ///< ick_refck<5> is selected 3'110b: ick_refck<6> is selected 3'111b:
    ///< ick_refck<7> is selected
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t REFCKSEL0_REFDIV : 6;
    ///< clock division ratio6'000000b: division ratio=16'000001b-111111b:
    ///< binary code decimal division ratio 1-63
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t REFCKSEL0_CK_TO_DPMA_EN : 1;
    ///< 0: not output clock to dpma1: output clock to dpma
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t REFCKSEL0_REFDIV_RST_B : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t REG_REFCKSEL0_BLEED_TUNE : 3;
    ///< control for a bleeding current value<2:0> = 111: highest bleed current<2:0>
    ///< = 000: lowest bleed current
    ///< AccessType="RW" BitOffset="13" ResetValue="0x2"
    uint32_t REG_REFCKSEL0_PD_B : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t REG_REFCKSEL0_DCMON_SEL : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t REFCKSEL0_HSMON_EN : 1;
    ///< 1'0b: disable hsmon1'1b: enable hsmon
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_refcksel_msg_cmnpllarefclk_ctrl0_reg_t;

#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_DEFAULT (0x00004000U)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_RD_MASK (0x001fffffU)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_WR_MASK (0x001fffffU)


#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_STG1_BYP_EN_BF_OFF ( 0)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_STG1_BYP_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_STG1_BYP_EN_BF_MSK (0x00000001)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_STG1_BYP_EN_BF_DEF (0x00000000)

#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_STG2_BYP_EN_BF_OFF ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_STG2_BYP_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_STG2_BYP_EN_BF_MSK (0x00000002)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_STG2_BYP_EN_BF_DEF (0x00000000)

///< 3'000b: ick_refck<0> is selected                               3'001b:
///< ick_refck<1> is selected    3'010b: ick_refck<2> is selected    3'011b:
///< ick_refck<3> is selected  3'100b: ick_refck<4> is selected 3'101b:
///< ick_refck<5> is selected 3'110b: ick_refck<6> is selected 3'111b:
///< ick_refck<7> is selected
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_BF_OFF ( 2)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_BF_WID ( 3)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_BF_MSK (0x0000001C)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_BF_DEF (0x00000000)

///< clock division ratio6'000000b: division ratio=16'000001b-111111b:
///< binary code decimal division ratio 1-63
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_REFDIV_BF_OFF ( 5)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_REFDIV_BF_WID ( 6)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_REFDIV_BF_MSK (0x000007E0)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_REFDIV_BF_DEF (0x00000000)

///< 0: not output clock to dpma1: output clock to dpma
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_CK_TO_DPMA_EN_BF_OFF (11)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_CK_TO_DPMA_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_CK_TO_DPMA_EN_BF_MSK (0x00000800)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_CK_TO_DPMA_EN_BF_DEF (0x00000000)

#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_REFDIV_RST_B_BF_OFF (12)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_REFDIV_RST_B_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_REFDIV_RST_B_BF_MSK (0x00001000)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_REFDIV_RST_B_BF_DEF (0x00000000)

///< control for a bleeding current value<2:0> = 111: highest bleed current<2:0>
///< = 000: lowest bleed current
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_BLEED_TUNE_BF_OFF (13)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_BLEED_TUNE_BF_WID ( 3)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_BLEED_TUNE_BF_MSK (0x0000E000)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_BLEED_TUNE_BF_DEF (0x00004000)

#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_PD_B_BF_OFF (16)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_PD_B_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_PD_B_BF_MSK (0x00010000)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_PD_B_BF_DEF (0x00000000)

#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_DCMON_SEL_BF_OFF (17)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_DCMON_SEL_BF_WID ( 3)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_DCMON_SEL_BF_MSK (0x000E0000)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_DCMON_SEL_BF_DEF (0x00000000)

///< 1'0b: disable hsmon1'1b: enable hsmon
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_HSMON_EN_BF_OFF (20)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_HSMON_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_HSMON_EN_BF_MSK (0x00100000)
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REFCKSEL0_HSMON_EN_BF_DEF (0x00000000)


/** @brief CMNANA_REFCKSEL_REGS_MSG_CMNANA_REFCKSEL_REGS_CMNPLLBREFCLK_CTRL0 register description at address offset 0x8
  *
  * Register default value:        0x00004000
  * Register full path in IP: CMNANA_REFCKSEL_regs_MSG/CMNANA_REFCKSEL_regs/cmnpllbrefclk_ctrl0
  * cmnpllbrefclk_ctrl0
  */

typedef union {
  struct {
    uint32_t REG_REFCKSEL1_STG1_BYP_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t REG_REFCKSEL1_STG2_BYP_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t REFCKSEL1 : 3;
    ///< 3'000b: ick_refck<0> is selected                               3'001b:
    ///< ick_refck<1> is selected    3'010b: ick_refck<2> is selected    3'011b:
    ///< ick_refck<3> is selected  3'100b: ick_refck<4> is selected 3'101b:
    ///< ick_refck<5> is selected 3'110b: ick_refck<6> is selected 3'111b:
    ///< ick_refck<7> is selected
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t REFCKSEL1_REFDIV : 6;
    ///< clock division ratio6'000000b: division ratio=16'000001b-111111b:
    ///< binary code decimal division ratio 1-63
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t REFCKSEL1_CK_TO_DPMA_EN : 1;
    ///< 0: not output clock to dpma1: output clock to dpma
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t REFCKSEL1_REFDIV_RST_B : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t REG_REFCKSEL1_BLEED_TUNE : 3;
    ///< control for a bleeding current value<2:0> = 111: highest bleed current<2:0>
    ///< = 000: lowest bleed current
    ///< AccessType="RW" BitOffset="13" ResetValue="0x2"
    uint32_t REG_REFCKSEL1_PD_B : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t REG_REFCKSEL1_DCMON_SEL : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t REFCKSEL1_HSMON_EN : 1;
    ///< 1'0b: disable hsmon1'1b: enable hsmon
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_refcksel_msg_cmnpllbrefclk_ctrl0_reg_t;

#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_DEFAULT (0x00004000U)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_RD_MASK (0x001fffffU)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_WR_MASK (0x001fffffU)


#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_STG1_BYP_EN_BF_OFF ( 0)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_STG1_BYP_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_STG1_BYP_EN_BF_MSK (0x00000001)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_STG1_BYP_EN_BF_DEF (0x00000000)

#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_STG2_BYP_EN_BF_OFF ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_STG2_BYP_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_STG2_BYP_EN_BF_MSK (0x00000002)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_STG2_BYP_EN_BF_DEF (0x00000000)

///< 3'000b: ick_refck<0> is selected                               3'001b:
///< ick_refck<1> is selected    3'010b: ick_refck<2> is selected    3'011b:
///< ick_refck<3> is selected  3'100b: ick_refck<4> is selected 3'101b:
///< ick_refck<5> is selected 3'110b: ick_refck<6> is selected 3'111b:
///< ick_refck<7> is selected
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_BF_OFF ( 2)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_BF_WID ( 3)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_BF_MSK (0x0000001C)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_BF_DEF (0x00000000)

///< clock division ratio6'000000b: division ratio=16'000001b-111111b:
///< binary code decimal division ratio 1-63
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_REFDIV_BF_OFF ( 5)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_REFDIV_BF_WID ( 6)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_REFDIV_BF_MSK (0x000007E0)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_REFDIV_BF_DEF (0x00000000)

///< 0: not output clock to dpma1: output clock to dpma
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_CK_TO_DPMA_EN_BF_OFF (11)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_CK_TO_DPMA_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_CK_TO_DPMA_EN_BF_MSK (0x00000800)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_CK_TO_DPMA_EN_BF_DEF (0x00000000)

#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_REFDIV_RST_B_BF_OFF (12)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_REFDIV_RST_B_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_REFDIV_RST_B_BF_MSK (0x00001000)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_REFDIV_RST_B_BF_DEF (0x00000000)

///< control for a bleeding current value<2:0> = 111: highest bleed current<2:0>
///< = 000: lowest bleed current
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_BLEED_TUNE_BF_OFF (13)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_BLEED_TUNE_BF_WID ( 3)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_BLEED_TUNE_BF_MSK (0x0000E000)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_BLEED_TUNE_BF_DEF (0x00004000)

#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_PD_B_BF_OFF (16)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_PD_B_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_PD_B_BF_MSK (0x00010000)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_PD_B_BF_DEF (0x00000000)

#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_DCMON_SEL_BF_OFF (17)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_DCMON_SEL_BF_WID ( 3)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_DCMON_SEL_BF_MSK (0x000E0000)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_DCMON_SEL_BF_DEF (0x00000000)

///< 1'0b: disable hsmon1'1b: enable hsmon
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_HSMON_EN_BF_OFF (20)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_HSMON_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_HSMON_EN_BF_MSK (0x00100000)
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REFCKSEL1_HSMON_EN_BF_DEF (0x00000000)


/** @brief CMNANA_REFCKSEL_REGS_MSG_CMNANA_REFCKSEL_REGS_CMNREFGEN_CTRL0 register description at address offset 0xc
  *
  * Register default value:        0x05965963
  * Register full path in IP: CMNANA_REFCKSEL_regs_MSG/CMNANA_REFCKSEL_regs/cmnrefgen_ctrl0
  * cmnrefgen_ctrl0
  */

typedef union {
  struct {
    uint32_t REFGEN_BYP_RES : 2;
    ///< Select low pass filter cut off frequnecy
    ///< AccessType="RW" BitOffset="0" ResetValue="0x3"
    uint32_t REFGEN_BYP_EN : 1;
    ///< bypass refgen regulator
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t REFGEN_POSTDIV0_STG1_SEL : 5;
    ///< controls vref_postdiv value
    ///< AccessType="RW" BitOffset="3" ResetValue="0xC"
    uint32_t REFGEN_POSTDIV0_STG1_EN : 1;
    ///< enables vref_postdiv
    ///< AccessType="RW" BitOffset="8" ResetValue="0x1"
    uint32_t REFGEN_POSTDIV0_STG2_SEL : 5;
    ///< controls vref_postdiv value
    ///< AccessType="RW" BitOffset="9" ResetValue="0xC"
    uint32_t REFGEN_POSTDIV0_STG2_EN : 1;
    ///< enables vref_postdiv
    ///< AccessType="RW" BitOffset="14" ResetValue="0x1"
    uint32_t REFGEN_POSTDIV1_STG1_SEL : 5;
    ///< controls vref_postdiv value
    ///< AccessType="RW" BitOffset="15" ResetValue="0xC"
    uint32_t REFGEN_POSTDIV1_STG1_EN : 1;
    ///< enables vref_postdiv
    ///< AccessType="RW" BitOffset="20" ResetValue="0x1"
    uint32_t REFGEN_POSTDIV1_STG2_SEL : 5;
    ///< controls vref_postdiv value
    ///< AccessType="RW" BitOffset="21" ResetValue="0xC"
    uint32_t REFGEN_POSTDIV1_STG2_EN : 1;
    ///< enables vref_postdiv
    ///< AccessType="RW" BitOffset="26" ResetValue="0x1"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_refcksel_msg_cmnrefgen_ctrl0_reg_t;

#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_DEFAULT (0x05965963U)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_RD_MASK (0x07ffffffU)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_WR_MASK (0x07ffffffU)


///< Select low pass filter cut off frequnecy
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_BYP_RES_BF_OFF ( 0)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_BYP_RES_BF_WID ( 2)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_BYP_RES_BF_MSK (0x00000003)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_BYP_RES_BF_DEF (0x00000003)

///< bypass refgen regulator
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_BYP_EN_BF_OFF ( 2)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_BYP_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_BYP_EN_BF_MSK (0x00000004)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_BYP_EN_BF_DEF (0x00000000)

///< controls vref_postdiv value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG1_SEL_BF_OFF ( 3)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG1_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG1_SEL_BF_MSK (0x000000F8)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG1_SEL_BF_DEF (0x00000060)

///< enables vref_postdiv
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG1_EN_BF_OFF ( 8)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG1_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG1_EN_BF_MSK (0x00000100)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG1_EN_BF_DEF (0x00000100)

///< controls vref_postdiv value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG2_SEL_BF_OFF ( 9)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG2_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG2_SEL_BF_MSK (0x00003E00)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG2_SEL_BF_DEF (0x00001800)

///< enables vref_postdiv
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG2_EN_BF_OFF (14)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG2_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG2_EN_BF_MSK (0x00004000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV0_STG2_EN_BF_DEF (0x00004000)

///< controls vref_postdiv value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG1_SEL_BF_OFF (15)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG1_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG1_SEL_BF_MSK (0x000F8000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG1_SEL_BF_DEF (0x00060000)

///< enables vref_postdiv
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG1_EN_BF_OFF (20)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG1_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG1_EN_BF_MSK (0x00100000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG1_EN_BF_DEF (0x00100000)

///< controls vref_postdiv value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG2_SEL_BF_OFF (21)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG2_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG2_SEL_BF_MSK (0x03E00000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG2_SEL_BF_DEF (0x01800000)

///< enables vref_postdiv
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG2_EN_BF_OFF (26)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG2_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG2_EN_BF_MSK (0x04000000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REFGEN_POSTDIV1_STG2_EN_BF_DEF (0x04000000)


/** @brief CMNANA_REFCKSEL_REGS_MSG_CMNANA_REFCKSEL_REGS_CMNREFGEN_CTRL1 register description at address offset 0x10
  *
  * Register default value:        0x2CB2CB2C
  * Register full path in IP: CMNANA_REFCKSEL_regs_MSG/CMNANA_REFCKSEL_regs/cmnrefgen_ctrl1
  * cmnrefgen_ctrl1
  */

typedef union {
  struct {
    uint32_t REFGEN_REFCKBUF0_STG1_SEL : 5;
    ///< controls vref_refckbuff value
    ///< AccessType="RW" BitOffset="0" ResetValue="0xC"
    uint32_t REFGEN_REFCKBUF0_STG1_EN : 1;
    ///< enables vref_refcbuff
    ///< AccessType="RW" BitOffset="5" ResetValue="0x1"
    uint32_t REFGEN_REFCKBUF0_STG2_SEL : 5;
    ///< controls vref_refckbuff value
    ///< AccessType="RW" BitOffset="6" ResetValue="0xC"
    uint32_t REFGEN_REFCKBUF0_STG2_EN : 1;
    ///< enables vref_refcbuff
    ///< AccessType="RW" BitOffset="11" ResetValue="0x1"
    uint32_t REFGEN_REFCKBUF1_STG1_SEL : 5;
    ///< controls vref_refckbuff value
    ///< AccessType="RW" BitOffset="12" ResetValue="0xC"
    uint32_t REFGEN_REFCKBUF1_STG1_EN : 1;
    ///< enables vref_refcbuff
    ///< AccessType="RW" BitOffset="17" ResetValue="0x1"
    uint32_t REFGEN_REFCKBUF1_STG2_SEL : 5;
    ///< controls vref_refckbuff value
    ///< AccessType="RW" BitOffset="18" ResetValue="0xC"
    uint32_t REFGEN_REFCKBUF1_STG2_EN : 1;
    ///< enables vref_refcbuff
    ///< AccessType="RW" BitOffset="23" ResetValue="0x1"
    uint32_t REFGEN_REFCKSEL0_STG1_SEL : 5;
    ///< controls vref_refcksel value
    ///< AccessType="RW" BitOffset="24" ResetValue="0xC"
    uint32_t REFGEN_REFCKSEL0_STG1_EN : 1;
    ///< enables vref_refcksel
    ///< AccessType="RW" BitOffset="29" ResetValue="0x1"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_refcksel_msg_cmnrefgen_ctrl1_reg_t;

#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_DEFAULT (0x2cb2cb2cU)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_RD_MASK (0x3fffffffU)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_WR_MASK (0x3fffffffU)


///< controls vref_refckbuff value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG1_SEL_BF_OFF ( 0)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG1_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG1_SEL_BF_MSK (0x0000001F)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG1_SEL_BF_DEF (0x0000000C)

///< enables vref_refcbuff
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG1_EN_BF_OFF ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG1_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG1_EN_BF_MSK (0x00000020)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG1_EN_BF_DEF (0x00000020)

///< controls vref_refckbuff value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG2_SEL_BF_OFF ( 6)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG2_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG2_SEL_BF_MSK (0x000007C0)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG2_SEL_BF_DEF (0x00000300)

///< enables vref_refcbuff
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG2_EN_BF_OFF (11)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG2_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG2_EN_BF_MSK (0x00000800)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF0_STG2_EN_BF_DEF (0x00000800)

///< controls vref_refckbuff value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG1_SEL_BF_OFF (12)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG1_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG1_SEL_BF_MSK (0x0001F000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG1_SEL_BF_DEF (0x0000C000)

///< enables vref_refcbuff
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG1_EN_BF_OFF (17)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG1_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG1_EN_BF_MSK (0x00020000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG1_EN_BF_DEF (0x00020000)

///< controls vref_refckbuff value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG2_SEL_BF_OFF (18)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG2_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG2_SEL_BF_MSK (0x007C0000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG2_SEL_BF_DEF (0x00300000)

///< enables vref_refcbuff
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG2_EN_BF_OFF (23)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG2_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG2_EN_BF_MSK (0x00800000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKBUF1_STG2_EN_BF_DEF (0x00800000)

///< controls vref_refcksel value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKSEL0_STG1_SEL_BF_OFF (24)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKSEL0_STG1_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKSEL0_STG1_SEL_BF_MSK (0x1F000000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKSEL0_STG1_SEL_BF_DEF (0x0C000000)

///< enables vref_refcksel
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKSEL0_STG1_EN_BF_OFF (29)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKSEL0_STG1_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKSEL0_STG1_EN_BF_MSK (0x20000000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REFGEN_REFCKSEL0_STG1_EN_BF_DEF (0x20000000)


/** @brief CMNANA_REFCKSEL_REGS_MSG_CMNANA_REFCKSEL_REGS_CMNREFGEN_CTRL2 register description at address offset 0x14
  *
  * Register default value:        0x2CB2CB2C
  * Register full path in IP: CMNANA_REFCKSEL_regs_MSG/CMNANA_REFCKSEL_regs/cmnrefgen_ctrl2
  * cmnrefgen_ctrl2
  */

typedef union {
  struct {
    uint32_t REFGEN_REFCKSEL0_STG2_SEL : 5;
    ///< controls vref_refcksel value
    ///< AccessType="RW" BitOffset="0" ResetValue="0xC"
    uint32_t REFGEN_REFCKSEL0_STG2_EN : 1;
    ///< enables vref_refcksel
    ///< AccessType="RW" BitOffset="5" ResetValue="0x1"
    uint32_t REFGEN_REFCKSEL1_STG1_SEL : 5;
    ///< controls vref_refcksel value
    ///< AccessType="RW" BitOffset="6" ResetValue="0xC"
    uint32_t REFGEN_REFCKSEL1_STG1_EN : 1;
    ///< enables vref_refcksel
    ///< AccessType="RW" BitOffset="11" ResetValue="0x1"
    uint32_t REFGEN_REFCKSEL1_STG2_SEL : 5;
    ///< controls vref_refcksel value
    ///< AccessType="RW" BitOffset="12" ResetValue="0xC"
    uint32_t REFGEN_REFCKSEL1_STG2_EN : 1;
    ///< enables vref_refcksel
    ///< AccessType="RW" BitOffset="17" ResetValue="0x1"
    uint32_t REFGEN_SWFABRIC0_STG1_SEL : 5;
    ///< controls vref_swf value
    ///< AccessType="RW" BitOffset="18" ResetValue="0xC"
    uint32_t REFGEN_SWFABRIC0_STG1_EN : 1;
    ///< enables vref_swf
    ///< AccessType="RW" BitOffset="23" ResetValue="0x1"
    uint32_t REFGEN_SWFABRIC0_STG2_SEL : 5;
    ///< controls vref_swf value
    ///< AccessType="RW" BitOffset="24" ResetValue="0xC"
    uint32_t REFGEN_SWFABRIC0_STG2_EN : 1;
    ///< enables vref_swf
    ///< AccessType="RW" BitOffset="29" ResetValue="0x1"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_refcksel_msg_cmnrefgen_ctrl2_reg_t;

#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_DEFAULT (0x2cb2cb2cU)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_RD_MASK (0x3fffffffU)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_WR_MASK (0x3fffffffU)


///< controls vref_refcksel value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL0_STG2_SEL_BF_OFF ( 0)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL0_STG2_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL0_STG2_SEL_BF_MSK (0x0000001F)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL0_STG2_SEL_BF_DEF (0x0000000C)

///< enables vref_refcksel
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL0_STG2_EN_BF_OFF ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL0_STG2_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL0_STG2_EN_BF_MSK (0x00000020)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL0_STG2_EN_BF_DEF (0x00000020)

///< controls vref_refcksel value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG1_SEL_BF_OFF ( 6)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG1_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG1_SEL_BF_MSK (0x000007C0)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG1_SEL_BF_DEF (0x00000300)

///< enables vref_refcksel
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG1_EN_BF_OFF (11)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG1_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG1_EN_BF_MSK (0x00000800)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG1_EN_BF_DEF (0x00000800)

///< controls vref_refcksel value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG2_SEL_BF_OFF (12)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG2_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG2_SEL_BF_MSK (0x0001F000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG2_SEL_BF_DEF (0x0000C000)

///< enables vref_refcksel
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG2_EN_BF_OFF (17)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG2_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG2_EN_BF_MSK (0x00020000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_REFCKSEL1_STG2_EN_BF_DEF (0x00020000)

///< controls vref_swf value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG1_SEL_BF_OFF (18)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG1_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG1_SEL_BF_MSK (0x007C0000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG1_SEL_BF_DEF (0x00300000)

///< enables vref_swf
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG1_EN_BF_OFF (23)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG1_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG1_EN_BF_MSK (0x00800000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG1_EN_BF_DEF (0x00800000)

///< controls vref_swf value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG2_SEL_BF_OFF (24)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG2_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG2_SEL_BF_MSK (0x1F000000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG2_SEL_BF_DEF (0x0C000000)

///< enables vref_swf
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG2_EN_BF_OFF (29)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG2_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG2_EN_BF_MSK (0x20000000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REFGEN_SWFABRIC0_STG2_EN_BF_DEF (0x20000000)


/** @brief CMNANA_REFCKSEL_REGS_MSG_CMNANA_REFCKSEL_REGS_CMNREFGEN_CTRL3 register description at address offset 0x18
  *
  * Register default value:        0x00B2CB2C
  * Register full path in IP: CMNANA_REFCKSEL_regs_MSG/CMNANA_REFCKSEL_regs/cmnrefgen_ctrl3
  * cmnrefgen_ctrl3
  */

typedef union {
  struct {
    uint32_t REFGEN_SWFABRIC1_STG1_SEL : 5;
    ///< controls vref_swf value
    ///< AccessType="RW" BitOffset="0" ResetValue="0xC"
    uint32_t REFGEN_SWFABRIC1_STG1_EN : 1;
    ///< enables vref_swf
    ///< AccessType="RW" BitOffset="5" ResetValue="0x1"
    uint32_t REFGEN_SWFABRIC1_STG2_SEL : 5;
    ///< controls vref_swf value
    ///< AccessType="RW" BitOffset="6" ResetValue="0xC"
    uint32_t REFGEN_SWFABRIC1_STG2_EN : 1;
    ///< enables vref_swf
    ///< AccessType="RW" BitOffset="11" ResetValue="0x1"
    uint32_t REFGEN_SWFABRIC2_STG1_SEL : 5;
    ///< controls vref_swf value
    ///< AccessType="RW" BitOffset="12" ResetValue="0xC"
    uint32_t REFGEN_SWFABRIC2_STG1_EN : 1;
    ///< enables vref_swf
    ///< AccessType="RW" BitOffset="17" ResetValue="0x1"
    uint32_t REFGEN_SWFABRIC2_STG2_SEL : 5;
    ///< controls vref_swf value
    ///< AccessType="RW" BitOffset="18" ResetValue="0xC"
    uint32_t REFGEN_SWFABRIC2_STG2_EN : 1;
    ///< enables vref_swf
    ///< AccessType="RW" BitOffset="23" ResetValue="0x1"
    uint32_t  : 8;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_refcksel_msg_cmnrefgen_ctrl3_reg_t;

#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_DEFAULT (0x00b2cb2cU)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_RD_MASK (0x00ffffffU)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_WR_MASK (0x00ffffffU)


///< controls vref_swf value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG1_SEL_BF_OFF ( 0)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG1_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG1_SEL_BF_MSK (0x0000001F)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG1_SEL_BF_DEF (0x0000000C)

///< enables vref_swf
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG1_EN_BF_OFF ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG1_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG1_EN_BF_MSK (0x00000020)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG1_EN_BF_DEF (0x00000020)

///< controls vref_swf value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG2_SEL_BF_OFF ( 6)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG2_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG2_SEL_BF_MSK (0x000007C0)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG2_SEL_BF_DEF (0x00000300)

///< enables vref_swf
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG2_EN_BF_OFF (11)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG2_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG2_EN_BF_MSK (0x00000800)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC1_STG2_EN_BF_DEF (0x00000800)

///< controls vref_swf value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG1_SEL_BF_OFF (12)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG1_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG1_SEL_BF_MSK (0x0001F000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG1_SEL_BF_DEF (0x0000C000)

///< enables vref_swf
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG1_EN_BF_OFF (17)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG1_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG1_EN_BF_MSK (0x00020000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG1_EN_BF_DEF (0x00020000)

///< controls vref_swf value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG2_SEL_BF_OFF (18)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG2_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG2_SEL_BF_MSK (0x007C0000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG2_SEL_BF_DEF (0x00300000)

///< enables vref_swf
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG2_EN_BF_OFF (23)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG2_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG2_EN_BF_MSK (0x00800000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REFGEN_SWFABRIC2_STG2_EN_BF_DEF (0x00800000)


/** @brief CMNANA_REFCKSEL_REGS_MSG_CMNANA_REFCKSEL_REGS_CMNREFGEN_CTRL4 register description at address offset 0x1c
  *
  * Register default value:        0x00000B2C
  * Register full path in IP: CMNANA_REFCKSEL_regs_MSG/CMNANA_REFCKSEL_regs/cmnrefgen_ctrl4
  * cmnrefgen_ctrl4
  */

typedef union {
  struct {
    uint32_t REFGEN_SWFABRIC3_STG1_SEL : 5;
    ///< controls vref_swf value
    ///< AccessType="RW" BitOffset="0" ResetValue="0xC"
    uint32_t REFGEN_SWFABRIC3_STG1_EN : 1;
    ///< enables vref_swf
    ///< AccessType="RW" BitOffset="5" ResetValue="0x1"
    uint32_t REFGEN_SWFABRIC3_STG2_SEL : 5;
    ///< controls vref_swf value
    ///< AccessType="RW" BitOffset="6" ResetValue="0xC"
    uint32_t REFGEN_SWFABRIC3_STG2_EN : 1;
    ///< enables vref_swf
    ///< AccessType="RW" BitOffset="11" ResetValue="0x1"
    uint32_t REFGEN_PD_B : 1;
    ///< Enables refgen
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t REFGEN_DCMON_SEL : 8;
    ///< dcmon select bits,
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_refcksel_msg_cmnrefgen_ctrl4_reg_t;

#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_DEFAULT (0x00000b2cU)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_RD_MASK (0x001fffffU)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_WR_MASK (0x001fffffU)


///< controls vref_swf value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG1_SEL_BF_OFF ( 0)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG1_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG1_SEL_BF_MSK (0x0000001F)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG1_SEL_BF_DEF (0x0000000C)

///< enables vref_swf
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG1_EN_BF_OFF ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG1_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG1_EN_BF_MSK (0x00000020)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG1_EN_BF_DEF (0x00000020)

///< controls vref_swf value
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG2_SEL_BF_OFF ( 6)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG2_SEL_BF_WID ( 5)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG2_SEL_BF_MSK (0x000007C0)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG2_SEL_BF_DEF (0x00000300)

///< enables vref_swf
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG2_EN_BF_OFF (11)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG2_EN_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG2_EN_BF_MSK (0x00000800)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_SWFABRIC3_STG2_EN_BF_DEF (0x00000800)

///< Enables refgen
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_PD_B_BF_OFF (12)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_PD_B_BF_WID ( 1)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_PD_B_BF_MSK (0x00001000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_PD_B_BF_DEF (0x00000000)

///< dcmon select bits,
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_DCMON_SEL_BF_OFF (13)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_DCMON_SEL_BF_WID ( 8)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_DCMON_SEL_BF_MSK (0x001FE000)
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REFGEN_DCMON_SEL_BF_DEF (0x00000000)


/** @brief CMNANA_REFCKSEL_REGS_MSG_CMNANA_REFCKSEL_REGS_CMNREFCKSEL_SPARE0 register description at address offset 0x20
  *
  * Register default value:        0x0000E000
  * Register full path in IP: CMNANA_REFCKSEL_regs_MSG/CMNANA_REFCKSEL_regs/cmnrefcksel_spare0
  * cmnrefcksel_spare0
  */

typedef union {
  struct {
    uint32_t CMN_REFCKSEL_SPARE : 16;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0xE000"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_refcksel_msg_cmnrefcksel_spare0_reg_t;

#define CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_DEFAULT (0x0000e000U)
#define CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_RD_MASK (0x0000ffffU)
#define CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_WR_MASK (0x0000ffffU)


#define CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_CMN_REFCKSEL_SPARE_BF_OFF ( 0)
#define CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_CMN_REFCKSEL_SPARE_BF_WID (16)
#define CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_CMN_REFCKSEL_SPARE_BF_MSK (0x0000FFFF)
#define CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_CMN_REFCKSEL_SPARE_BF_DEF (0x0000E000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_REG(_BASE) ((cmnana_refcksel_msg_cmnchargepump_ctrl0_reg_t*) CMNANA_REFCKSEL_MSG_CMNCHARGEPUMP_CTRL0_ADR(_BASE))
#define CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_REG(_BASE) ((cmnana_refcksel_msg_cmnpllarefclk_ctrl0_reg_t*) CMNANA_REFCKSEL_MSG_CMNPLLAREFCLK_CTRL0_ADR(_BASE))
#define CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_REG(_BASE) ((cmnana_refcksel_msg_cmnpllbrefclk_ctrl0_reg_t*) CMNANA_REFCKSEL_MSG_CMNPLLBREFCLK_CTRL0_ADR(_BASE))
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_REG(_BASE) ((cmnana_refcksel_msg_cmnrefgen_ctrl0_reg_t*) CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL0_ADR(_BASE))
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_REG(_BASE) ((cmnana_refcksel_msg_cmnrefgen_ctrl1_reg_t*) CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL1_ADR(_BASE))
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_REG(_BASE) ((cmnana_refcksel_msg_cmnrefgen_ctrl2_reg_t*) CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL2_ADR(_BASE))
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_REG(_BASE) ((cmnana_refcksel_msg_cmnrefgen_ctrl3_reg_t*) CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL3_ADR(_BASE))
#define CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_REG(_BASE) ((cmnana_refcksel_msg_cmnrefgen_ctrl4_reg_t*) CMNANA_REFCKSEL_MSG_CMNREFGEN_CTRL4_ADR(_BASE))
#define CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_REG(_BASE) ((cmnana_refcksel_msg_cmnrefcksel_spare0_reg_t*) CMNANA_REFCKSEL_MSG_CMNREFCKSEL_SPARE0_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    cmnana_refcksel_msg_cmnchargepump_ctrl0_reg_t CMNCHARGEPUMP_CTRL0; /*< Address offset = 0x0 */
    cmnana_refcksel_msg_cmnpllarefclk_ctrl0_reg_t CMNPLLAREFCLK_CTRL0; /*< Address offset = 0x4 */
    cmnana_refcksel_msg_cmnpllbrefclk_ctrl0_reg_t CMNPLLBREFCLK_CTRL0; /*< Address offset = 0x8 */
    cmnana_refcksel_msg_cmnrefgen_ctrl0_reg_t CMNREFGEN_CTRL0; /*< Address offset = 0xc */
    cmnana_refcksel_msg_cmnrefgen_ctrl1_reg_t CMNREFGEN_CTRL1; /*< Address offset = 0x10 */
    cmnana_refcksel_msg_cmnrefgen_ctrl2_reg_t CMNREFGEN_CTRL2; /*< Address offset = 0x14 */
    cmnana_refcksel_msg_cmnrefgen_ctrl3_reg_t CMNREFGEN_CTRL3; /*< Address offset = 0x18 */
    cmnana_refcksel_msg_cmnrefgen_ctrl4_reg_t CMNREFGEN_CTRL4; /*< Address offset = 0x1c */
    cmnana_refcksel_msg_cmnrefcksel_spare0_reg_t CMNREFCKSEL_SPARE0; /*< Address offset = 0x20 */
} cmnana_refcksel_msg_t;     // size: 0x0024

// AddressSpace struct pointer
//
#define DLNK_JESD0_PHY_PMA0_CMNANA_REFCKSEL  ((cmnana_refcksel_msg_t*) DLNK_JESD0_PHY_PMA0_CMNANA_REFCKSEL_BASE)
#define DLNK_JESD1_PHY_PMA0_CMNANA_REFCKSEL  ((cmnana_refcksel_msg_t*) DLNK_JESD1_PHY_PMA0_CMNANA_REFCKSEL_BASE)
#define DLNK_JESD2_PHY_PMA0_CMNANA_REFCKSEL  ((cmnana_refcksel_msg_t*) DLNK_JESD2_PHY_PMA0_CMNANA_REFCKSEL_BASE)
#define DLNK_JESD3_PHY_PMA0_CMNANA_REFCKSEL  ((cmnana_refcksel_msg_t*) DLNK_JESD3_PHY_PMA0_CMNANA_REFCKSEL_BASE)

// ******************************************* /Address Space

#endif      // _CMNANA_REFCKSEL_MSG_H_

