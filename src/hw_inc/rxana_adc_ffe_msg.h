#ifndef _RXANA_ADC_FFE_MSG_H_
#define _RXANA_ADC_FFE_MSG_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_GLOBAL_BASE  ( 0x06027810 )
#define DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q0_BASE      ( 0x0602b810 )
#define DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q1_BASE      ( 0x0602f810 )
#define DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q2_BASE      ( 0x06033810 )
#define DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q3_BASE      ( 0x06037810 )
#define DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_GLOBAL_BASE  ( 0x06827810 )
#define DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q0_BASE      ( 0x0682b810 )
#define DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q1_BASE      ( 0x0682f810 )
#define DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q2_BASE      ( 0x06833810 )
#define DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q3_BASE      ( 0x06837810 )
#define DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_GLOBAL_BASE  ( 0x07027810 )
#define DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q0_BASE      ( 0x0702b810 )
#define DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q1_BASE      ( 0x0702f810 )
#define DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q2_BASE      ( 0x07033810 )
#define DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q3_BASE      ( 0x07037810 )
#define DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_GLOBAL_BASE  ( 0x07827810 )
#define DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q0_BASE      ( 0x0782b810 )
#define DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q1_BASE      ( 0x0782f810 )
#define DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q2_BASE      ( 0x07833810 )
#define DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q3_BASE      ( 0x07837810 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_OFFSET ( 0x00000000U )
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_OFFSET ( 0x00000004U )
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_OFFSET ( 0x00000008U )
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_OFFSET ( 0x0000000cU )
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_OFFSET ( 0x00000010U )
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_OFFSET ( 0x00000014U )
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_OFFSET ( 0x00000018U )
#define RXANA_ADC_FFE_MSG_Q0_DFX0_OFFSET ( 0x0000001cU )
#define RXANA_ADC_FFE_MSG_Q0_DFX2_OFFSET ( 0x00000020U )
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_OFFSET ( 0x00000024U )
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_OFFSET ( 0x00000028U )
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_OFFSET ( 0x0000002cU )
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_OFFSET ( 0x00000030U )
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_OFFSET ( 0x00000034U )
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_OFFSET ( 0x00000038U )
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_OFFSET ( 0x0000003cU )
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_OFFSET ( 0x00000040U )
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_OFFSET ( 0x00000044U )
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_OFFSET ( 0x00000048U )
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_OFFSET ( 0x0000004cU )
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_OFFSET ( 0x00000050U )
#define RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_OFFSET ( 0x00000054U )
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_OFFSET ( 0x00000058U )
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_OFFSET ( 0x0000005cU )
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_OFFSET ( 0x00000060U )
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_OFFSET ( 0x00000064U )
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_OFFSET ( 0x00000068U )
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_OFFSET ( 0x0000006cU )
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_OFFSET ( 0x00000070U )
#define RXANA_ADC_FFE_MSG_Q1_DFX0_OFFSET ( 0x00000074U )
#define RXANA_ADC_FFE_MSG_Q1_DFX2_OFFSET ( 0x00000078U )
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_OFFSET ( 0x0000007cU )
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_OFFSET ( 0x00000080U )
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_OFFSET ( 0x00000084U )
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_OFFSET ( 0x00000088U )
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_OFFSET ( 0x0000008cU )
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_OFFSET ( 0x00000090U )
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_OFFSET ( 0x00000094U )
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_OFFSET ( 0x00000098U )
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_OFFSET ( 0x0000009cU )
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_OFFSET ( 0x000000a0U )
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_OFFSET ( 0x000000a4U )
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_OFFSET ( 0x000000a8U )
#define RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_OFFSET ( 0x000000acU )
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_OFFSET ( 0x000000b0U )
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_OFFSET ( 0x000000b4U )
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_OFFSET ( 0x000000b8U )
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_OFFSET ( 0x000000bcU )
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_OFFSET ( 0x000000c0U )
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_OFFSET ( 0x000000c4U )
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_OFFSET ( 0x000000c8U )
#define RXANA_ADC_FFE_MSG_Q2_DFX0_OFFSET ( 0x000000ccU )
#define RXANA_ADC_FFE_MSG_Q2_DFX2_OFFSET ( 0x000000d0U )
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_OFFSET ( 0x000000d4U )
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_OFFSET ( 0x000000d8U )
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_OFFSET ( 0x000000dcU )
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_OFFSET ( 0x000000e0U )
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_OFFSET ( 0x000000e4U )
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_OFFSET ( 0x000000e8U )
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_OFFSET ( 0x000000ecU )
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_OFFSET ( 0x000000f0U )
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_OFFSET ( 0x000000f4U )
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_OFFSET ( 0x000000f8U )
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_OFFSET ( 0x000000fcU )
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_OFFSET ( 0x00000100U )
#define RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_OFFSET ( 0x00000104U )
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_OFFSET ( 0x00000108U )
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_OFFSET ( 0x0000010cU )
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_OFFSET ( 0x00000110U )
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_OFFSET ( 0x00000114U )
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_OFFSET ( 0x00000118U )
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_OFFSET ( 0x0000011cU )
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_OFFSET ( 0x00000120U )
#define RXANA_ADC_FFE_MSG_Q3_DFX0_OFFSET ( 0x00000124U )
#define RXANA_ADC_FFE_MSG_Q3_DFX2_OFFSET ( 0x00000128U )
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_OFFSET ( 0x0000012cU )
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_OFFSET ( 0x00000130U )
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_OFFSET ( 0x00000134U )
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_OFFSET ( 0x00000138U )
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_OFFSET ( 0x0000013cU )
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_OFFSET ( 0x00000140U )
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_OFFSET ( 0x00000144U )
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_OFFSET ( 0x00000148U )
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_OFFSET ( 0x0000014cU )
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_OFFSET ( 0x00000150U )
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_OFFSET ( 0x00000154U )
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_OFFSET ( 0x00000158U )
#define RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_OFFSET ( 0x0000015cU )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_FFE_CAP_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_DFX0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_DFX0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_DFX2_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_DFX2_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_FFE_CAP_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_DFX0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_DFX0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_DFX2_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_DFX2_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_FFE_CAP_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_DFX0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_DFX0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_DFX2_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_DFX2_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_FFE_CAP_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_DFX0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_DFX0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_DFX2_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_DFX2_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_OFFSET ) ))
#define RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_ADR(_BASE) (( ( _BASE ) + ( RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_FFE0_COEFF register description at address offset 0x0
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_ffe0_coeff
  * rxadc_q0_ffe0_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_FFE0_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE0 (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE0_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE0 (slice 0 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE0_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE0 <7> (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE0_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE0  (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_ffe0_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE0 (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE0 (slice 0 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE0 <7> (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE0  (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADCFE_Q0_FFE0_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_FFE1_COEFF register description at address offset 0x4
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_ffe1_coeff
  * rxadc_q0_ffe1_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_FFE1_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE1 (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE1_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE1 (slice1 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE1_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE1 <7> (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE1_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE1  (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_ffe1_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE1 (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE1 (slice1 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE1 <7> (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE1  (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADCFE_Q0_FFE1_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_FFE2_COEFF register description at address offset 0x8
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_ffe2_coeff
  * rxadc_q0_ffe2_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_FFE2_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE2 (slice 2 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE2_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE2 (slice2 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE2_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE2 <7> (slice 2 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE2_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE2  (slice 2 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_ffe2_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE2 (slice 2 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE2 (slice2 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE2 <7> (slice 2 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE2  (slice 2 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADCFE_Q0_FFE2_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_FFE3_COEFF register description at address offset 0xc
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_ffe3_coeff
  * rxadc_q0_ffe3_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_FFE3_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE3 (slice 3 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE3_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE3 (slice3 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE3_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE3 <7> (slice 3 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE3_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE3  (slice3 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_ffe3_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE3 (slice 3 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE3 (slice3 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE3 <7> (slice 3 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE3  (slice3 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADCFE_Q0_FFE3_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_FFE_DCD0 register description at address offset 0x10
  *
  * Register default value:        0x04040404
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_ffe_dcd0
  * rxadc_q0_ffe_dcd0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_FFE0_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE0
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t ADCFE_Q0_FFE1_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE1
    ///< AccessType="RW" BitOffset="8" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t ADCFE_Q0_FFE2_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t ADCFE_Q0_FFE3_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE3
    ///< AccessType="RW" BitOffset="24" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_ffe_dcd0_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_DEFAULT (0x04040404U)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_RD_MASK (0x0f0f0f0fU)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_WR_MASK (0x0f0f0f0fU)


///< DCD control of TH2 clock (first buffer) for the FFE0
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE0_TH2_DCD_STG1_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE0_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE0_TH2_DCD_STG1_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE0_TH2_DCD_STG1_BF_DEF (0x00000004)

///< DCD control of TH2 clock (first buffer) for the FFE1
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE1_TH2_DCD_STG1_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE1_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE1_TH2_DCD_STG1_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE1_TH2_DCD_STG1_BF_DEF (0x00000400)

///< DCD control of TH2 clock (first buffer) for the FFE2
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE2_TH2_DCD_STG1_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE2_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE2_TH2_DCD_STG1_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE2_TH2_DCD_STG1_BF_DEF (0x00040000)

///< DCD control of TH2 clock (first buffer) for the FFE3
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE3_TH2_DCD_STG1_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE3_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE3_TH2_DCD_STG1_BF_MSK (0x0F000000)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADCFE_Q0_FFE3_TH2_DCD_STG1_BF_DEF (0x04000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_FFE_DCD1 register description at address offset 0x14
  *
  * Register default value:        0x03030303
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_ffe_dcd1
  * rxadc_q0_ffe_dcd1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_FFE0_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE0
    ///< AccessType="RW" BitOffset="0" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
    uint32_t ADCFE_Q0_FFE1_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE1
    ///< AccessType="RW" BitOffset="8" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t ADCFE_Q0_FFE2_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
    uint32_t ADCFE_Q0_FFE3_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE3
    ///< AccessType="RW" BitOffset="24" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_ffe_dcd1_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_DEFAULT (0x03030303U)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_RD_MASK (0x07070707U)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_WR_MASK (0x07070707U)


///< DCD control of TH2 clock (second buffer) for the FFE0
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE0_TH2_DCD_STG2_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE0_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE0_TH2_DCD_STG2_BF_MSK (0x00000007)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE0_TH2_DCD_STG2_BF_DEF (0x00000003)

///< DCD control of TH2 clock (second buffer) for the FFE1
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE1_TH2_DCD_STG2_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE1_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE1_TH2_DCD_STG2_BF_MSK (0x00000700)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE1_TH2_DCD_STG2_BF_DEF (0x00000300)

///< DCD control of TH2 clock (second buffer) for the FFE2
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE2_TH2_DCD_STG2_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE2_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE2_TH2_DCD_STG2_BF_MSK (0x00070000)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE2_TH2_DCD_STG2_BF_DEF (0x00030000)

///< DCD control of TH2 clock (second buffer) for the FFE3
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE3_TH2_DCD_STG2_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE3_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE3_TH2_DCD_STG2_BF_MSK (0x07000000)
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADCFE_Q0_FFE3_TH2_DCD_STG2_BF_DEF (0x03000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_FFE_CAP register description at address offset 0x18
  *
  * Register default value:        0x09090909
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_ffe_cap
  * rxadc_q0_ffe_cap
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_CAP0 : 6;
    ///< Controls TH1 switch capacitance for Slice0 of each quartet
    ///< AccessType="RW" BitOffset="0" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="6" ResetValue="None"
    uint32_t ADCFE_Q0_CAP1 : 6;
    ///< Controls TH1 switch capacitance for Slice1 of each quartet
    ///< AccessType="RW" BitOffset="8" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="14" ResetValue="None"
    uint32_t ADCFE_Q0_CAP2 : 6;
    ///< Controls TH1 switch capacitance for Slice2 of each quartet
    ///< AccessType="RW" BitOffset="16" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="22" ResetValue="None"
    uint32_t ADCFE_Q0_CAP3 : 6;
    ///< Controls TH1 switch capacitance for Slice3 of each quartet
    ///< AccessType="RW" BitOffset="24" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_ffe_cap_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_DEFAULT (0x09090909U)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_RD_MASK (0x3f3f3f3fU)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_WR_MASK (0x3f3f3f3fU)


///< Controls TH1 switch capacitance for Slice0 of each quartet
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP0_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP0_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP0_BF_MSK (0x0000003F)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP0_BF_DEF (0x00000009)

///< Controls TH1 switch capacitance for Slice1 of each quartet
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP1_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP1_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP1_BF_MSK (0x00003F00)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP1_BF_DEF (0x00000900)

///< Controls TH1 switch capacitance for Slice2 of each quartet
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP2_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP2_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP2_BF_MSK (0x003F0000)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP2_BF_DEF (0x00090000)

///< Controls TH1 switch capacitance for Slice3 of each quartet
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP3_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP3_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP3_BF_MSK (0x3F000000)
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADCFE_Q0_CAP3_BF_DEF (0x09000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_DFX0 register description at address offset 0x1c
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_dfx0
  * rxadc_q0_dfx0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_TH1_DCMON_EN_B : 4;
    ///< enable dcmon for vcc1 of a particular slice within each quartet. <0>:
    ///< slice left<0>. <1>:: slice left<1>, <2>: slice right<0>, <3>: slice
    ///< right <1>
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_dfx0_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_DFX0_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q0_DFX0_RD_MASK (0x0000000fU)
#define RXANA_ADC_FFE_MSG_Q0_DFX0_WR_MASK (0x0000000fU)


///< enable dcmon for vcc1 of a particular slice within each quartet. <0>:
///< slice left<0>. <1>:: slice left<1>, <2>: slice right<0>, <3>: slice
///< right <1>
#define RXANA_ADC_FFE_MSG_Q0_DFX0_ADCFE_Q0_TH1_DCMON_EN_B_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_DFX0_ADCFE_Q0_TH1_DCMON_EN_B_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_DFX0_ADCFE_Q0_TH1_DCMON_EN_B_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q0_DFX0_ADCFE_Q0_TH1_DCMON_EN_B_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_DFX2 register description at address offset 0x20
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_dfx2
  * rxadc_q0_dfx2
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_PI_CLKMNTR_A_EN : 4;
    ///< TH1 clocka monitoring for FFE0 to FFE3
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q0_PI_CLKMNTR_B_EN : 4;
    ///< TH1 clockb monitoring for FFE0 to FFE3
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_dfx2_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_DFX2_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q0_DFX2_RD_MASK (0x000000ffU)
#define RXANA_ADC_FFE_MSG_Q0_DFX2_WR_MASK (0x000000ffU)


///< TH1 clocka monitoring for FFE0 to FFE3
#define RXANA_ADC_FFE_MSG_Q0_DFX2_ADCFE_Q0_PI_CLKMNTR_A_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_DFX2_ADCFE_Q0_PI_CLKMNTR_A_EN_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_DFX2_ADCFE_Q0_PI_CLKMNTR_A_EN_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q0_DFX2_ADCFE_Q0_PI_CLKMNTR_A_EN_BF_DEF (0x00000000)

///< TH1 clockb monitoring for FFE0 to FFE3
#define RXANA_ADC_FFE_MSG_Q0_DFX2_ADCFE_Q0_PI_CLKMNTR_B_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q0_DFX2_ADCFE_Q0_PI_CLKMNTR_B_EN_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_DFX2_ADCFE_Q0_PI_CLKMNTR_B_EN_BF_MSK (0x000000F0)
#define RXANA_ADC_FFE_MSG_Q0_DFX2_ADCFE_Q0_PI_CLKMNTR_B_EN_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_NEXTPHASE_CTRL0 register description at address offset 0x24
  *
  * Register default value:        0x00000008
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_nextphase_ctrl0
  * rxadc_q0_nextphase_ctrl0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_FFE0_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE1_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE2_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE3_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_nextphase_ctrl0_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_DEFAULT (0x00000008U)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_RD_MASK (0x0000000fU)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_WR_MASK (0x0000000fU)


///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE0_TH1_NXTPH_DELAY_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE0_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE0_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000001)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE0_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE1_TH1_NXTPH_DELAY_EN_BF_OFF ( 1)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE1_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE1_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000002)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE1_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE2_TH1_NXTPH_DELAY_EN_BF_OFF ( 2)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE2_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE2_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000004)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE2_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE3_TH1_NXTPH_DELAY_EN_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE3_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE3_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000008)
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADCFE_Q0_FFE3_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000008)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_BIAS_TRIM0 register description at address offset 0x28
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_bias_trim0
  * rxadc_q0_bias_trim0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_C00_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer0 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q0_NSF0_BIAS_TRIM : 4;
    ///< Trims gm of NSF0 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q0_CMFB0_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER0
    ///< of each quartet. 0000: Minimum current. 1111: maximum current. (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER0_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q0_SUMMER0_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_bias_trim0_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer0 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_C00_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_C00_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_C00_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_C00_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF0 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_NSF0_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_NSF0_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_NSF0_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_NSF0_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER0
///< of each quartet. 0000: Minimum current. 1111: maximum current. (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_CMFB0_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_CMFB0_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_CMFB0_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_CMFB0_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_SUMMER0_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_SUMMER0_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_SUMMER0_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_SUMMER0_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_SUMMER0_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_SUMMER0_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_SUMMER0_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADCFE_Q0_SUMMER0_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_BIAS_TRIM1 register description at address offset 0x2c
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_bias_trim1
  * rxadc_q0_bias_trim1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_C01_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer1 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q0_NSF1_BIAS_TRIM : 4;
    ///< Trims gm of NSF1 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q0_CMFB1_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER1
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER1_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q0_SUMMER1_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_bias_trim1_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer1 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_C01_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_C01_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_C01_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_C01_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF1 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_NSF1_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_NSF1_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_NSF1_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_NSF1_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER1
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_CMFB1_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_CMFB1_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_CMFB1_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_CMFB1_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_SUMMER1_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_SUMMER1_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_SUMMER1_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_SUMMER1_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_SUMMER1_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_SUMMER1_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_SUMMER1_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADCFE_Q0_SUMMER1_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_BIAS_TRIM2 register description at address offset 0x30
  *
  * Register default value:        0x00111110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_bias_trim2
  * rxadc_q0_bias_trim2
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_C02_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer2 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q0_NSF2_BIAS_TRIM : 4;
    ///< Trims gm of NSF2 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q0_CMFB2_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER2
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER2_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER2_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0x8"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_bias_trim2_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_DEFAULT (0x00111110U)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer2 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_C02_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_C02_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_C02_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_C02_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF2 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_NSF2_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_NSF2_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_NSF2_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_NSF2_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER2
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_CMFB2_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_CMFB2_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_CMFB2_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_CMFB2_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_SUMMER2_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_SUMMER2_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_SUMMER2_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_SUMMER2_OFC_BIAS_TRIM_BF_DEF (0x00010000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_SUMMER2_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_SUMMER2_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_SUMMER2_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADCFE_Q0_SUMMER2_VCASC_BIAS_TRIM_BF_DEF (0x00100000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_BIAS_TRIM3 register description at address offset 0x34
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_bias_trim3
  * rxadc_q0_bias_trim3
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_C03_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer3 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q0_NSF3_BIAS_TRIM : 4;
    ///< Trims gm of NSF3 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q0_CMFB3_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER3
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER3_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q0_SUMMER3_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_bias_trim3_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer3 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_C03_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_C03_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_C03_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_C03_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF3 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_NSF3_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_NSF3_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_NSF3_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_NSF3_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER3
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_CMFB3_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_CMFB3_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_CMFB3_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_CMFB3_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_SUMMER3_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_SUMMER3_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_SUMMER3_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_SUMMER3_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_SUMMER3_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_SUMMER3_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_SUMMER3_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADCFE_Q0_SUMMER3_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_BIAS_TRIM4 register description at address offset 0x38
  *
  * Register default value:        0x000658FF
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_bias_trim4
  * rxadc_q0_bias_trim4
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_C0BIAS_EN : 1;
    ///< Controls minim range of the main tap bias current. 0: Minimum=0, 1:
    ///< Minimum =32uA
    ///< AccessType="RW" BitOffset="0" ResetValue="0x1"
    uint32_t ADCFE_Q0_CMFBBIAS_EN : 1;
    ///< Enabling the main bias curren of the SUMMER CMFB circuit in each slice
    ///< of a quartet
    ///< AccessType="RW" BitOffset="1" ResetValue="0x1"
    uint32_t ADCFE_Q0_NSFBIAS_EN : 1;
    ///< Controls variation range of the NBIAS bias current of NSFs in each
    ///< quartet. 1: Full range, 0: Half range
    ///< AccessType="RW" BitOffset="2" ResetValue="0x1"
    uint32_t ADCFE_Q0_NSFBIASMAIN_EN : 1;
    ///< Enables diode connected bias master of all NSF blocks in each quartet.
    ///< 0: Disable, 1: Enable
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t ADCFE_Q0_SUMMERBIASMAIN_EN : 1;
    ///< Enables nmos master diode in the quartet bias of each quartet. 1=
    ///< Enable, 0= Disable
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q0_SUMMEROFCBIAS_EN : 1;
    ///< Controls minimum current range for the summer offset DAC. 0: Minimu=0,
    ///< 1: Minimum=32uA
    ///< AccessType="RW" BitOffset="5" ResetValue="0x1"
    uint32_t ADCFE_Q0_TAPBIASMAIN_EN : 1;
    ///< Enables diode connected main bias device of side tap currents in each
    ///< quartet.
    ///< AccessType="RW" BitOffset="6" ResetValue="0x1"
    uint32_t ADCFE_Q0_SUMMER_VCASC_BIAS_EN : 1;
    ///< Controls minimum bias for the casc reference generation. 0: Minimum
    ///< current=0, 1: minimum current =32uA.
    ///< AccessType="RW" BitOffset="7" ResetValue="0x1"
    uint32_t ADCFE_Q0_NSFBIASMAIN_TRIM : 4;
    ///< Trims NSF master bias current in each quartet. 0000: Maximum current,
    ///< 1111: minimum current
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMERBIASMAIN_TRIM : 4;
    ///< Binary triming size of the nmos master diode in adcfe quartet_bias
    ///< of each quartet. 00000=Maximum bias current trim,  11111= Minimum
    ///< bias current trim.
    ///< AccessType="RW" BitOffset="12" ResetValue="0x5"
    uint32_t ADCFE_Q0_TAPBIASMAIN_TRIM : 4;
    ///< Binary coded gm trim of side taps. Calibrate this register to assure
    ///< target tap gain at maximum setting is achieved. 0000: highest gm target,
    ///< 1111: Lowest gm target.
    ///< AccessType="RW" BitOffset="16" ResetValue="0x6"
    uint32_t  : 12;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_bias_trim4_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_DEFAULT (0x000658ffU)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_RD_MASK (0x000fffffU)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_WR_MASK (0x000fffffU)


///< Controls minim range of the main tap bias current. 0: Minimum=0, 1:
///< Minimum =32uA
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_C0BIAS_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_C0BIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_C0BIAS_EN_BF_MSK (0x00000001)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_C0BIAS_EN_BF_DEF (0x00000001)

///< Enabling the main bias curren of the SUMMER CMFB circuit in each slice
///< of a quartet
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_CMFBBIAS_EN_BF_OFF ( 1)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_CMFBBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_CMFBBIAS_EN_BF_MSK (0x00000002)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_CMFBBIAS_EN_BF_DEF (0x00000002)

///< Controls variation range of the NBIAS bias current of NSFs in each
///< quartet. 1: Full range, 0: Half range
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIAS_EN_BF_OFF ( 2)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIAS_EN_BF_MSK (0x00000004)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIAS_EN_BF_DEF (0x00000004)

///< Enables diode connected bias master of all NSF blocks in each quartet.
///< 0: Disable, 1: Enable
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIASMAIN_EN_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIASMAIN_EN_BF_MSK (0x00000008)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIASMAIN_EN_BF_DEF (0x00000008)

///< Enables nmos master diode in the quartet bias of each quartet. 1=
///< Enable, 0= Disable
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMERBIASMAIN_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMERBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMERBIASMAIN_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMERBIASMAIN_EN_BF_DEF (0x00000010)

///< Controls minimum current range for the summer offset DAC. 0: Minimu=0,
///< 1: Minimum=32uA
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMEROFCBIAS_EN_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMEROFCBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMEROFCBIAS_EN_BF_MSK (0x00000020)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMEROFCBIAS_EN_BF_DEF (0x00000020)

///< Enables diode connected main bias device of side tap currents in each
///< quartet.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_TAPBIASMAIN_EN_BF_OFF ( 6)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_TAPBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_TAPBIASMAIN_EN_BF_MSK (0x00000040)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_TAPBIASMAIN_EN_BF_DEF (0x00000040)

///< Controls minimum bias for the casc reference generation. 0: Minimum
///< current=0, 1: minimum current =32uA.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMER_VCASC_BIAS_EN_BF_OFF ( 7)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMER_VCASC_BIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMER_VCASC_BIAS_EN_BF_MSK (0x00000080)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMER_VCASC_BIAS_EN_BF_DEF (0x00000080)

///< Trims NSF master bias current in each quartet. 0000: Maximum current,
///< 1111: minimum current
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIASMAIN_TRIM_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIASMAIN_TRIM_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_NSFBIASMAIN_TRIM_BF_DEF (0x00000800)

///< Binary triming size of the nmos master diode in adcfe quartet_bias
///< of each quartet. 00000=Maximum bias current trim,  11111= Minimum
///< bias current trim.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMERBIASMAIN_TRIM_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMERBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMERBIASMAIN_TRIM_BF_MSK (0x0000F000)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_SUMMERBIASMAIN_TRIM_BF_DEF (0x00005000)

///< Binary coded gm trim of side taps. Calibrate this register to assure
///< target tap gain at maximum setting is achieved. 0000: highest gm target,
///< 1111: Lowest gm target.
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_TAPBIASMAIN_TRIM_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_TAPBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_TAPBIASMAIN_TRIM_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADCFE_Q0_TAPBIASMAIN_TRIM_BF_DEF (0x00060000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_SUMMER_OFC register description at address offset 0x3c
  *
  * Register default value:        0x60606060
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_summer_ofc
  * rxadc_q0_summer_ofc
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_SUMMER0_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="0" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
    uint32_t ADCFE_Q0_SUMMER1_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="8" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
    uint32_t ADCFE_Q0_SUMMER2_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="16" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t ADCFE_Q0_SUMMER3_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="24" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="31" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_summer_ofc_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_DEFAULT (0x60606060U)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_RD_MASK (0x7f7f7f7fU)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_WR_MASK (0x7f7f7f7fU)


///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER0_OFC_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER0_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER0_OFC_GRY_BF_MSK (0x0000007F)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER0_OFC_GRY_BF_DEF (0x00000060)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER1_OFC_GRY_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER1_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER1_OFC_GRY_BF_MSK (0x00007F00)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER1_OFC_GRY_BF_DEF (0x00006000)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER2_OFC_GRY_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER2_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER2_OFC_GRY_BF_MSK (0x007F0000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER2_OFC_GRY_BF_DEF (0x00600000)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER3_OFC_GRY_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER3_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER3_OFC_GRY_BF_MSK (0x7F000000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADCFE_Q0_SUMMER3_OFC_GRY_BF_DEF (0x60000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_SUMMER_CMFB register description at address offset 0x40
  *
  * Register default value:        0x18181818
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_summer_cmfb
  * rxadc_q0_summer_cmfb
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_SUMMER0_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. GRAY CODE!
    ///< MSB bit enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER0_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
    uint32_t ADCFE_Q0_SUMMER1_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER1_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="12" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="13" ResetValue="None"
    uint32_t ADCFE_Q0_SUMMER2_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER2_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="20" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
    uint32_t ADCFE_Q0_SUMMER3_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER3_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="28" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="29" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_summer_cmfb_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_DEFAULT (0x18181818U)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_RD_MASK (0x1f1f1f1fU)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_WR_MASK (0x1f1f1f1fU)


///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. GRAY CODE!
///< MSB bit enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER0_CMFB_OFC_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER0_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER0_CMFB_OFC_GRY_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER0_CMFB_OFC_GRY_BF_DEF (0x00000008)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER0_CMFB_OPAMP_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER0_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER0_CMFB_OPAMP_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER0_CMFB_OPAMP_EN_BF_DEF (0x00000010)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER1_CMFB_OFC_GRY_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER1_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER1_CMFB_OFC_GRY_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER1_CMFB_OFC_GRY_BF_DEF (0x00000800)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER1_CMFB_OPAMP_EN_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER1_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER1_CMFB_OPAMP_EN_BF_MSK (0x00001000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER1_CMFB_OPAMP_EN_BF_DEF (0x00001000)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER2_CMFB_OFC_GRY_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER2_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER2_CMFB_OFC_GRY_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER2_CMFB_OFC_GRY_BF_DEF (0x00080000)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER2_CMFB_OPAMP_EN_BF_OFF (20)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER2_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER2_CMFB_OPAMP_EN_BF_MSK (0x00100000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER2_CMFB_OPAMP_EN_BF_DEF (0x00100000)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER3_CMFB_OFC_GRY_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER3_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER3_CMFB_OFC_GRY_BF_MSK (0x0F000000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER3_CMFB_OFC_GRY_BF_DEF (0x08000000)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER3_CMFB_OPAMP_EN_BF_OFF (28)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER3_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER3_CMFB_OPAMP_EN_BF_MSK (0x10000000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADCFE_Q0_SUMMER3_CMFB_OPAMP_EN_BF_DEF (0x10000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_SUMMER_RES register description at address offset 0x44
  *
  * Register default value:        0x88888888
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_summer_res
  * rxadc_q0_summer_res
  */

typedef union {
  struct {
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="0" ResetValue="None"
    uint32_t ADCFE_Q0_SUMMER0_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="3" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
    uint32_t ADCFE_Q0_SUMMER1_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="11" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
    uint32_t ADCFE_Q0_SUMMER2_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="19" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
    uint32_t ADCFE_Q0_SUMMER3_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="27" ResetValue="0x11"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_summer_res_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_DEFAULT (0x88888888U)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_RD_MASK (0xf8f8f8f8U)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_WR_MASK (0xf8f8f8f8U)


///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER0_RES_GRY_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER0_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER0_RES_GRY_BF_MSK (0x000000F8)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER0_RES_GRY_BF_DEF (0x00000088)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER1_RES_GRY_BF_OFF (11)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER1_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER1_RES_GRY_BF_MSK (0x0000F800)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER1_RES_GRY_BF_DEF (0x00008800)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER2_RES_GRY_BF_OFF (19)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER2_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER2_RES_GRY_BF_MSK (0x00F80000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER2_RES_GRY_BF_DEF (0x00880000)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER3_RES_GRY_BF_OFF (27)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER3_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER3_RES_GRY_BF_MSK (0xF8000000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADCFE_Q0_SUMMER3_RES_GRY_BF_DEF (0x88000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_SUMMER_VCASC register description at address offset 0x48
  *
  * Register default value:        0x00018888
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_summer_vcasc
  * rxadc_q0_summer_vcasc
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_SUMMER0_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER1_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="4" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER2_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER3_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="12" ResetValue="0x8"
    uint32_t ADCFE_Q0_SUMMER_VCASC_BLEED_EN : 1;
    ///< Controls minimum casc beed current bias. 0: Minimum current =0, 1:
    ///< Minimum current =15uA
    ///< AccessType="RW" BitOffset="16" ResetValue="0x1"
    uint32_t  : 15;
    ///< Reserved
    ///< AccessType="RO" BitOffset="17" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_summer_vcasc_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_DEFAULT (0x00018888U)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_RD_MASK (0x0001ffffU)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_WR_MASK (0x0001ffffU)


///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER0_VCASC_BLEED_TRIM_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER0_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER0_VCASC_BLEED_TRIM_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER0_VCASC_BLEED_TRIM_BF_DEF (0x00000008)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER1_VCASC_BLEED_TRIM_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER1_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER1_VCASC_BLEED_TRIM_BF_MSK (0x000000F0)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER1_VCASC_BLEED_TRIM_BF_DEF (0x00000080)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER2_VCASC_BLEED_TRIM_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER2_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER2_VCASC_BLEED_TRIM_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER2_VCASC_BLEED_TRIM_BF_DEF (0x00000800)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER3_VCASC_BLEED_TRIM_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER3_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER3_VCASC_BLEED_TRIM_BF_MSK (0x0000F000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER3_VCASC_BLEED_TRIM_BF_DEF (0x00008000)

///< Controls minimum casc beed current bias. 0: Minimum current =0, 1:
///< Minimum current =15uA
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER_VCASC_BLEED_EN_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER_VCASC_BLEED_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER_VCASC_BLEED_EN_BF_MSK (0x00010000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADCFE_Q0_SUMMER_VCASC_BLEED_EN_BF_DEF (0x00010000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_SUMMER_CTRL0 register description at address offset 0x4c
  *
  * Register default value:        0x00000210
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_summer_ctrl0
  * rxadc_q0_summer_ctrl0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_SUMMER0_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER0_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q0_SUMMER1_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER1_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_summer_ctrl0_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_DEFAULT (0x00000210U)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_RD_MASK (0x000003ffU)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_WR_MASK (0x000003ffU)


///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER0_DFX_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER0_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER0_DFX_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER0_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER0_C0_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER0_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER0_C0_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER0_C0_EN_BF_DEF (0x00000010)

///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER1_DFX_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER1_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER1_DFX_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER1_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER1_C0_EN_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER1_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER1_C0_EN_BF_MSK (0x00000200)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADCFE_Q0_SUMMER1_C0_EN_BF_DEF (0x00000200)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_SUMMER_CTRL1 register description at address offset 0x50
  *
  * Register default value:        0x00000210
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_summer_ctrl1
  * rxadc_q0_summer_ctrl1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_SUMMER2_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER2_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q0_SUMMER3_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER3_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t ADCFE_Q0_PD_B : 1;
    ///< Full power down of each of the q0/q1/q2/q3 quartets
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t ADCFE_Q0_FFE_PD_B : 1;
    ///< Powers down FFE only at each q0/q1/q2/q3 quartet
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER0_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER0_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER1_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="14" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER1_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER2_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER2_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER3_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER3_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="19" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER0_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER1_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="23" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER2_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="26" ResetValue="0x0"
    uint32_t ADCFE_Q0_SUMMER3_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="29" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_summer_ctrl1_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_DEFAULT (0x00000210U)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_WR_MASK (0xffffffffU)


///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_DFX_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_DFX_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_C0_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_C0_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_C0_EN_BF_DEF (0x00000010)

///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_DFX_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_DFX_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_C0_EN_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_C0_EN_BF_MSK (0x00000200)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_C0_EN_BF_DEF (0x00000200)

///< Full power down of each of the q0/q1/q2/q3 quartets
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_PD_B_BF_OFF (10)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_PD_B_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_PD_B_BF_MSK (0x00000400)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_PD_B_BF_DEF (0x00000000)

///< Powers down FFE only at each q0/q1/q2/q3 quartet
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_FFE_PD_B_BF_OFF (11)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_FFE_PD_B_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_FFE_PD_B_BF_MSK (0x00000800)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_FFE_PD_B_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_CMFB_OFC_SPARE_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_CMFB_OFC_SPARE_BF_MSK (0x00001000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_OFC_SPARE_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_OFC_SPARE_BF_MSK (0x00002000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_CMFB_OFC_SPARE_BF_OFF (14)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_CMFB_OFC_SPARE_BF_MSK (0x00004000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_OFC_SPARE_BF_OFF (15)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_OFC_SPARE_BF_MSK (0x00008000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_CMFB_OFC_SPARE_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_CMFB_OFC_SPARE_BF_MSK (0x00010000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_OFC_SPARE_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_OFC_SPARE_BF_MSK (0x00020000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_CMFB_OFC_SPARE_BF_OFF (18)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_CMFB_OFC_SPARE_BF_MSK (0x00040000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_OFC_SPARE_BF_OFF (19)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_OFC_SPARE_BF_MSK (0x00080000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_RES_SPARE_BF_OFF (20)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_RES_SPARE_BF_MSK (0x00700000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER0_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_RES_SPARE_BF_OFF (23)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_RES_SPARE_BF_MSK (0x03800000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER1_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_RES_SPARE_BF_OFF (26)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_RES_SPARE_BF_MSK (0x1C000000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER2_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_RES_SPARE_BF_OFF (29)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_RES_SPARE_BF_MSK (0xE0000000)
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADCFE_Q0_SUMMER3_RES_SPARE_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q0_FFE_SPARE0 register description at address offset 0x54
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q0_ffe_spare0
  * rxadc_q0_ffe_spare0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q0_SPARE : 24;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 8;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q0_ffe_spare0_reg_t;

#define RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_RD_MASK (0x00ffffffU)
#define RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_WR_MASK (0x00ffffffU)


#define RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_ADCFE_Q0_SPARE_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_ADCFE_Q0_SPARE_BF_WID (24)
#define RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_ADCFE_Q0_SPARE_BF_MSK (0x00FFFFFF)
#define RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_ADCFE_Q0_SPARE_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_FFE0_COEFF register description at address offset 0x58
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_ffe0_coeff
  * rxadc_q1_ffe0_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_FFE0_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE0 (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE0_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE0 (slice 0 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE0_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE0 <7> (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE0_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE0  (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_ffe0_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE0 (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE0 (slice 0 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE0 <7> (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE0  (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADCFE_Q1_FFE0_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_FFE1_COEFF register description at address offset 0x5c
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_ffe1_coeff
  * rxadc_q1_ffe1_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_FFE1_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE1 (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE1_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE1 (slice1 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE1_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE1 <7> (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE1_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE1  (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_ffe1_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE1 (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE1 (slice1 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE1 <7> (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE1  (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADCFE_Q1_FFE1_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_FFE2_COEFF register description at address offset 0x60
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_ffe2_coeff
  * rxadc_q1_ffe2_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_FFE2_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE2 (slice 2 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE2_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE2 (slice2 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE2_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE2 <7> (slice 2 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE2_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE2  (slice 2 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_ffe2_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE2 (slice 2 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE2 (slice2 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE2 <7> (slice 2 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE2  (slice 2 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADCFE_Q1_FFE2_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_FFE3_COEFF register description at address offset 0x64
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_ffe3_coeff
  * rxadc_q1_ffe3_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_FFE3_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE3 (slice 3 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE3_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE3 (slice3 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE3_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE3 <7> (slice 3 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE3_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE3  (slice3 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_ffe3_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE3 (slice 3 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE3 (slice3 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE3 <7> (slice 3 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE3  (slice3 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADCFE_Q1_FFE3_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_FFE_DCD0 register description at address offset 0x68
  *
  * Register default value:        0x04040404
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_ffe_dcd0
  * rxadc_q1_ffe_dcd0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_FFE0_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE0
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t ADCFE_Q1_FFE1_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE1
    ///< AccessType="RW" BitOffset="8" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t ADCFE_Q1_FFE2_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t ADCFE_Q1_FFE3_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE3
    ///< AccessType="RW" BitOffset="24" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_ffe_dcd0_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_DEFAULT (0x04040404U)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_RD_MASK (0x0f0f0f0fU)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_WR_MASK (0x0f0f0f0fU)


///< DCD control of TH2 clock (first buffer) for the FFE0
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE0_TH2_DCD_STG1_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE0_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE0_TH2_DCD_STG1_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE0_TH2_DCD_STG1_BF_DEF (0x00000004)

///< DCD control of TH2 clock (first buffer) for the FFE1
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE1_TH2_DCD_STG1_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE1_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE1_TH2_DCD_STG1_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE1_TH2_DCD_STG1_BF_DEF (0x00000400)

///< DCD control of TH2 clock (first buffer) for the FFE2
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE2_TH2_DCD_STG1_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE2_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE2_TH2_DCD_STG1_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE2_TH2_DCD_STG1_BF_DEF (0x00040000)

///< DCD control of TH2 clock (first buffer) for the FFE3
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE3_TH2_DCD_STG1_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE3_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE3_TH2_DCD_STG1_BF_MSK (0x0F000000)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADCFE_Q1_FFE3_TH2_DCD_STG1_BF_DEF (0x04000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_FFE_DCD1 register description at address offset 0x6c
  *
  * Register default value:        0x03030303
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_ffe_dcd1
  * rxadc_q1_ffe_dcd1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_FFE0_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE0
    ///< AccessType="RW" BitOffset="0" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
    uint32_t ADCFE_Q1_FFE1_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE1
    ///< AccessType="RW" BitOffset="8" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t ADCFE_Q1_FFE2_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
    uint32_t ADCFE_Q1_FFE3_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE3
    ///< AccessType="RW" BitOffset="24" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_ffe_dcd1_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_DEFAULT (0x03030303U)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_RD_MASK (0x07070707U)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_WR_MASK (0x07070707U)


///< DCD control of TH2 clock (second buffer) for the FFE0
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE0_TH2_DCD_STG2_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE0_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE0_TH2_DCD_STG2_BF_MSK (0x00000007)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE0_TH2_DCD_STG2_BF_DEF (0x00000003)

///< DCD control of TH2 clock (second buffer) for the FFE1
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE1_TH2_DCD_STG2_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE1_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE1_TH2_DCD_STG2_BF_MSK (0x00000700)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE1_TH2_DCD_STG2_BF_DEF (0x00000300)

///< DCD control of TH2 clock (second buffer) for the FFE2
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE2_TH2_DCD_STG2_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE2_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE2_TH2_DCD_STG2_BF_MSK (0x00070000)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE2_TH2_DCD_STG2_BF_DEF (0x00030000)

///< DCD control of TH2 clock (second buffer) for the FFE3
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE3_TH2_DCD_STG2_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE3_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE3_TH2_DCD_STG2_BF_MSK (0x07000000)
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADCFE_Q1_FFE3_TH2_DCD_STG2_BF_DEF (0x03000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_FFE_CAP register description at address offset 0x70
  *
  * Register default value:        0x09090909
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_ffe_cap
  * rxadc_q1_ffe_cap
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_CAP0 : 6;
    ///< Controls TH1 switch capacitance for Slice0 of each quartet
    ///< AccessType="RW" BitOffset="0" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="6" ResetValue="None"
    uint32_t ADCFE_Q1_CAP1 : 6;
    ///< Controls TH1 switch capacitance for Slice1 of each quartet
    ///< AccessType="RW" BitOffset="8" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="14" ResetValue="None"
    uint32_t ADCFE_Q1_CAP2 : 6;
    ///< Controls TH1 switch capacitance for Slice2 of each quartet
    ///< AccessType="RW" BitOffset="16" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="22" ResetValue="None"
    uint32_t ADCFE_Q1_CAP3 : 6;
    ///< Controls TH1 switch capacitance for Slice3 of each quartet
    ///< AccessType="RW" BitOffset="24" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_ffe_cap_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_DEFAULT (0x09090909U)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_RD_MASK (0x3f3f3f3fU)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_WR_MASK (0x3f3f3f3fU)


///< Controls TH1 switch capacitance for Slice0 of each quartet
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP0_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP0_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP0_BF_MSK (0x0000003F)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP0_BF_DEF (0x00000009)

///< Controls TH1 switch capacitance for Slice1 of each quartet
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP1_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP1_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP1_BF_MSK (0x00003F00)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP1_BF_DEF (0x00000900)

///< Controls TH1 switch capacitance for Slice2 of each quartet
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP2_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP2_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP2_BF_MSK (0x003F0000)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP2_BF_DEF (0x00090000)

///< Controls TH1 switch capacitance for Slice3 of each quartet
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP3_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP3_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP3_BF_MSK (0x3F000000)
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADCFE_Q1_CAP3_BF_DEF (0x09000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_DFX0 register description at address offset 0x74
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_dfx0
  * rxadc_q1_dfx0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_TH1_DCMON_EN_B : 4;
    ///< enable dcmon for vcc1 of a particular slice within each quartet. <0>:
    ///< slice left<0>. <1>:: slice left<1>, <2>: slice right<0>, <3>: slice
    ///< right <1>
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_dfx0_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_DFX0_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q1_DFX0_RD_MASK (0x0000000fU)
#define RXANA_ADC_FFE_MSG_Q1_DFX0_WR_MASK (0x0000000fU)


///< enable dcmon for vcc1 of a particular slice within each quartet. <0>:
///< slice left<0>. <1>:: slice left<1>, <2>: slice right<0>, <3>: slice
///< right <1>
#define RXANA_ADC_FFE_MSG_Q1_DFX0_ADCFE_Q1_TH1_DCMON_EN_B_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_DFX0_ADCFE_Q1_TH1_DCMON_EN_B_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_DFX0_ADCFE_Q1_TH1_DCMON_EN_B_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q1_DFX0_ADCFE_Q1_TH1_DCMON_EN_B_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_DFX2 register description at address offset 0x78
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_dfx2
  * rxadc_q1_dfx2
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_PI_CLKMNTR_A_EN : 4;
    ///< TH1 clocka monitoring for FFE0 to FFE3
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q1_PI_CLKMNTR_B_EN : 4;
    ///< TH1 clockb monitoring for FFE0 to FFE3
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_dfx2_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_DFX2_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q1_DFX2_RD_MASK (0x000000ffU)
#define RXANA_ADC_FFE_MSG_Q1_DFX2_WR_MASK (0x000000ffU)


///< TH1 clocka monitoring for FFE0 to FFE3
#define RXANA_ADC_FFE_MSG_Q1_DFX2_ADCFE_Q1_PI_CLKMNTR_A_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_DFX2_ADCFE_Q1_PI_CLKMNTR_A_EN_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_DFX2_ADCFE_Q1_PI_CLKMNTR_A_EN_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q1_DFX2_ADCFE_Q1_PI_CLKMNTR_A_EN_BF_DEF (0x00000000)

///< TH1 clockb monitoring for FFE0 to FFE3
#define RXANA_ADC_FFE_MSG_Q1_DFX2_ADCFE_Q1_PI_CLKMNTR_B_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q1_DFX2_ADCFE_Q1_PI_CLKMNTR_B_EN_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_DFX2_ADCFE_Q1_PI_CLKMNTR_B_EN_BF_MSK (0x000000F0)
#define RXANA_ADC_FFE_MSG_Q1_DFX2_ADCFE_Q1_PI_CLKMNTR_B_EN_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_NEXTPHASE_CTRL0 register description at address offset 0x7c
  *
  * Register default value:        0x00000008
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_nextphase_ctrl0
  * rxadc_q1_nextphase_ctrl0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_FFE0_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE1_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE2_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE3_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_nextphase_ctrl0_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_DEFAULT (0x00000008U)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_RD_MASK (0x0000000fU)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_WR_MASK (0x0000000fU)


///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE0_TH1_NXTPH_DELAY_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE0_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE0_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000001)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE0_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE1_TH1_NXTPH_DELAY_EN_BF_OFF ( 1)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE1_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE1_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000002)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE1_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE2_TH1_NXTPH_DELAY_EN_BF_OFF ( 2)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE2_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE2_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000004)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE2_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE3_TH1_NXTPH_DELAY_EN_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE3_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE3_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000008)
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADCFE_Q1_FFE3_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000008)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_BIAS_TRIM0 register description at address offset 0x80
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_bias_trim0
  * rxadc_q1_bias_trim0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_C00_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer0 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q1_NSF0_BIAS_TRIM : 4;
    ///< Trims gm of NSF0 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q1_CMFB0_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER0
    ///< of each quartet. 0000: Minimum current. 1111: maximum current. (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER0_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q1_SUMMER0_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_bias_trim0_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer0 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_C00_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_C00_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_C00_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_C00_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF0 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_NSF0_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_NSF0_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_NSF0_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_NSF0_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER0
///< of each quartet. 0000: Minimum current. 1111: maximum current. (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_CMFB0_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_CMFB0_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_CMFB0_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_CMFB0_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_SUMMER0_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_SUMMER0_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_SUMMER0_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_SUMMER0_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_SUMMER0_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_SUMMER0_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_SUMMER0_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADCFE_Q1_SUMMER0_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_BIAS_TRIM1 register description at address offset 0x84
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_bias_trim1
  * rxadc_q1_bias_trim1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_C01_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer1 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q1_NSF1_BIAS_TRIM : 4;
    ///< Trims gm of NSF1 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q1_CMFB1_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER1
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER1_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q1_SUMMER1_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_bias_trim1_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer1 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_C01_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_C01_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_C01_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_C01_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF1 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_NSF1_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_NSF1_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_NSF1_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_NSF1_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER1
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_CMFB1_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_CMFB1_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_CMFB1_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_CMFB1_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_SUMMER1_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_SUMMER1_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_SUMMER1_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_SUMMER1_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_SUMMER1_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_SUMMER1_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_SUMMER1_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADCFE_Q1_SUMMER1_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_BIAS_TRIM2 register description at address offset 0x88
  *
  * Register default value:        0x00111110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_bias_trim2
  * rxadc_q1_bias_trim2
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_C02_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer2 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q1_NSF2_BIAS_TRIM : 4;
    ///< Trims gm of NSF2 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q1_CMFB2_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER2
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER2_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER2_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0x8"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_bias_trim2_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_DEFAULT (0x00111110U)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer2 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_C02_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_C02_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_C02_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_C02_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF2 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_NSF2_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_NSF2_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_NSF2_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_NSF2_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER2
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_CMFB2_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_CMFB2_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_CMFB2_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_CMFB2_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_SUMMER2_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_SUMMER2_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_SUMMER2_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_SUMMER2_OFC_BIAS_TRIM_BF_DEF (0x00010000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_SUMMER2_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_SUMMER2_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_SUMMER2_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADCFE_Q1_SUMMER2_VCASC_BIAS_TRIM_BF_DEF (0x00100000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_BIAS_TRIM3 register description at address offset 0x8c
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_bias_trim3
  * rxadc_q1_bias_trim3
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_C03_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer3 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q1_NSF3_BIAS_TRIM : 4;
    ///< Trims gm of NSF3 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q1_CMFB3_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER3
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER3_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q1_SUMMER3_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_bias_trim3_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer3 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_C03_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_C03_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_C03_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_C03_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF3 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_NSF3_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_NSF3_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_NSF3_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_NSF3_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER3
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_CMFB3_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_CMFB3_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_CMFB3_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_CMFB3_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_SUMMER3_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_SUMMER3_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_SUMMER3_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_SUMMER3_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_SUMMER3_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_SUMMER3_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_SUMMER3_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADCFE_Q1_SUMMER3_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_BIAS_TRIM4 register description at address offset 0x90
  *
  * Register default value:        0x000658FF
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_bias_trim4
  * rxadc_q1_bias_trim4
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_C0BIAS_EN : 1;
    ///< Controls minim range of the main tap bias current. 0: Minimum=0, 1:
    ///< Minimum =32uA
    ///< AccessType="RW" BitOffset="0" ResetValue="0x1"
    uint32_t ADCFE_Q1_CMFBBIAS_EN : 1;
    ///< Enabling the main bias curren of the SUMMER CMFB circuit in each slice
    ///< of a quartet
    ///< AccessType="RW" BitOffset="1" ResetValue="0x1"
    uint32_t ADCFE_Q1_NSFBIAS_EN : 1;
    ///< Controls variation range of the NBIAS bias current of NSFs in each
    ///< quartet. 1: Full range, 0: Half range
    ///< AccessType="RW" BitOffset="2" ResetValue="0x1"
    uint32_t ADCFE_Q1_NSFBIASMAIN_EN : 1;
    ///< Enables diode connected bias master of all NSF blocks in each quartet.
    ///< 0: Disable, 1: Enable
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t ADCFE_Q1_SUMMERBIASMAIN_EN : 1;
    ///< Enables nmos master diode in the quartet bias of each quartet. 1=
    ///< Enable, 0= Disable
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q1_SUMMEROFCBIAS_EN : 1;
    ///< Controls minimum current range for the summer offset DAC. 0: Minimu=0,
    ///< 1: Minimum=32uA
    ///< AccessType="RW" BitOffset="5" ResetValue="0x1"
    uint32_t ADCFE_Q1_TAPBIASMAIN_EN : 1;
    ///< Enables diode connected main bias device of side tap currents in each
    ///< quartet.
    ///< AccessType="RW" BitOffset="6" ResetValue="0x1"
    uint32_t ADCFE_Q1_SUMMER_VCASC_BIAS_EN : 1;
    ///< Controls minimum bias for the casc reference generation. 0: Minimum
    ///< current=0, 1: minimum current =32uA.
    ///< AccessType="RW" BitOffset="7" ResetValue="0x1"
    uint32_t ADCFE_Q1_NSFBIASMAIN_TRIM : 4;
    ///< Trims NSF master bias current in each quartet. 0000: Maximum current,
    ///< 1111: minimum current
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMERBIASMAIN_TRIM : 4;
    ///< Binary triming size of the nmos master diode in adcfe quartet_bias
    ///< of each quartet. 00000=Maximum bias current trim,  11111= Minimum
    ///< bias current trim.
    ///< AccessType="RW" BitOffset="12" ResetValue="0x5"
    uint32_t ADCFE_Q1_TAPBIASMAIN_TRIM : 4;
    ///< Binary coded gm trim of side taps. Calibrate this register to assure
    ///< target tap gain at maximum setting is achieved. 0000: highest gm target,
    ///< 1111: Lowest gm target.
    ///< AccessType="RW" BitOffset="16" ResetValue="0x6"
    uint32_t  : 12;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_bias_trim4_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_DEFAULT (0x000658ffU)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_RD_MASK (0x000fffffU)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_WR_MASK (0x000fffffU)


///< Controls minim range of the main tap bias current. 0: Minimum=0, 1:
///< Minimum =32uA
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_C0BIAS_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_C0BIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_C0BIAS_EN_BF_MSK (0x00000001)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_C0BIAS_EN_BF_DEF (0x00000001)

///< Enabling the main bias curren of the SUMMER CMFB circuit in each slice
///< of a quartet
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_CMFBBIAS_EN_BF_OFF ( 1)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_CMFBBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_CMFBBIAS_EN_BF_MSK (0x00000002)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_CMFBBIAS_EN_BF_DEF (0x00000002)

///< Controls variation range of the NBIAS bias current of NSFs in each
///< quartet. 1: Full range, 0: Half range
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIAS_EN_BF_OFF ( 2)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIAS_EN_BF_MSK (0x00000004)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIAS_EN_BF_DEF (0x00000004)

///< Enables diode connected bias master of all NSF blocks in each quartet.
///< 0: Disable, 1: Enable
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIASMAIN_EN_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIASMAIN_EN_BF_MSK (0x00000008)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIASMAIN_EN_BF_DEF (0x00000008)

///< Enables nmos master diode in the quartet bias of each quartet. 1=
///< Enable, 0= Disable
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMERBIASMAIN_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMERBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMERBIASMAIN_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMERBIASMAIN_EN_BF_DEF (0x00000010)

///< Controls minimum current range for the summer offset DAC. 0: Minimu=0,
///< 1: Minimum=32uA
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMEROFCBIAS_EN_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMEROFCBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMEROFCBIAS_EN_BF_MSK (0x00000020)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMEROFCBIAS_EN_BF_DEF (0x00000020)

///< Enables diode connected main bias device of side tap currents in each
///< quartet.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_TAPBIASMAIN_EN_BF_OFF ( 6)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_TAPBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_TAPBIASMAIN_EN_BF_MSK (0x00000040)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_TAPBIASMAIN_EN_BF_DEF (0x00000040)

///< Controls minimum bias for the casc reference generation. 0: Minimum
///< current=0, 1: minimum current =32uA.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMER_VCASC_BIAS_EN_BF_OFF ( 7)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMER_VCASC_BIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMER_VCASC_BIAS_EN_BF_MSK (0x00000080)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMER_VCASC_BIAS_EN_BF_DEF (0x00000080)

///< Trims NSF master bias current in each quartet. 0000: Maximum current,
///< 1111: minimum current
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIASMAIN_TRIM_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIASMAIN_TRIM_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_NSFBIASMAIN_TRIM_BF_DEF (0x00000800)

///< Binary triming size of the nmos master diode in adcfe quartet_bias
///< of each quartet. 00000=Maximum bias current trim,  11111= Minimum
///< bias current trim.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMERBIASMAIN_TRIM_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMERBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMERBIASMAIN_TRIM_BF_MSK (0x0000F000)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_SUMMERBIASMAIN_TRIM_BF_DEF (0x00005000)

///< Binary coded gm trim of side taps. Calibrate this register to assure
///< target tap gain at maximum setting is achieved. 0000: highest gm target,
///< 1111: Lowest gm target.
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_TAPBIASMAIN_TRIM_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_TAPBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_TAPBIASMAIN_TRIM_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADCFE_Q1_TAPBIASMAIN_TRIM_BF_DEF (0x00060000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_SUMMER_OFC register description at address offset 0x94
  *
  * Register default value:        0x60606060
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_summer_ofc
  * rxadc_q1_summer_ofc
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_SUMMER0_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="0" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
    uint32_t ADCFE_Q1_SUMMER1_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="8" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
    uint32_t ADCFE_Q1_SUMMER2_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="16" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t ADCFE_Q1_SUMMER3_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="24" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="31" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_summer_ofc_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_DEFAULT (0x60606060U)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_RD_MASK (0x7f7f7f7fU)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_WR_MASK (0x7f7f7f7fU)


///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER0_OFC_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER0_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER0_OFC_GRY_BF_MSK (0x0000007F)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER0_OFC_GRY_BF_DEF (0x00000060)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER1_OFC_GRY_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER1_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER1_OFC_GRY_BF_MSK (0x00007F00)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER1_OFC_GRY_BF_DEF (0x00006000)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER2_OFC_GRY_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER2_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER2_OFC_GRY_BF_MSK (0x007F0000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER2_OFC_GRY_BF_DEF (0x00600000)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER3_OFC_GRY_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER3_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER3_OFC_GRY_BF_MSK (0x7F000000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADCFE_Q1_SUMMER3_OFC_GRY_BF_DEF (0x60000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_SUMMER_CMFB register description at address offset 0x98
  *
  * Register default value:        0x18181818
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_summer_cmfb
  * rxadc_q1_summer_cmfb
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_SUMMER0_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. GRAY CODE!
    ///< MSB bit enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER0_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
    uint32_t ADCFE_Q1_SUMMER1_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER1_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="12" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="13" ResetValue="None"
    uint32_t ADCFE_Q1_SUMMER2_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER2_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="20" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
    uint32_t ADCFE_Q1_SUMMER3_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER3_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="28" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="29" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_summer_cmfb_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_DEFAULT (0x18181818U)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_RD_MASK (0x1f1f1f1fU)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_WR_MASK (0x1f1f1f1fU)


///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. GRAY CODE!
///< MSB bit enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER0_CMFB_OFC_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER0_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER0_CMFB_OFC_GRY_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER0_CMFB_OFC_GRY_BF_DEF (0x00000008)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER0_CMFB_OPAMP_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER0_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER0_CMFB_OPAMP_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER0_CMFB_OPAMP_EN_BF_DEF (0x00000010)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER1_CMFB_OFC_GRY_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER1_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER1_CMFB_OFC_GRY_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER1_CMFB_OFC_GRY_BF_DEF (0x00000800)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER1_CMFB_OPAMP_EN_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER1_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER1_CMFB_OPAMP_EN_BF_MSK (0x00001000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER1_CMFB_OPAMP_EN_BF_DEF (0x00001000)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER2_CMFB_OFC_GRY_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER2_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER2_CMFB_OFC_GRY_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER2_CMFB_OFC_GRY_BF_DEF (0x00080000)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER2_CMFB_OPAMP_EN_BF_OFF (20)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER2_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER2_CMFB_OPAMP_EN_BF_MSK (0x00100000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER2_CMFB_OPAMP_EN_BF_DEF (0x00100000)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER3_CMFB_OFC_GRY_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER3_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER3_CMFB_OFC_GRY_BF_MSK (0x0F000000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER3_CMFB_OFC_GRY_BF_DEF (0x08000000)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER3_CMFB_OPAMP_EN_BF_OFF (28)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER3_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER3_CMFB_OPAMP_EN_BF_MSK (0x10000000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADCFE_Q1_SUMMER3_CMFB_OPAMP_EN_BF_DEF (0x10000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_SUMMER_RES register description at address offset 0x9c
  *
  * Register default value:        0x88888888
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_summer_res
  * rxadc_q1_summer_res
  */

typedef union {
  struct {
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="0" ResetValue="None"
    uint32_t ADCFE_Q1_SUMMER0_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="3" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
    uint32_t ADCFE_Q1_SUMMER1_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="11" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
    uint32_t ADCFE_Q1_SUMMER2_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="19" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
    uint32_t ADCFE_Q1_SUMMER3_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="27" ResetValue="0x11"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_summer_res_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_DEFAULT (0x88888888U)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_RD_MASK (0xf8f8f8f8U)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_WR_MASK (0xf8f8f8f8U)


///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER0_RES_GRY_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER0_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER0_RES_GRY_BF_MSK (0x000000F8)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER0_RES_GRY_BF_DEF (0x00000088)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER1_RES_GRY_BF_OFF (11)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER1_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER1_RES_GRY_BF_MSK (0x0000F800)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER1_RES_GRY_BF_DEF (0x00008800)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER2_RES_GRY_BF_OFF (19)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER2_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER2_RES_GRY_BF_MSK (0x00F80000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER2_RES_GRY_BF_DEF (0x00880000)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER3_RES_GRY_BF_OFF (27)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER3_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER3_RES_GRY_BF_MSK (0xF8000000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADCFE_Q1_SUMMER3_RES_GRY_BF_DEF (0x88000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_SUMMER_VCASC register description at address offset 0xa0
  *
  * Register default value:        0x00018888
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_summer_vcasc
  * rxadc_q1_summer_vcasc
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_SUMMER0_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER1_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="4" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER2_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER3_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="12" ResetValue="0x8"
    uint32_t ADCFE_Q1_SUMMER_VCASC_BLEED_EN : 1;
    ///< Controls minimum casc beed current bias. 0: Minimum current =0, 1:
    ///< Minimum current =15uA
    ///< AccessType="RW" BitOffset="16" ResetValue="0x1"
    uint32_t  : 15;
    ///< Reserved
    ///< AccessType="RO" BitOffset="17" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_summer_vcasc_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_DEFAULT (0x00018888U)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_RD_MASK (0x0001ffffU)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_WR_MASK (0x0001ffffU)


///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER0_VCASC_BLEED_TRIM_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER0_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER0_VCASC_BLEED_TRIM_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER0_VCASC_BLEED_TRIM_BF_DEF (0x00000008)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER1_VCASC_BLEED_TRIM_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER1_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER1_VCASC_BLEED_TRIM_BF_MSK (0x000000F0)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER1_VCASC_BLEED_TRIM_BF_DEF (0x00000080)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER2_VCASC_BLEED_TRIM_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER2_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER2_VCASC_BLEED_TRIM_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER2_VCASC_BLEED_TRIM_BF_DEF (0x00000800)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER3_VCASC_BLEED_TRIM_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER3_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER3_VCASC_BLEED_TRIM_BF_MSK (0x0000F000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER3_VCASC_BLEED_TRIM_BF_DEF (0x00008000)

///< Controls minimum casc beed current bias. 0: Minimum current =0, 1:
///< Minimum current =15uA
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER_VCASC_BLEED_EN_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER_VCASC_BLEED_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER_VCASC_BLEED_EN_BF_MSK (0x00010000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADCFE_Q1_SUMMER_VCASC_BLEED_EN_BF_DEF (0x00010000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_SUMMER_CTRL0 register description at address offset 0xa4
  *
  * Register default value:        0x00000210
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_summer_ctrl0
  * rxadc_q1_summer_ctrl0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_SUMMER0_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER0_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q1_SUMMER1_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER1_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_summer_ctrl0_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_DEFAULT (0x00000210U)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_RD_MASK (0x000003ffU)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_WR_MASK (0x000003ffU)


///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER0_DFX_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER0_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER0_DFX_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER0_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER0_C0_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER0_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER0_C0_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER0_C0_EN_BF_DEF (0x00000010)

///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER1_DFX_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER1_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER1_DFX_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER1_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER1_C0_EN_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER1_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER1_C0_EN_BF_MSK (0x00000200)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADCFE_Q1_SUMMER1_C0_EN_BF_DEF (0x00000200)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_SUMMER_CTRL1 register description at address offset 0xa8
  *
  * Register default value:        0x00000210
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_summer_ctrl1
  * rxadc_q1_summer_ctrl1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_SUMMER2_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER2_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q1_SUMMER3_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER3_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t ADCFE_Q1_PD_B : 1;
    ///< Full power down of each of the q0/q1/q2/q3 quartets
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t ADCFE_Q1_FFE_PD_B : 1;
    ///< Powers down FFE only at each q0/q1/q2/q3 quartet
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER0_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER0_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER1_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="14" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER1_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER2_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER2_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER3_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER3_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="19" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER0_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER1_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="23" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER2_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="26" ResetValue="0x0"
    uint32_t ADCFE_Q1_SUMMER3_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="29" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_summer_ctrl1_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_DEFAULT (0x00000210U)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_WR_MASK (0xffffffffU)


///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_DFX_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_DFX_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_C0_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_C0_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_C0_EN_BF_DEF (0x00000010)

///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_DFX_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_DFX_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_C0_EN_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_C0_EN_BF_MSK (0x00000200)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_C0_EN_BF_DEF (0x00000200)

///< Full power down of each of the q0/q1/q2/q3 quartets
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_PD_B_BF_OFF (10)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_PD_B_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_PD_B_BF_MSK (0x00000400)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_PD_B_BF_DEF (0x00000000)

///< Powers down FFE only at each q0/q1/q2/q3 quartet
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_FFE_PD_B_BF_OFF (11)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_FFE_PD_B_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_FFE_PD_B_BF_MSK (0x00000800)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_FFE_PD_B_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_CMFB_OFC_SPARE_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_CMFB_OFC_SPARE_BF_MSK (0x00001000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_OFC_SPARE_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_OFC_SPARE_BF_MSK (0x00002000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_CMFB_OFC_SPARE_BF_OFF (14)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_CMFB_OFC_SPARE_BF_MSK (0x00004000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_OFC_SPARE_BF_OFF (15)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_OFC_SPARE_BF_MSK (0x00008000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_CMFB_OFC_SPARE_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_CMFB_OFC_SPARE_BF_MSK (0x00010000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_OFC_SPARE_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_OFC_SPARE_BF_MSK (0x00020000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_CMFB_OFC_SPARE_BF_OFF (18)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_CMFB_OFC_SPARE_BF_MSK (0x00040000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_OFC_SPARE_BF_OFF (19)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_OFC_SPARE_BF_MSK (0x00080000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_RES_SPARE_BF_OFF (20)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_RES_SPARE_BF_MSK (0x00700000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER0_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_RES_SPARE_BF_OFF (23)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_RES_SPARE_BF_MSK (0x03800000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER1_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_RES_SPARE_BF_OFF (26)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_RES_SPARE_BF_MSK (0x1C000000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER2_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_RES_SPARE_BF_OFF (29)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_RES_SPARE_BF_MSK (0xE0000000)
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADCFE_Q1_SUMMER3_RES_SPARE_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q1_FFE_SPARE0 register description at address offset 0xac
  *
  * Register default value:        0x00F00000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q1_ffe_spare0
  * rxadc_q1_ffe_spare0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q1_SPARE : 24;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0xF00000"
    uint32_t  : 8;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q1_ffe_spare0_reg_t;

#define RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_DEFAULT (0x00f00000U)
#define RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_RD_MASK (0x00ffffffU)
#define RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_WR_MASK (0x00ffffffU)


#define RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_ADCFE_Q1_SPARE_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_ADCFE_Q1_SPARE_BF_WID (24)
#define RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_ADCFE_Q1_SPARE_BF_MSK (0x00FFFFFF)
#define RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_ADCFE_Q1_SPARE_BF_DEF (0x00F00000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_FFE0_COEFF register description at address offset 0xb0
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_ffe0_coeff
  * rxadc_q2_ffe0_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_FFE0_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE0 (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE0_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE0 (slice 0 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE0_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE0 <7> (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE0_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE0  (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_ffe0_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE0 (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE0 (slice 0 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE0 <7> (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE0  (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADCFE_Q2_FFE0_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_FFE1_COEFF register description at address offset 0xb4
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_ffe1_coeff
  * rxadc_q2_ffe1_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_FFE1_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE1 (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE1_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE1 (slice1 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE1_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE1 <7> (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE1_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE1  (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_ffe1_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE1 (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE1 (slice1 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE1 <7> (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE1  (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADCFE_Q2_FFE1_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_FFE2_COEFF register description at address offset 0xb8
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_ffe2_coeff
  * rxadc_q2_ffe2_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_FFE2_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE2 (slice 2 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE2_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE2 (slice2 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE2_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE2 <7> (slice 2 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE2_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE2  (slice 2 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_ffe2_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE2 (slice 2 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE2 (slice2 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE2 <7> (slice 2 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE2  (slice 2 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADCFE_Q2_FFE2_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_FFE3_COEFF register description at address offset 0xbc
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_ffe3_coeff
  * rxadc_q2_ffe3_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_FFE3_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE3 (slice 3 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE3_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE3 (slice3 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE3_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE3 <7> (slice 3 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE3_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE3  (slice3 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_ffe3_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE3 (slice 3 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE3 (slice3 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE3 <7> (slice 3 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE3  (slice3 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADCFE_Q2_FFE3_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_FFE_DCD0 register description at address offset 0xc0
  *
  * Register default value:        0x04040404
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_ffe_dcd0
  * rxadc_q2_ffe_dcd0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_FFE0_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE0
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t ADCFE_Q2_FFE1_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE1
    ///< AccessType="RW" BitOffset="8" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t ADCFE_Q2_FFE2_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t ADCFE_Q2_FFE3_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (first buffer) for the FFE3
    ///< AccessType="RW" BitOffset="24" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_ffe_dcd0_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_DEFAULT (0x04040404U)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_RD_MASK (0x0f0f0f0fU)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_WR_MASK (0x0f0f0f0fU)


///< DCD control of TH2 clock (first buffer) for the FFE0
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE0_TH2_DCD_STG1_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE0_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE0_TH2_DCD_STG1_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE0_TH2_DCD_STG1_BF_DEF (0x00000004)

///< DCD control of TH2 clock (first buffer) for the FFE1
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE1_TH2_DCD_STG1_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE1_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE1_TH2_DCD_STG1_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE1_TH2_DCD_STG1_BF_DEF (0x00000400)

///< DCD control of TH2 clock (first buffer) for the FFE2
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE2_TH2_DCD_STG1_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE2_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE2_TH2_DCD_STG1_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE2_TH2_DCD_STG1_BF_DEF (0x00040000)

///< DCD control of TH2 clock (first buffer) for the FFE3
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE3_TH2_DCD_STG1_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE3_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE3_TH2_DCD_STG1_BF_MSK (0x0F000000)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADCFE_Q2_FFE3_TH2_DCD_STG1_BF_DEF (0x04000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_FFE_DCD1 register description at address offset 0xc4
  *
  * Register default value:        0x03030303
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_ffe_dcd1
  * rxadc_q2_ffe_dcd1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_FFE0_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE0
    ///< AccessType="RW" BitOffset="0" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
    uint32_t ADCFE_Q2_FFE1_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE1
    ///< AccessType="RW" BitOffset="8" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t ADCFE_Q2_FFE2_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
    uint32_t ADCFE_Q2_FFE3_TH2_DCD_STG2 : 3;
    ///< DCD control of TH2 clock (second buffer) for the FFE3
    ///< AccessType="RW" BitOffset="24" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_ffe_dcd1_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_DEFAULT (0x03030303U)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_RD_MASK (0x07070707U)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_WR_MASK (0x07070707U)


///< DCD control of TH2 clock (second buffer) for the FFE0
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE0_TH2_DCD_STG2_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE0_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE0_TH2_DCD_STG2_BF_MSK (0x00000007)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE0_TH2_DCD_STG2_BF_DEF (0x00000003)

///< DCD control of TH2 clock (second buffer) for the FFE1
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE1_TH2_DCD_STG2_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE1_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE1_TH2_DCD_STG2_BF_MSK (0x00000700)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE1_TH2_DCD_STG2_BF_DEF (0x00000300)

///< DCD control of TH2 clock (second buffer) for the FFE2
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE2_TH2_DCD_STG2_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE2_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE2_TH2_DCD_STG2_BF_MSK (0x00070000)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE2_TH2_DCD_STG2_BF_DEF (0x00030000)

///< DCD control of TH2 clock (second buffer) for the FFE3
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE3_TH2_DCD_STG2_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE3_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE3_TH2_DCD_STG2_BF_MSK (0x07000000)
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADCFE_Q2_FFE3_TH2_DCD_STG2_BF_DEF (0x03000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_FFE_CAP register description at address offset 0xc8
  *
  * Register default value:        0x09090909
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_ffe_cap
  * rxadc_q2_ffe_cap
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_CAP0 : 6;
    ///< Controls TH1 switch capacitance for Slice0 of each quartet
    ///< AccessType="RW" BitOffset="0" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="6" ResetValue="None"
    uint32_t ADCFE_Q2_CAP1 : 6;
    ///< Controls TH1 switch capacitance for Slice1 of each quartet
    ///< AccessType="RW" BitOffset="8" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="14" ResetValue="None"
    uint32_t ADCFE_Q2_CAP2 : 6;
    ///< Controls TH1 switch capacitance for Slice2 of each quartet
    ///< AccessType="RW" BitOffset="16" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="22" ResetValue="None"
    uint32_t ADCFE_Q2_CAP3 : 6;
    ///< Controls TH1 switch capacitance for Slice3 of each quartet
    ///< AccessType="RW" BitOffset="24" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_ffe_cap_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_DEFAULT (0x09090909U)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_RD_MASK (0x3f3f3f3fU)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_WR_MASK (0x3f3f3f3fU)


///< Controls TH1 switch capacitance for Slice0 of each quartet
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP0_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP0_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP0_BF_MSK (0x0000003F)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP0_BF_DEF (0x00000009)

///< Controls TH1 switch capacitance for Slice1 of each quartet
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP1_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP1_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP1_BF_MSK (0x00003F00)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP1_BF_DEF (0x00000900)

///< Controls TH1 switch capacitance for Slice2 of each quartet
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP2_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP2_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP2_BF_MSK (0x003F0000)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP2_BF_DEF (0x00090000)

///< Controls TH1 switch capacitance for Slice3 of each quartet
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP3_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP3_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP3_BF_MSK (0x3F000000)
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADCFE_Q2_CAP3_BF_DEF (0x09000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_DFX0 register description at address offset 0xcc
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_dfx0
  * rxadc_q2_dfx0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_TH1_DCMON_EN_B : 4;
    ///< enable dcmon for vcc1 of a particular slice within each quartet. <0>:
    ///< slice left<0>. <1>:: slice left<1>, <2>: slice right<0>, <3>: slice
    ///< right <1>
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_dfx0_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_DFX0_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q2_DFX0_RD_MASK (0x0000000fU)
#define RXANA_ADC_FFE_MSG_Q2_DFX0_WR_MASK (0x0000000fU)


///< enable dcmon for vcc1 of a particular slice within each quartet. <0>:
///< slice left<0>. <1>:: slice left<1>, <2>: slice right<0>, <3>: slice
///< right <1>
#define RXANA_ADC_FFE_MSG_Q2_DFX0_ADCFE_Q2_TH1_DCMON_EN_B_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_DFX0_ADCFE_Q2_TH1_DCMON_EN_B_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_DFX0_ADCFE_Q2_TH1_DCMON_EN_B_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q2_DFX0_ADCFE_Q2_TH1_DCMON_EN_B_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_DFX2 register description at address offset 0xd0
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_dfx2
  * rxadc_q2_dfx2
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_PI_CLKMNTR_A_EN : 4;
    ///< TH1 clocka monitoring for FFE0 to FFE3
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q2_PI_CLKMNTR_B_EN : 4;
    ///< TH1 clockb monitoring for FFE0 to FFE3
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_dfx2_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_DFX2_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q2_DFX2_RD_MASK (0x000000ffU)
#define RXANA_ADC_FFE_MSG_Q2_DFX2_WR_MASK (0x000000ffU)


///< TH1 clocka monitoring for FFE0 to FFE3
#define RXANA_ADC_FFE_MSG_Q2_DFX2_ADCFE_Q2_PI_CLKMNTR_A_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_DFX2_ADCFE_Q2_PI_CLKMNTR_A_EN_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_DFX2_ADCFE_Q2_PI_CLKMNTR_A_EN_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q2_DFX2_ADCFE_Q2_PI_CLKMNTR_A_EN_BF_DEF (0x00000000)

///< TH1 clockb monitoring for FFE0 to FFE3
#define RXANA_ADC_FFE_MSG_Q2_DFX2_ADCFE_Q2_PI_CLKMNTR_B_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q2_DFX2_ADCFE_Q2_PI_CLKMNTR_B_EN_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_DFX2_ADCFE_Q2_PI_CLKMNTR_B_EN_BF_MSK (0x000000F0)
#define RXANA_ADC_FFE_MSG_Q2_DFX2_ADCFE_Q2_PI_CLKMNTR_B_EN_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_NEXTPHASE_CTRL0 register description at address offset 0xd4
  *
  * Register default value:        0x00000008
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_nextphase_ctrl0
  * rxadc_q2_nextphase_ctrl0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_FFE0_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE1_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE2_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE3_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_nextphase_ctrl0_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_DEFAULT (0x00000008U)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_RD_MASK (0x0000000fU)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_WR_MASK (0x0000000fU)


///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE0_TH1_NXTPH_DELAY_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE0_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE0_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000001)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE0_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE1_TH1_NXTPH_DELAY_EN_BF_OFF ( 1)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE1_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE1_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000002)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE1_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE2_TH1_NXTPH_DELAY_EN_BF_OFF ( 2)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE2_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE2_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000004)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE2_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE3_TH1_NXTPH_DELAY_EN_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE3_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE3_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000008)
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADCFE_Q2_FFE3_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000008)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_BIAS_TRIM0 register description at address offset 0xd8
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_bias_trim0
  * rxadc_q2_bias_trim0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_C00_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer0 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q2_NSF0_BIAS_TRIM : 4;
    ///< Trims gm of NSF0 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q2_CMFB0_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER0
    ///< of each quartet. 0000: Minimum current. 1111: maximum current. (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER0_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q2_SUMMER0_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_bias_trim0_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer0 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_C00_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_C00_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_C00_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_C00_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF0 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_NSF0_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_NSF0_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_NSF0_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_NSF0_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER0
///< of each quartet. 0000: Minimum current. 1111: maximum current. (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_CMFB0_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_CMFB0_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_CMFB0_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_CMFB0_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_SUMMER0_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_SUMMER0_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_SUMMER0_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_SUMMER0_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_SUMMER0_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_SUMMER0_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_SUMMER0_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADCFE_Q2_SUMMER0_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_BIAS_TRIM1 register description at address offset 0xdc
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_bias_trim1
  * rxadc_q2_bias_trim1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_C01_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer1 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q2_NSF1_BIAS_TRIM : 4;
    ///< Trims gm of NSF1 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q2_CMFB1_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER1
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER1_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q2_SUMMER1_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_bias_trim1_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer1 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_C01_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_C01_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_C01_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_C01_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF1 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_NSF1_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_NSF1_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_NSF1_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_NSF1_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER1
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_CMFB1_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_CMFB1_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_CMFB1_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_CMFB1_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_SUMMER1_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_SUMMER1_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_SUMMER1_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_SUMMER1_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_SUMMER1_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_SUMMER1_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_SUMMER1_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADCFE_Q2_SUMMER1_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_BIAS_TRIM2 register description at address offset 0xe0
  *
  * Register default value:        0x00111110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_bias_trim2
  * rxadc_q2_bias_trim2
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_C02_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer2 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q2_NSF2_BIAS_TRIM : 4;
    ///< Trims gm of NSF2 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q2_CMFB2_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER2
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER2_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER2_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0x8"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_bias_trim2_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_DEFAULT (0x00111110U)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer2 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_C02_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_C02_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_C02_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_C02_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF2 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_NSF2_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_NSF2_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_NSF2_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_NSF2_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER2
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_CMFB2_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_CMFB2_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_CMFB2_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_CMFB2_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_SUMMER2_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_SUMMER2_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_SUMMER2_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_SUMMER2_OFC_BIAS_TRIM_BF_DEF (0x00010000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_SUMMER2_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_SUMMER2_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_SUMMER2_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADCFE_Q2_SUMMER2_VCASC_BIAS_TRIM_BF_DEF (0x00100000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_BIAS_TRIM3 register description at address offset 0xe4
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_bias_trim3
  * rxadc_q2_bias_trim3
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_C03_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer3 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q2_NSF3_BIAS_TRIM : 4;
    ///< Trims gm of NSF3 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q2_CMFB3_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER3
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER3_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q2_SUMMER3_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_bias_trim3_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer3 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_C03_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_C03_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_C03_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_C03_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF3 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_NSF3_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_NSF3_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_NSF3_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_NSF3_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER3
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_CMFB3_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_CMFB3_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_CMFB3_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_CMFB3_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_SUMMER3_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_SUMMER3_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_SUMMER3_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_SUMMER3_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_SUMMER3_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_SUMMER3_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_SUMMER3_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADCFE_Q2_SUMMER3_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_BIAS_TRIM4 register description at address offset 0xe8
  *
  * Register default value:        0x000658FF
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_bias_trim4
  * rxadc_q2_bias_trim4
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_C0BIAS_EN : 1;
    ///< Controls minim range of the main tap bias current. 0: Minimum=0, 1:
    ///< Minimum =32uA
    ///< AccessType="RW" BitOffset="0" ResetValue="0x1"
    uint32_t ADCFE_Q2_CMFBBIAS_EN : 1;
    ///< Enabling the main bias curren of the SUMMER CMFB circuit in each slice
    ///< of a quartet
    ///< AccessType="RW" BitOffset="1" ResetValue="0x1"
    uint32_t ADCFE_Q2_NSFBIAS_EN : 1;
    ///< Controls variation range of the NBIAS bias current of NSFs in each
    ///< quartet. 1: Full range, 0: Half range
    ///< AccessType="RW" BitOffset="2" ResetValue="0x1"
    uint32_t ADCFE_Q2_NSFBIASMAIN_EN : 1;
    ///< Enables diode connected bias master of all NSF blocks in each quartet.
    ///< 0: Disable, 1: Enable
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t ADCFE_Q2_SUMMERBIASMAIN_EN : 1;
    ///< Enables nmos master diode in the quartet bias of each quartet. 1=
    ///< Enable, 0= Disable
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q2_SUMMEROFCBIAS_EN : 1;
    ///< Controls minimum current range for the summer offset DAC. 0: Minimu=0,
    ///< 1: Minimum=32uA
    ///< AccessType="RW" BitOffset="5" ResetValue="0x1"
    uint32_t ADCFE_Q2_TAPBIASMAIN_EN : 1;
    ///< Enables diode connected main bias device of side tap currents in each
    ///< quartet.
    ///< AccessType="RW" BitOffset="6" ResetValue="0x1"
    uint32_t ADCFE_Q2_SUMMER_VCASC_BIAS_EN : 1;
    ///< Controls minimum bias for the casc reference generation. 0: Minimum
    ///< current=0, 1: minimum current =32uA.
    ///< AccessType="RW" BitOffset="7" ResetValue="0x1"
    uint32_t ADCFE_Q2_NSFBIASMAIN_TRIM : 4;
    ///< Trims NSF master bias current in each quartet. 0000: Maximum current,
    ///< 1111: minimum current
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMERBIASMAIN_TRIM : 4;
    ///< Binary triming size of the nmos master diode in adcfe quartet_bias
    ///< of each quartet. 00000=Maximum bias current trim,  11111= Minimum
    ///< bias current trim.
    ///< AccessType="RW" BitOffset="12" ResetValue="0x5"
    uint32_t ADCFE_Q2_TAPBIASMAIN_TRIM : 4;
    ///< Binary coded gm trim of side taps. Calibrate this register to assure
    ///< target tap gain at maximum setting is achieved. 0000: highest gm target,
    ///< 1111: Lowest gm target.
    ///< AccessType="RW" BitOffset="16" ResetValue="0x6"
    uint32_t  : 12;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_bias_trim4_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_DEFAULT (0x000658ffU)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_RD_MASK (0x000fffffU)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_WR_MASK (0x000fffffU)


///< Controls minim range of the main tap bias current. 0: Minimum=0, 1:
///< Minimum =32uA
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_C0BIAS_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_C0BIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_C0BIAS_EN_BF_MSK (0x00000001)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_C0BIAS_EN_BF_DEF (0x00000001)

///< Enabling the main bias curren of the SUMMER CMFB circuit in each slice
///< of a quartet
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_CMFBBIAS_EN_BF_OFF ( 1)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_CMFBBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_CMFBBIAS_EN_BF_MSK (0x00000002)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_CMFBBIAS_EN_BF_DEF (0x00000002)

///< Controls variation range of the NBIAS bias current of NSFs in each
///< quartet. 1: Full range, 0: Half range
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIAS_EN_BF_OFF ( 2)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIAS_EN_BF_MSK (0x00000004)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIAS_EN_BF_DEF (0x00000004)

///< Enables diode connected bias master of all NSF blocks in each quartet.
///< 0: Disable, 1: Enable
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIASMAIN_EN_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIASMAIN_EN_BF_MSK (0x00000008)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIASMAIN_EN_BF_DEF (0x00000008)

///< Enables nmos master diode in the quartet bias of each quartet. 1=
///< Enable, 0= Disable
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMERBIASMAIN_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMERBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMERBIASMAIN_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMERBIASMAIN_EN_BF_DEF (0x00000010)

///< Controls minimum current range for the summer offset DAC. 0: Minimu=0,
///< 1: Minimum=32uA
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMEROFCBIAS_EN_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMEROFCBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMEROFCBIAS_EN_BF_MSK (0x00000020)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMEROFCBIAS_EN_BF_DEF (0x00000020)

///< Enables diode connected main bias device of side tap currents in each
///< quartet.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_TAPBIASMAIN_EN_BF_OFF ( 6)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_TAPBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_TAPBIASMAIN_EN_BF_MSK (0x00000040)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_TAPBIASMAIN_EN_BF_DEF (0x00000040)

///< Controls minimum bias for the casc reference generation. 0: Minimum
///< current=0, 1: minimum current =32uA.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMER_VCASC_BIAS_EN_BF_OFF ( 7)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMER_VCASC_BIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMER_VCASC_BIAS_EN_BF_MSK (0x00000080)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMER_VCASC_BIAS_EN_BF_DEF (0x00000080)

///< Trims NSF master bias current in each quartet. 0000: Maximum current,
///< 1111: minimum current
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIASMAIN_TRIM_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIASMAIN_TRIM_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_NSFBIASMAIN_TRIM_BF_DEF (0x00000800)

///< Binary triming size of the nmos master diode in adcfe quartet_bias
///< of each quartet. 00000=Maximum bias current trim,  11111= Minimum
///< bias current trim.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMERBIASMAIN_TRIM_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMERBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMERBIASMAIN_TRIM_BF_MSK (0x0000F000)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_SUMMERBIASMAIN_TRIM_BF_DEF (0x00005000)

///< Binary coded gm trim of side taps. Calibrate this register to assure
///< target tap gain at maximum setting is achieved. 0000: highest gm target,
///< 1111: Lowest gm target.
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_TAPBIASMAIN_TRIM_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_TAPBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_TAPBIASMAIN_TRIM_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADCFE_Q2_TAPBIASMAIN_TRIM_BF_DEF (0x00060000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_SUMMER_OFC register description at address offset 0xec
  *
  * Register default value:        0x60606060
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_summer_ofc
  * rxadc_q2_summer_ofc
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_SUMMER0_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="0" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
    uint32_t ADCFE_Q2_SUMMER1_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="8" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
    uint32_t ADCFE_Q2_SUMMER2_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="16" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t ADCFE_Q2_SUMMER3_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="24" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="31" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_summer_ofc_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_DEFAULT (0x60606060U)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_RD_MASK (0x7f7f7f7fU)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_WR_MASK (0x7f7f7f7fU)


///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER0_OFC_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER0_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER0_OFC_GRY_BF_MSK (0x0000007F)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER0_OFC_GRY_BF_DEF (0x00000060)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER1_OFC_GRY_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER1_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER1_OFC_GRY_BF_MSK (0x00007F00)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER1_OFC_GRY_BF_DEF (0x00006000)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER2_OFC_GRY_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER2_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER2_OFC_GRY_BF_MSK (0x007F0000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER2_OFC_GRY_BF_DEF (0x00600000)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER3_OFC_GRY_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER3_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER3_OFC_GRY_BF_MSK (0x7F000000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADCFE_Q2_SUMMER3_OFC_GRY_BF_DEF (0x60000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_SUMMER_CMFB register description at address offset 0xf0
  *
  * Register default value:        0x18181818
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_summer_cmfb
  * rxadc_q2_summer_cmfb
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_SUMMER0_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. GRAY CODE!
    ///< MSB bit enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER0_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
    uint32_t ADCFE_Q2_SUMMER1_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER1_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="12" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="13" ResetValue="None"
    uint32_t ADCFE_Q2_SUMMER2_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER2_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="20" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
    uint32_t ADCFE_Q2_SUMMER3_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER3_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="28" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="29" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_summer_cmfb_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_DEFAULT (0x18181818U)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_RD_MASK (0x1f1f1f1fU)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_WR_MASK (0x1f1f1f1fU)


///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. GRAY CODE!
///< MSB bit enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER0_CMFB_OFC_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER0_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER0_CMFB_OFC_GRY_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER0_CMFB_OFC_GRY_BF_DEF (0x00000008)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER0_CMFB_OPAMP_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER0_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER0_CMFB_OPAMP_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER0_CMFB_OPAMP_EN_BF_DEF (0x00000010)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER1_CMFB_OFC_GRY_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER1_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER1_CMFB_OFC_GRY_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER1_CMFB_OFC_GRY_BF_DEF (0x00000800)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER1_CMFB_OPAMP_EN_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER1_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER1_CMFB_OPAMP_EN_BF_MSK (0x00001000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER1_CMFB_OPAMP_EN_BF_DEF (0x00001000)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER2_CMFB_OFC_GRY_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER2_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER2_CMFB_OFC_GRY_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER2_CMFB_OFC_GRY_BF_DEF (0x00080000)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER2_CMFB_OPAMP_EN_BF_OFF (20)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER2_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER2_CMFB_OPAMP_EN_BF_MSK (0x00100000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER2_CMFB_OPAMP_EN_BF_DEF (0x00100000)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER3_CMFB_OFC_GRY_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER3_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER3_CMFB_OFC_GRY_BF_MSK (0x0F000000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER3_CMFB_OFC_GRY_BF_DEF (0x08000000)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER3_CMFB_OPAMP_EN_BF_OFF (28)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER3_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER3_CMFB_OPAMP_EN_BF_MSK (0x10000000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADCFE_Q2_SUMMER3_CMFB_OPAMP_EN_BF_DEF (0x10000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_SUMMER_RES register description at address offset 0xf4
  *
  * Register default value:        0x88888888
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_summer_res
  * rxadc_q2_summer_res
  */

typedef union {
  struct {
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="0" ResetValue="None"
    uint32_t ADCFE_Q2_SUMMER0_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="3" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
    uint32_t ADCFE_Q2_SUMMER1_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="11" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
    uint32_t ADCFE_Q2_SUMMER2_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="19" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
    uint32_t ADCFE_Q2_SUMMER3_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="27" ResetValue="0x11"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_summer_res_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_DEFAULT (0x88888888U)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_RD_MASK (0xf8f8f8f8U)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_WR_MASK (0xf8f8f8f8U)


///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER0_RES_GRY_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER0_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER0_RES_GRY_BF_MSK (0x000000F8)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER0_RES_GRY_BF_DEF (0x00000088)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER1_RES_GRY_BF_OFF (11)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER1_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER1_RES_GRY_BF_MSK (0x0000F800)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER1_RES_GRY_BF_DEF (0x00008800)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER2_RES_GRY_BF_OFF (19)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER2_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER2_RES_GRY_BF_MSK (0x00F80000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER2_RES_GRY_BF_DEF (0x00880000)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER3_RES_GRY_BF_OFF (27)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER3_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER3_RES_GRY_BF_MSK (0xF8000000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADCFE_Q2_SUMMER3_RES_GRY_BF_DEF (0x88000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_SUMMER_VCASC register description at address offset 0xf8
  *
  * Register default value:        0x00018888
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_summer_vcasc
  * rxadc_q2_summer_vcasc
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_SUMMER0_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER1_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="4" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER2_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER3_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="12" ResetValue="0x8"
    uint32_t ADCFE_Q2_SUMMER_VCASC_BLEED_EN : 1;
    ///< Controls minimum casc beed current bias. 0: Minimum current =0, 1:
    ///< Minimum current =15uA
    ///< AccessType="RW" BitOffset="16" ResetValue="0x1"
    uint32_t  : 15;
    ///< Reserved
    ///< AccessType="RO" BitOffset="17" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_summer_vcasc_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_DEFAULT (0x00018888U)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_RD_MASK (0x0001ffffU)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_WR_MASK (0x0001ffffU)


///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER0_VCASC_BLEED_TRIM_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER0_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER0_VCASC_BLEED_TRIM_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER0_VCASC_BLEED_TRIM_BF_DEF (0x00000008)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER1_VCASC_BLEED_TRIM_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER1_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER1_VCASC_BLEED_TRIM_BF_MSK (0x000000F0)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER1_VCASC_BLEED_TRIM_BF_DEF (0x00000080)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER2_VCASC_BLEED_TRIM_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER2_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER2_VCASC_BLEED_TRIM_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER2_VCASC_BLEED_TRIM_BF_DEF (0x00000800)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER3_VCASC_BLEED_TRIM_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER3_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER3_VCASC_BLEED_TRIM_BF_MSK (0x0000F000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER3_VCASC_BLEED_TRIM_BF_DEF (0x00008000)

///< Controls minimum casc beed current bias. 0: Minimum current =0, 1:
///< Minimum current =15uA
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER_VCASC_BLEED_EN_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER_VCASC_BLEED_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER_VCASC_BLEED_EN_BF_MSK (0x00010000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADCFE_Q2_SUMMER_VCASC_BLEED_EN_BF_DEF (0x00010000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_SUMMER_CTRL0 register description at address offset 0xfc
  *
  * Register default value:        0x00000210
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_summer_ctrl0
  * rxadc_q2_summer_ctrl0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_SUMMER0_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER0_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q2_SUMMER1_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER1_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_summer_ctrl0_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_DEFAULT (0x00000210U)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_RD_MASK (0x000003ffU)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_WR_MASK (0x000003ffU)


///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER0_DFX_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER0_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER0_DFX_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER0_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER0_C0_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER0_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER0_C0_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER0_C0_EN_BF_DEF (0x00000010)

///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER1_DFX_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER1_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER1_DFX_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER1_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER1_C0_EN_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER1_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER1_C0_EN_BF_MSK (0x00000200)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADCFE_Q2_SUMMER1_C0_EN_BF_DEF (0x00000200)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_SUMMER_CTRL1 register description at address offset 0x100
  *
  * Register default value:        0x00000210
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_summer_ctrl1
  * rxadc_q2_summer_ctrl1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_SUMMER2_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER2_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q2_SUMMER3_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER3_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t ADCFE_Q2_PD_B : 1;
    ///< Full power down of each of the q0/q1/q2/q3 quartets
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t ADCFE_Q2_FFE_PD_B : 1;
    ///< Powers down FFE only at each q0/q1/q2/q3 quartet
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER0_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER0_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER1_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="14" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER1_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER2_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER2_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER3_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER3_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="19" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER0_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER1_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="23" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER2_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="26" ResetValue="0x0"
    uint32_t ADCFE_Q2_SUMMER3_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="29" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_summer_ctrl1_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_DEFAULT (0x00000210U)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_WR_MASK (0xffffffffU)


///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_DFX_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_DFX_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_C0_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_C0_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_C0_EN_BF_DEF (0x00000010)

///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_DFX_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_DFX_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_C0_EN_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_C0_EN_BF_MSK (0x00000200)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_C0_EN_BF_DEF (0x00000200)

///< Full power down of each of the q0/q1/q2/q3 quartets
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_PD_B_BF_OFF (10)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_PD_B_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_PD_B_BF_MSK (0x00000400)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_PD_B_BF_DEF (0x00000000)

///< Powers down FFE only at each q0/q1/q2/q3 quartet
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_FFE_PD_B_BF_OFF (11)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_FFE_PD_B_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_FFE_PD_B_BF_MSK (0x00000800)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_FFE_PD_B_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_CMFB_OFC_SPARE_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_CMFB_OFC_SPARE_BF_MSK (0x00001000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_OFC_SPARE_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_OFC_SPARE_BF_MSK (0x00002000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_CMFB_OFC_SPARE_BF_OFF (14)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_CMFB_OFC_SPARE_BF_MSK (0x00004000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_OFC_SPARE_BF_OFF (15)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_OFC_SPARE_BF_MSK (0x00008000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_CMFB_OFC_SPARE_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_CMFB_OFC_SPARE_BF_MSK (0x00010000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_OFC_SPARE_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_OFC_SPARE_BF_MSK (0x00020000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_CMFB_OFC_SPARE_BF_OFF (18)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_CMFB_OFC_SPARE_BF_MSK (0x00040000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_OFC_SPARE_BF_OFF (19)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_OFC_SPARE_BF_MSK (0x00080000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_RES_SPARE_BF_OFF (20)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_RES_SPARE_BF_MSK (0x00700000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER0_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_RES_SPARE_BF_OFF (23)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_RES_SPARE_BF_MSK (0x03800000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER1_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_RES_SPARE_BF_OFF (26)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_RES_SPARE_BF_MSK (0x1C000000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER2_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_RES_SPARE_BF_OFF (29)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_RES_SPARE_BF_MSK (0xE0000000)
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADCFE_Q2_SUMMER3_RES_SPARE_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q2_FFE_SPARE0 register description at address offset 0x104
  *
  * Register default value:        0x000F0000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q2_ffe_spare0
  * rxadc_q2_ffe_spare0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q2_SPARE : 24;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0xF0000"
    uint32_t  : 8;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q2_ffe_spare0_reg_t;

#define RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_DEFAULT (0x000f0000U)
#define RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_RD_MASK (0x00ffffffU)
#define RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_WR_MASK (0x00ffffffU)


#define RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_ADCFE_Q2_SPARE_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_ADCFE_Q2_SPARE_BF_WID (24)
#define RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_ADCFE_Q2_SPARE_BF_MSK (0x00FFFFFF)
#define RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_ADCFE_Q2_SPARE_BF_DEF (0x000F0000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_FFE0_COEFF register description at address offset 0x108
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_ffe0_coeff
  * rxadc_q3_ffe0_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_FFE0_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE0 (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE0_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE0 (slice 0 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE0_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE0 <7> (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE0_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE0  (slice 0 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_ffe0_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE0 (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE0 (slice 0 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE0 <7> (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE0  (slice 0 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADCFE_Q3_FFE0_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_FFE1_COEFF register description at address offset 0x10c
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_ffe1_coeff
  * rxadc_q3_ffe1_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_FFE1_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE1 (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE1_TAP_CM1_DIR2GRY6 : 8;
    ///< First precursor tap gain for the FFE1 (slice1 of each quartet): <7>
    ///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
    ///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
    ///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
    ///< bits
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE1_TAP_CP1_DIR2GRY6 : 8;
    ///< First postcursor tap gain for the FFE1 <7> (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE1_TAP_CP2_DIR2GRY6 : 8;
    ///< Second postcursor tap gain for the FFE1  (slice 1 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_ffe1_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE1 (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< First precursor tap gain for the FFE1 (slice1 of each quartet): <7>
///< ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed magnitude
///< tap gain). FFE negative tap 1 controls.msb bit is direction bit, when
///< 0 the tap is off. Bit 6 is not connected. 6 other bits are gain ocntrol
///< bits
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< First postcursor tap gain for the FFE1 <7> (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 1 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< Second postcursor tap gain for the FFE1  (slice 1 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE positive tap 2 controls.msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADCFE_Q3_FFE1_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_FFE2_COEFF register description at address offset 0x110
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_ffe2_coeff
  * rxadc_q3_ffe2_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_FFE2_TAP_CM2_DIR2GRY6 : 8;
    ///< Second precursor tap gain for the FFE2 (slice 2 of each quartet):
    ///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
    ///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
    ///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
    ///< gain ocntrol bits
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE2_TAP_CM1_DIR2GRY6 : 8;
    ///< DCD control of TH2 clock (first buffer) for the FFE0
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE2_TAP_CP1_DIR2GRY6 : 8;
    ///< DCD control of TH2 clock (first buffer) for the FFE1
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE2_TAP_CP2_DIR2GRY6 : 8;
    ///< DCD control of TH2 clock (first buffer) for the FFE2
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_ffe2_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_WR_MASK (0xffffffffU)


///< Second precursor tap gain for the FFE2 (slice 2 of each quartet):
///< <7> ==> (0: Enable Tap,1: Disable Tap). <6:0>==>(Gray coded signed
///< magnitude tap gain). FFE negitive tap 2 controls, msb bit is direction
///< bit, when 0 the tap is off. Bit 6 is not connected. 6 other bits are
///< gain ocntrol bits
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< DCD control of TH2 clock (first buffer) for the FFE0
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< DCD control of TH2 clock (first buffer) for the FFE1
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< DCD control of TH2 clock (first buffer) for the FFE2
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADCFE_Q3_FFE2_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_FFE3_COEFF register description at address offset 0x114
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_ffe3_coeff
  * rxadc_q3_ffe3_coeff
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_FFE3_TAP_CM2_DIR2GRY6 : 8;
    ///< DCD control of TH2 clock (first buffer) for the FFE3
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE3_TAP_CM1_DIR2GRY6 : 8;
    ///< DCD control of TH2 clock (second buffer) for the FFE0
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE3_TAP_CP1_DIR2GRY6 : 8;
    ///< DCD control of TH2 clock (second buffer) for the FFE1
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE3_TAP_CP2_DIR2GRY6 : 8;
    ///< DCD control of TH2 clock (second buffer) for the FFE2
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_ffe3_coeff_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_WR_MASK (0xffffffffU)


///< DCD control of TH2 clock (first buffer) for the FFE3
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CM2_DIR2GRY6_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CM2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CM2_DIR2GRY6_BF_MSK (0x000000FF)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CM2_DIR2GRY6_BF_DEF (0x00000000)

///< DCD control of TH2 clock (second buffer) for the FFE0
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CM1_DIR2GRY6_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CM1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CM1_DIR2GRY6_BF_MSK (0x0000FF00)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CM1_DIR2GRY6_BF_DEF (0x00000000)

///< DCD control of TH2 clock (second buffer) for the FFE1
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CP1_DIR2GRY6_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CP1_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CP1_DIR2GRY6_BF_MSK (0x00FF0000)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CP1_DIR2GRY6_BF_DEF (0x00000000)

///< DCD control of TH2 clock (second buffer) for the FFE2
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CP2_DIR2GRY6_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CP2_DIR2GRY6_BF_WID ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CP2_DIR2GRY6_BF_MSK (0xFF000000)
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADCFE_Q3_FFE3_TAP_CP2_DIR2GRY6_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_FFE_DCD0 register description at address offset 0x118
  *
  * Register default value:        0x04040404
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_ffe_dcd0
  * rxadc_q3_ffe_dcd0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_FFE0_TH2_DCD_STG1 : 4;
    ///< DCD control of TH2 clock (second buffer) for the FFE3
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t ADCFE_Q3_FFE1_TH2_DCD_STG1 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="8" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t ADCFE_Q3_FFE2_TH2_DCD_STG1 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t ADCFE_Q3_FFE3_TH2_DCD_STG1 : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="24" ResetValue="0x4"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_ffe_dcd0_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_DEFAULT (0x04040404U)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_RD_MASK (0x0f0f0f0fU)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_WR_MASK (0x0f0f0f0fU)


///< DCD control of TH2 clock (second buffer) for the FFE3
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE0_TH2_DCD_STG1_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE0_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE0_TH2_DCD_STG1_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE0_TH2_DCD_STG1_BF_DEF (0x00000004)

#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE1_TH2_DCD_STG1_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE1_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE1_TH2_DCD_STG1_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE1_TH2_DCD_STG1_BF_DEF (0x00000400)

#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE2_TH2_DCD_STG1_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE2_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE2_TH2_DCD_STG1_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE2_TH2_DCD_STG1_BF_DEF (0x00040000)

#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE3_TH2_DCD_STG1_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE3_TH2_DCD_STG1_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE3_TH2_DCD_STG1_BF_MSK (0x0F000000)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADCFE_Q3_FFE3_TH2_DCD_STG1_BF_DEF (0x04000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_FFE_DCD1 register description at address offset 0x11c
  *
  * Register default value:        0x03030303
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_ffe_dcd1
  * rxadc_q3_ffe_dcd1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_FFE0_TH2_DCD_STG2 : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
    uint32_t ADCFE_Q3_FFE1_TH2_DCD_STG2 : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="8" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t ADCFE_Q3_FFE2_TH2_DCD_STG2 : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
    uint32_t ADCFE_Q3_FFE3_TH2_DCD_STG2 : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="24" ResetValue="0x3"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_ffe_dcd1_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_DEFAULT (0x03030303U)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_RD_MASK (0x07070707U)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_WR_MASK (0x07070707U)


#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE0_TH2_DCD_STG2_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE0_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE0_TH2_DCD_STG2_BF_MSK (0x00000007)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE0_TH2_DCD_STG2_BF_DEF (0x00000003)

#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE1_TH2_DCD_STG2_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE1_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE1_TH2_DCD_STG2_BF_MSK (0x00000700)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE1_TH2_DCD_STG2_BF_DEF (0x00000300)

#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE2_TH2_DCD_STG2_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE2_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE2_TH2_DCD_STG2_BF_MSK (0x00070000)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE2_TH2_DCD_STG2_BF_DEF (0x00030000)

#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE3_TH2_DCD_STG2_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE3_TH2_DCD_STG2_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE3_TH2_DCD_STG2_BF_MSK (0x07000000)
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADCFE_Q3_FFE3_TH2_DCD_STG2_BF_DEF (0x03000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_FFE_CAP register description at address offset 0x120
  *
  * Register default value:        0x09090909
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_ffe_cap
  * rxadc_q3_ffe_cap
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_CAP0 : 6;
    ///< Controls TH1 switch capacitance for Slice0 of each quartet
    ///< AccessType="RW" BitOffset="0" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="6" ResetValue="None"
    uint32_t ADCFE_Q3_CAP1 : 6;
    ///< Controls TH1 switch capacitance for Slice1 of each quartet
    ///< AccessType="RW" BitOffset="8" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="14" ResetValue="None"
    uint32_t ADCFE_Q3_CAP2 : 6;
    ///< Controls TH1 switch capacitance for Slice2 of each quartet
    ///< AccessType="RW" BitOffset="16" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="22" ResetValue="None"
    uint32_t ADCFE_Q3_CAP3 : 6;
    ///< Controls TH1 switch capacitance for Slice3 of each quartet
    ///< AccessType="RW" BitOffset="24" ResetValue="0x9"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_ffe_cap_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_DEFAULT (0x09090909U)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_RD_MASK (0x3f3f3f3fU)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_WR_MASK (0x3f3f3f3fU)


///< Controls TH1 switch capacitance for Slice0 of each quartet
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP0_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP0_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP0_BF_MSK (0x0000003F)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP0_BF_DEF (0x00000009)

///< Controls TH1 switch capacitance for Slice1 of each quartet
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP1_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP1_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP1_BF_MSK (0x00003F00)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP1_BF_DEF (0x00000900)

///< Controls TH1 switch capacitance for Slice2 of each quartet
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP2_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP2_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP2_BF_MSK (0x003F0000)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP2_BF_DEF (0x00090000)

///< Controls TH1 switch capacitance for Slice3 of each quartet
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP3_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP3_BF_WID ( 6)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP3_BF_MSK (0x3F000000)
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADCFE_Q3_CAP3_BF_DEF (0x09000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_DFX0 register description at address offset 0x124
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_dfx0
  * rxadc_q3_dfx0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_TH1_DCMON_EN_B : 4;
    ///< enable dcmon for vcc1 of a particular slice within each quartet. <0>:
    ///< slice left<0>. <1>:: slice left<1>, <2>: slice right<0>, <3>: slice
    ///< right <1>
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_dfx0_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_DFX0_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q3_DFX0_RD_MASK (0x0000000fU)
#define RXANA_ADC_FFE_MSG_Q3_DFX0_WR_MASK (0x0000000fU)


///< enable dcmon for vcc1 of a particular slice within each quartet. <0>:
///< slice left<0>. <1>:: slice left<1>, <2>: slice right<0>, <3>: slice
///< right <1>
#define RXANA_ADC_FFE_MSG_Q3_DFX0_ADCFE_Q3_TH1_DCMON_EN_B_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_DFX0_ADCFE_Q3_TH1_DCMON_EN_B_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_DFX0_ADCFE_Q3_TH1_DCMON_EN_B_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q3_DFX0_ADCFE_Q3_TH1_DCMON_EN_B_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_DFX2 register description at address offset 0x128
  *
  * Register default value:        0x00000000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_dfx2
  * rxadc_q3_dfx2
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_PI_CLKMNTR_A_EN : 4;
    ///< TH1 clocka monitoring for FFE0 to FFE3
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q3_PI_CLKMNTR_B_EN : 4;
    ///< TH1 clockb monitoring for FFE0 to FFE3
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_dfx2_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_DFX2_DEFAULT (0x00000000U)
#define RXANA_ADC_FFE_MSG_Q3_DFX2_RD_MASK (0x000000ffU)
#define RXANA_ADC_FFE_MSG_Q3_DFX2_WR_MASK (0x000000ffU)


///< TH1 clocka monitoring for FFE0 to FFE3
#define RXANA_ADC_FFE_MSG_Q3_DFX2_ADCFE_Q3_PI_CLKMNTR_A_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_DFX2_ADCFE_Q3_PI_CLKMNTR_A_EN_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_DFX2_ADCFE_Q3_PI_CLKMNTR_A_EN_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q3_DFX2_ADCFE_Q3_PI_CLKMNTR_A_EN_BF_DEF (0x00000000)

///< TH1 clockb monitoring for FFE0 to FFE3
#define RXANA_ADC_FFE_MSG_Q3_DFX2_ADCFE_Q3_PI_CLKMNTR_B_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q3_DFX2_ADCFE_Q3_PI_CLKMNTR_B_EN_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_DFX2_ADCFE_Q3_PI_CLKMNTR_B_EN_BF_MSK (0x000000F0)
#define RXANA_ADC_FFE_MSG_Q3_DFX2_ADCFE_Q3_PI_CLKMNTR_B_EN_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_NEXTPHASE_CTRL0 register description at address offset 0x12c
  *
  * Register default value:        0x00000008
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_nextphase_ctrl0
  * rxadc_q3_nextphase_ctrl0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_FFE0_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE1_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE2_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE3_TH1_NXTPH_DELAY_EN : 1;
    ///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t  : 28;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_nextphase_ctrl0_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_DEFAULT (0x00000008U)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_RD_MASK (0x0000000fU)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_WR_MASK (0x0000000fU)


///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE0_TH1_NXTPH_DELAY_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE0_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE0_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000001)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE0_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE1_TH1_NXTPH_DELAY_EN_BF_OFF ( 1)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE1_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE1_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000002)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE1_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE2_TH1_NXTPH_DELAY_EN_BF_OFF ( 2)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE2_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE2_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000004)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE2_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000000)

///< TH1 dc ctrl - impact next ph in qrtt (n+4 in 16 ffe).
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE3_TH1_NXTPH_DELAY_EN_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE3_TH1_NXTPH_DELAY_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE3_TH1_NXTPH_DELAY_EN_BF_MSK (0x00000008)
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADCFE_Q3_FFE3_TH1_NXTPH_DELAY_EN_BF_DEF (0x00000008)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_BIAS_TRIM0 register description at address offset 0x130
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_bias_trim0
  * rxadc_q3_bias_trim0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_C00_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer0 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q3_NSF0_BIAS_TRIM : 4;
    ///< Trims gm of NSF0 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q3_CMFB0_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER0
    ///< of each quartet. 0000: Minimum current. 1111: maximum current. (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER0_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q3_SUMMER0_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_bias_trim0_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer0 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_C00_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_C00_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_C00_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_C00_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF0 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_NSF0_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_NSF0_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_NSF0_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_NSF0_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER0
///< of each quartet. 0000: Minimum current. 1111: maximum current. (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_CMFB0_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_CMFB0_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_CMFB0_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_CMFB0_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_SUMMER0_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_SUMMER0_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_SUMMER0_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_SUMMER0_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_SUMMER0_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_SUMMER0_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_SUMMER0_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADCFE_Q3_SUMMER0_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_BIAS_TRIM1 register description at address offset 0x134
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_bias_trim1
  * rxadc_q3_bias_trim1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_C01_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer1 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q3_NSF1_BIAS_TRIM : 4;
    ///< Trims gm of NSF1 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q3_CMFB1_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER1
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER1_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q3_SUMMER1_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_bias_trim1_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer1 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_C01_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_C01_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_C01_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_C01_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF1 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_NSF1_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_NSF1_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_NSF1_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_NSF1_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER1
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_CMFB1_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_CMFB1_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_CMFB1_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_CMFB1_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_SUMMER1_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_SUMMER1_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_SUMMER1_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_SUMMER1_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_SUMMER1_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_SUMMER1_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_SUMMER1_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADCFE_Q3_SUMMER1_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_BIAS_TRIM2 register description at address offset 0x138
  *
  * Register default value:        0x00111110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_bias_trim2
  * rxadc_q3_bias_trim2
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_C02_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer2 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q3_NSF2_BIAS_TRIM : 4;
    ///< Trims gm of NSF2 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q3_CMFB2_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER2
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER2_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER2_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0x8"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_bias_trim2_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_DEFAULT (0x00111110U)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer2 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_C02_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_C02_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_C02_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_C02_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF2 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_NSF2_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_NSF2_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_NSF2_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_NSF2_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER2
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_CMFB2_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_CMFB2_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_CMFB2_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_CMFB2_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_SUMMER2_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_SUMMER2_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_SUMMER2_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_SUMMER2_OFC_BIAS_TRIM_BF_DEF (0x00010000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_SUMMER2_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_SUMMER2_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_SUMMER2_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADCFE_Q3_SUMMER2_VCASC_BIAS_TRIM_BF_DEF (0x00100000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_BIAS_TRIM3 register description at address offset 0x13c
  *
  * Register default value:        0x00187110
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_bias_trim3
  * rxadc_q3_bias_trim3
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_C03_GM_GRY : 5;
    ///< Gray coded gm control of the main tap in the slicer3 of each quartet.
    ///< 00000: Minimum gm, 11111: maximum gm.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t ADCFE_Q3_NSF3_BIAS_TRIM : 4;
    ///< Trims gm of NSF3 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
    ///< NSF gm.
    ///< AccessType="RW" BitOffset="5" ResetValue="0x8"
    uint32_t ADCFE_Q3_CMFB3_BIAS_TRIM : 4;
    ///< Binary coded bias current trim of the CMFB circuit in the SUMMER3
    ///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
    ///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="9" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER3_OFC_BIAS_TRIM : 4;
    ///< Controls offset bias current of the summer offset dac 0: Minimum,
    ///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
    ///< AccessType="RW" BitOffset="13" ResetValue="0x3"
    uint32_t ADCFE_Q3_SUMMER3_VCASC_BIAS_TRIM : 4;
    ///< Controls reference voltage for the vds voltage of the cascode devices,
    ///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
    ///< AccessType="RW" BitOffset="17" ResetValue="0xC"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_bias_trim3_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_DEFAULT (0x00187110U)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_RD_MASK (0x001fffffU)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_WR_MASK (0x001fffffU)


///< Gray coded gm control of the main tap in the slicer3 of each quartet.
///< 00000: Minimum gm, 11111: maximum gm.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_C03_GM_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_C03_GM_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_C03_GM_GRY_BF_MSK (0x0000001F)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_C03_GM_GRY_BF_DEF (0x00000010)

///< Trims gm of NSF3 in each quartet. 0000: Minimum NSF gm. 1111: Maximum
///< NSF gm.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_NSF3_BIAS_TRIM_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_NSF3_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_NSF3_BIAS_TRIM_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_NSF3_BIAS_TRIM_BF_DEF (0x00000100)

///< Binary coded bias current trim of the CMFB circuit in the SUMMER3
///< of each quartet. 0000: Minimum current. 1111: maximum current.  (minimum
///< bias current is defined by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_CMFB3_BIAS_TRIM_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_CMFB3_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_CMFB3_BIAS_TRIM_BF_MSK (0x00001E00)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_CMFB3_BIAS_TRIM_BF_DEF (0x00001000)

///< Controls offset bias current of the summer offset dac 0: Minimum,
///< 1111: maximum current. (minimum current is controled by the iactl_adcfe_q*_summerofcbias_en_nt)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_SUMMER3_OFC_BIAS_TRIM_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_SUMMER3_OFC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_SUMMER3_OFC_BIAS_TRIM_BF_MSK (0x0001E000)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_SUMMER3_OFC_BIAS_TRIM_BF_DEF (0x00006000)

///< Controls reference voltage for the vds voltage of the cascode devices,
///< 0=min, 1111=max, typical=100mV (minimum is controlled by the ictl_q*_vcascbias_en)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_SUMMER3_VCASC_BIAS_TRIM_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_SUMMER3_VCASC_BIAS_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_SUMMER3_VCASC_BIAS_TRIM_BF_MSK (0x001E0000)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADCFE_Q3_SUMMER3_VCASC_BIAS_TRIM_BF_DEF (0x00180000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_BIAS_TRIM4 register description at address offset 0x140
  *
  * Register default value:        0x000658FF
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_bias_trim4
  * rxadc_q3_bias_trim4
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_C0BIAS_EN : 1;
    ///< Controls minim range of the main tap bias current. 0: Minimum=0, 1:
    ///< Minimum =32uA
    ///< AccessType="RW" BitOffset="0" ResetValue="0x1"
    uint32_t ADCFE_Q3_CMFBBIAS_EN : 1;
    ///< Enabling the main bias curren of the SUMMER CMFB circuit in each slice
    ///< of a quartet
    ///< AccessType="RW" BitOffset="1" ResetValue="0x1"
    uint32_t ADCFE_Q3_NSFBIAS_EN : 1;
    ///< Controls variation range of the NBIAS bias current of NSFs in each
    ///< quartet. 1: Full range, 0: Half range
    ///< AccessType="RW" BitOffset="2" ResetValue="0x1"
    uint32_t ADCFE_Q3_NSFBIASMAIN_EN : 1;
    ///< Enables diode connected bias master of all NSF blocks in each quartet.
    ///< 0: Disable, 1: Enable
    ///< AccessType="RW" BitOffset="3" ResetValue="0x1"
    uint32_t ADCFE_Q3_SUMMERBIASMAIN_EN : 1;
    ///< Enables nmos master diode in the quartet bias of each quartet. 1=
    ///< Enable, 0= Disable
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q3_SUMMEROFCBIAS_EN : 1;
    ///< Controls minimum current range for the summer offset DAC. 0: Minimu=0,
    ///< 1: Minimum=32uA
    ///< AccessType="RW" BitOffset="5" ResetValue="0x1"
    uint32_t ADCFE_Q3_TAPBIASMAIN_EN : 1;
    ///< Enables diode connected main bias device of side tap currents in each
    ///< quartet.
    ///< AccessType="RW" BitOffset="6" ResetValue="0x1"
    uint32_t ADCFE_Q3_SUMMER_VCASC_BIAS_EN : 1;
    ///< Controls minimum bias for the casc reference generation. 0: Minimum
    ///< current=0, 1: minimum current =32uA.
    ///< AccessType="RW" BitOffset="7" ResetValue="0x1"
    uint32_t ADCFE_Q3_NSFBIASMAIN_TRIM : 4;
    ///< Trims NSF master bias current in each quartet. 0000: Maximum current,
    ///< 1111: minimum current
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMERBIASMAIN_TRIM : 4;
    ///< Binary triming size of the nmos master diode in adcfe quartet_bias
    ///< of each quartet. 00000=Maximum bias current trim,  11111= Minimum
    ///< bias current trim.
    ///< AccessType="RW" BitOffset="12" ResetValue="0x5"
    uint32_t ADCFE_Q3_TAPBIASMAIN_TRIM : 4;
    ///< Binary coded gm trim of side taps. Calibrate this register to assure
    ///< target tap gain at maximum setting is achieved. 0000: highest gm target,
    ///< 1111: Lowest gm target.
    ///< AccessType="RW" BitOffset="16" ResetValue="0x6"
    uint32_t  : 12;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_bias_trim4_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_DEFAULT (0x000658ffU)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_RD_MASK (0x000fffffU)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_WR_MASK (0x000fffffU)


///< Controls minim range of the main tap bias current. 0: Minimum=0, 1:
///< Minimum =32uA
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_C0BIAS_EN_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_C0BIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_C0BIAS_EN_BF_MSK (0x00000001)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_C0BIAS_EN_BF_DEF (0x00000001)

///< Enabling the main bias curren of the SUMMER CMFB circuit in each slice
///< of a quartet
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_CMFBBIAS_EN_BF_OFF ( 1)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_CMFBBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_CMFBBIAS_EN_BF_MSK (0x00000002)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_CMFBBIAS_EN_BF_DEF (0x00000002)

///< Controls variation range of the NBIAS bias current of NSFs in each
///< quartet. 1: Full range, 0: Half range
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIAS_EN_BF_OFF ( 2)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIAS_EN_BF_MSK (0x00000004)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIAS_EN_BF_DEF (0x00000004)

///< Enables diode connected bias master of all NSF blocks in each quartet.
///< 0: Disable, 1: Enable
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIASMAIN_EN_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIASMAIN_EN_BF_MSK (0x00000008)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIASMAIN_EN_BF_DEF (0x00000008)

///< Enables nmos master diode in the quartet bias of each quartet. 1=
///< Enable, 0= Disable
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMERBIASMAIN_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMERBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMERBIASMAIN_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMERBIASMAIN_EN_BF_DEF (0x00000010)

///< Controls minimum current range for the summer offset DAC. 0: Minimu=0,
///< 1: Minimum=32uA
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMEROFCBIAS_EN_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMEROFCBIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMEROFCBIAS_EN_BF_MSK (0x00000020)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMEROFCBIAS_EN_BF_DEF (0x00000020)

///< Enables diode connected main bias device of side tap currents in each
///< quartet.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_TAPBIASMAIN_EN_BF_OFF ( 6)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_TAPBIASMAIN_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_TAPBIASMAIN_EN_BF_MSK (0x00000040)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_TAPBIASMAIN_EN_BF_DEF (0x00000040)

///< Controls minimum bias for the casc reference generation. 0: Minimum
///< current=0, 1: minimum current =32uA.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMER_VCASC_BIAS_EN_BF_OFF ( 7)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMER_VCASC_BIAS_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMER_VCASC_BIAS_EN_BF_MSK (0x00000080)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMER_VCASC_BIAS_EN_BF_DEF (0x00000080)

///< Trims NSF master bias current in each quartet. 0000: Maximum current,
///< 1111: minimum current
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIASMAIN_TRIM_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIASMAIN_TRIM_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_NSFBIASMAIN_TRIM_BF_DEF (0x00000800)

///< Binary triming size of the nmos master diode in adcfe quartet_bias
///< of each quartet. 00000=Maximum bias current trim,  11111= Minimum
///< bias current trim.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMERBIASMAIN_TRIM_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMERBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMERBIASMAIN_TRIM_BF_MSK (0x0000F000)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_SUMMERBIASMAIN_TRIM_BF_DEF (0x00005000)

///< Binary coded gm trim of side taps. Calibrate this register to assure
///< target tap gain at maximum setting is achieved. 0000: highest gm target,
///< 1111: Lowest gm target.
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_TAPBIASMAIN_TRIM_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_TAPBIASMAIN_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_TAPBIASMAIN_TRIM_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADCFE_Q3_TAPBIASMAIN_TRIM_BF_DEF (0x00060000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_SUMMER_OFC register description at address offset 0x144
  *
  * Register default value:        0x60606060
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_summer_ofc
  * rxadc_q3_summer_ofc
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_SUMMER0_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="0" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
    uint32_t ADCFE_Q3_SUMMER1_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="8" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
    uint32_t ADCFE_Q3_SUMMER2_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="16" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t ADCFE_Q3_SUMMER3_OFC_GRY : 7;
    ///< Controls differential offset calibration current of the Summer. MSB
    ///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
    ///< offset. GRAY CODE! Summer offset control. increasing the code will
    ///< increase the offset. Bit 7 is not connected!
    ///< AccessType="RW" BitOffset="24" ResetValue="0x60"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="31" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_summer_ofc_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_DEFAULT (0x60606060U)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_RD_MASK (0x7f7f7f7fU)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_WR_MASK (0x7f7f7f7fU)


///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER0_OFC_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER0_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER0_OFC_GRY_BF_MSK (0x0000007F)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER0_OFC_GRY_BF_DEF (0x00000060)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER1_OFC_GRY_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER1_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER1_OFC_GRY_BF_MSK (0x00007F00)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER1_OFC_GRY_BF_DEF (0x00006000)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER2_OFC_GRY_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER2_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER2_OFC_GRY_BF_MSK (0x007F0000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER2_OFC_GRY_BF_DEF (0x00600000)

///< Controls differential offset calibration current of the Summer. MSB
///< ==> noconn, 0==> maximum positive offset. 127 ==> Maximum negative
///< offset. GRAY CODE! Summer offset control. increasing the code will
///< increase the offset. Bit 7 is not connected!
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER3_OFC_GRY_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER3_OFC_GRY_BF_WID ( 7)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER3_OFC_GRY_BF_MSK (0x7F000000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADCFE_Q3_SUMMER3_OFC_GRY_BF_DEF (0x60000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_SUMMER_CMFB register description at address offset 0x148
  *
  * Register default value:        0x18181818
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_summer_cmfb
  * rxadc_q3_summer_cmfb
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_SUMMER0_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. GRAY CODE!
    ///< MSB bit enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER0_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
    uint32_t ADCFE_Q3_SUMMER1_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER1_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="12" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="13" ResetValue="None"
    uint32_t ADCFE_Q3_SUMMER2_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER2_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="20" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
    uint32_t ADCFE_Q3_SUMMER3_CMFB_OFC_GRY : 4;
    ///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
    ///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
    ///< <4>: not connected. <3:0>: Differential offset calibration of the
    ///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
    ///< CM voltage.                         <4>: not connected. 5
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER3_CMFB_OPAMP_EN : 1;
    ///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
    ///< enables the cmfb, bits 3-0 are the offset control bits.
    ///< AccessType="RW" BitOffset="28" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="29" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_summer_cmfb_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_DEFAULT (0x18181818U)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_RD_MASK (0x1f1f1f1fU)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_WR_MASK (0x1f1f1f1fU)


///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. GRAY CODE!
///< MSB bit enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER0_CMFB_OFC_GRY_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER0_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER0_CMFB_OFC_GRY_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER0_CMFB_OFC_GRY_BF_DEF (0x00000008)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER0_CMFB_OPAMP_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER0_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER0_CMFB_OPAMP_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER0_CMFB_OPAMP_EN_BF_DEF (0x00000010)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER1_CMFB_OFC_GRY_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER1_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER1_CMFB_OFC_GRY_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER1_CMFB_OFC_GRY_BF_DEF (0x00000800)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER1_CMFB_OPAMP_EN_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER1_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER1_CMFB_OPAMP_EN_BF_MSK (0x00001000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER1_CMFB_OPAMP_EN_BF_DEF (0x00001000)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER2_CMFB_OFC_GRY_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER2_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER2_CMFB_OFC_GRY_BF_MSK (0x000F0000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER2_CMFB_OFC_GRY_BF_DEF (0x00080000)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER2_CMFB_OPAMP_EN_BF_OFF (20)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER2_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER2_CMFB_OPAMP_EN_BF_MSK (0x00100000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER2_CMFB_OPAMP_EN_BF_DEF (0x00100000)

///< <3:0>: Differential offset calibration of the CMFB opamp,  <3:0>=0
///< ==> Increases CM voltage. <3:0>=15 ==> Decreases CM voltage.
///< <4>: not connected. <3:0>: Differential offset calibration of the
///< CMFB opamp,  <3:0>=0 ==> Increases CM voltage. <3:0>=15 ==> Decreases
///< CM voltage.                         <4>: not connected. 5
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER3_CMFB_OFC_GRY_BF_OFF (24)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER3_CMFB_OFC_GRY_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER3_CMFB_OFC_GRY_BF_MSK (0x0F000000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER3_CMFB_OFC_GRY_BF_DEF (0x08000000)

///< Enables CMFB for all the summers in the quartet. GRAY CODE! MSB bit
///< enables the cmfb, bits 3-0 are the offset control bits.
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER3_CMFB_OPAMP_EN_BF_OFF (28)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER3_CMFB_OPAMP_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER3_CMFB_OPAMP_EN_BF_MSK (0x10000000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADCFE_Q3_SUMMER3_CMFB_OPAMP_EN_BF_DEF (0x10000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_SUMMER_RES register description at address offset 0x14c
  *
  * Register default value:        0x88888888
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_summer_res
  * rxadc_q3_summer_res
  */

typedef union {
  struct {
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="0" ResetValue="None"
    uint32_t ADCFE_Q3_SUMMER0_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="3" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
    uint32_t ADCFE_Q3_SUMMER1_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="11" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
    uint32_t ADCFE_Q3_SUMMER2_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="19" ResetValue="0x11"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
    uint32_t ADCFE_Q3_SUMMER3_RES_GRY : 5;
    ///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
    ///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
    ///< CODE! controls the resistor that affects the BW of the summer. Bits
    ///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
    ///< 2-0 are fine tune
    ///< AccessType="RW" BitOffset="27" ResetValue="0x11"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_summer_res_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_DEFAULT (0x88888888U)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_RD_MASK (0xf8f8f8f8U)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_WR_MASK (0xf8f8f8f8U)


///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER0_RES_GRY_BF_OFF ( 3)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER0_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER0_RES_GRY_BF_MSK (0x000000F8)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER0_RES_GRY_BF_DEF (0x00000088)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER1_RES_GRY_BF_OFF (11)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER1_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER1_RES_GRY_BF_MSK (0x0000F800)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER1_RES_GRY_BF_DEF (0x00008800)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER2_RES_GRY_BF_OFF (19)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER2_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER2_RES_GRY_BF_MSK (0x00F80000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER2_RES_GRY_BF_DEF (0x00880000)

///< Gray coded maintap gain control. <7:5>: not connected. <4:0>==00000==>
///< Maximum possible gain. <4:0>==10000==> minimum possible gain. GRAY
///< CODE! controls the resistor that affects the BW of the summer. Bits
///< 6-7 are hard wired to vssx. Bits 5-3 are the coarse tune and bits
///< 2-0 are fine tune
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER3_RES_GRY_BF_OFF (27)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER3_RES_GRY_BF_WID ( 5)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER3_RES_GRY_BF_MSK (0xF8000000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADCFE_Q3_SUMMER3_RES_GRY_BF_DEF (0x88000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_SUMMER_VCASC register description at address offset 0x150
  *
  * Register default value:        0x00018888
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_summer_vcasc
  * rxadc_q3_summer_vcasc
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_SUMMER0_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER1_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="4" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER2_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER3_VCASC_BLEED_TRIM : 4;
    ///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
    ///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
    ///< register)
    ///< AccessType="RW" BitOffset="12" ResetValue="0x8"
    uint32_t ADCFE_Q3_SUMMER_VCASC_BLEED_EN : 1;
    ///< Controls minimum casc beed current bias. 0: Minimum current =0, 1:
    ///< Minimum current =15uA
    ///< AccessType="RW" BitOffset="16" ResetValue="0x1"
    uint32_t  : 15;
    ///< Reserved
    ///< AccessType="RO" BitOffset="17" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_summer_vcasc_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_DEFAULT (0x00018888U)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_RD_MASK (0x0001ffffU)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_WR_MASK (0x0001ffffU)


///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER0_VCASC_BLEED_TRIM_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER0_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER0_VCASC_BLEED_TRIM_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER0_VCASC_BLEED_TRIM_BF_DEF (0x00000008)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER1_VCASC_BLEED_TRIM_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER1_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER1_VCASC_BLEED_TRIM_BF_MSK (0x000000F0)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER1_VCASC_BLEED_TRIM_BF_DEF (0x00000080)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER2_VCASC_BLEED_TRIM_BF_OFF ( 8)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER2_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER2_VCASC_BLEED_TRIM_BF_MSK (0x00000F00)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER2_VCASC_BLEED_TRIM_BF_DEF (0x00000800)

///< Controls casccode bleeding current. 0=min, 1111=max. Typical=25uA.
///< (minimum current is a function of the iactl_adcfe_q*_vcasbias_bleed_en
///< register)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER3_VCASC_BLEED_TRIM_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER3_VCASC_BLEED_TRIM_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER3_VCASC_BLEED_TRIM_BF_MSK (0x0000F000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER3_VCASC_BLEED_TRIM_BF_DEF (0x00008000)

///< Controls minimum casc beed current bias. 0: Minimum current =0, 1:
///< Minimum current =15uA
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER_VCASC_BLEED_EN_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER_VCASC_BLEED_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER_VCASC_BLEED_EN_BF_MSK (0x00010000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADCFE_Q3_SUMMER_VCASC_BLEED_EN_BF_DEF (0x00010000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_SUMMER_CTRL0 register description at address offset 0x154
  *
  * Register default value:        0x00000210
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_summer_ctrl0
  * rxadc_q3_summer_ctrl0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_SUMMER0_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER0_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q3_SUMMER1_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER1_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_summer_ctrl0_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_DEFAULT (0x00000210U)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_RD_MASK (0x000003ffU)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_WR_MASK (0x000003ffU)


///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER0_DFX_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER0_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER0_DFX_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER0_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER0_C0_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER0_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER0_C0_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER0_C0_EN_BF_DEF (0x00000010)

///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER1_DFX_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER1_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER1_DFX_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER1_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER1_C0_EN_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER1_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER1_C0_EN_BF_MSK (0x00000200)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADCFE_Q3_SUMMER1_C0_EN_BF_DEF (0x00000200)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_SUMMER_CTRL1 register description at address offset 0x158
  *
  * Register default value:        0x00000210
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_summer_ctrl1
  * rxadc_q3_summer_ctrl1
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_SUMMER2_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER2_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="4" ResetValue="0x1"
    uint32_t ADCFE_Q3_SUMMER3_DFX : 4;
    ///< Summer and NSF dfxcontrols
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER3_C0_EN : 1;
    ///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t ADCFE_Q3_PD_B : 1;
    ///< Full power down of each of the q0/q1/q2/q3 quartets
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t ADCFE_Q3_FFE_PD_B : 1;
    ///< Powers down FFE only at each q0/q1/q2/q3 quartet
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER0_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER0_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER1_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="14" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER1_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER2_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER2_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER3_CMFB_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER3_OFC_SPARE : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="19" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER0_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER1_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="23" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER2_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="26" ResetValue="0x0"
    uint32_t ADCFE_Q3_SUMMER3_RES_SPARE : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="29" ResetValue="0x0"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_summer_ctrl1_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_DEFAULT (0x00000210U)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_RD_MASK (0xffffffffU)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_WR_MASK (0xffffffffU)


///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_DFX_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_DFX_BF_MSK (0x0000000F)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_C0_EN_BF_OFF ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_C0_EN_BF_MSK (0x00000010)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_C0_EN_BF_DEF (0x00000010)

///< Summer and NSF dfxcontrols
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_DFX_BF_OFF ( 5)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_DFX_BF_WID ( 4)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_DFX_BF_MSK (0x000001E0)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_DFX_BF_DEF (0x00000000)

///< 0: Shorts output of the main tap to vcc2/2, 1: Normal
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_C0_EN_BF_OFF ( 9)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_C0_EN_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_C0_EN_BF_MSK (0x00000200)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_C0_EN_BF_DEF (0x00000200)

///< Full power down of each of the q0/q1/q2/q3 quartets
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_PD_B_BF_OFF (10)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_PD_B_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_PD_B_BF_MSK (0x00000400)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_PD_B_BF_DEF (0x00000000)

///< Powers down FFE only at each q0/q1/q2/q3 quartet
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_FFE_PD_B_BF_OFF (11)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_FFE_PD_B_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_FFE_PD_B_BF_MSK (0x00000800)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_FFE_PD_B_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_CMFB_OFC_SPARE_BF_OFF (12)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_CMFB_OFC_SPARE_BF_MSK (0x00001000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_OFC_SPARE_BF_OFF (13)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_OFC_SPARE_BF_MSK (0x00002000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_CMFB_OFC_SPARE_BF_OFF (14)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_CMFB_OFC_SPARE_BF_MSK (0x00004000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_OFC_SPARE_BF_OFF (15)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_OFC_SPARE_BF_MSK (0x00008000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_CMFB_OFC_SPARE_BF_OFF (16)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_CMFB_OFC_SPARE_BF_MSK (0x00010000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_OFC_SPARE_BF_OFF (17)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_OFC_SPARE_BF_MSK (0x00020000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_CMFB_OFC_SPARE_BF_OFF (18)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_CMFB_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_CMFB_OFC_SPARE_BF_MSK (0x00040000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_CMFB_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_OFC_SPARE_BF_OFF (19)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_OFC_SPARE_BF_WID ( 1)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_OFC_SPARE_BF_MSK (0x00080000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_OFC_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_RES_SPARE_BF_OFF (20)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_RES_SPARE_BF_MSK (0x00700000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER0_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_RES_SPARE_BF_OFF (23)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_RES_SPARE_BF_MSK (0x03800000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER1_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_RES_SPARE_BF_OFF (26)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_RES_SPARE_BF_MSK (0x1C000000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER2_RES_SPARE_BF_DEF (0x00000000)

#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_RES_SPARE_BF_OFF (29)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_RES_SPARE_BF_WID ( 3)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_RES_SPARE_BF_MSK (0xE0000000)
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADCFE_Q3_SUMMER3_RES_SPARE_BF_DEF (0x00000000)


/** @brief RXANA_ADC_FFE_REGS_MSG_RXANA_ADC_FFE_REGS_RXADC_Q3_FFE_SPARE0 register description at address offset 0x15c
  *
  * Register default value:        0x00F00000
  * Register full path in IP: RXANA_ADC_FFE_regs_MSG/RXANA_ADC_FFE_regs/rxadc_q3_ffe_spare0
  * rxadc_q3_ffe_spare0
  */

typedef union {
  struct {
    uint32_t ADCFE_Q3_SPARE : 24;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0xF00000"
    uint32_t  : 8;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
  } ;
  uint32_t value;
} rxana_adc_ffe_msg_q3_ffe_spare0_reg_t;

#define RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_DEFAULT (0x00f00000U)
#define RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_RD_MASK (0x00ffffffU)
#define RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_WR_MASK (0x00ffffffU)


#define RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_ADCFE_Q3_SPARE_BF_OFF ( 0)
#define RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_ADCFE_Q3_SPARE_BF_WID (24)
#define RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_ADCFE_Q3_SPARE_BF_MSK (0x00FFFFFF)
#define RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_ADCFE_Q3_SPARE_BF_DEF (0x00F00000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q0_ffe0_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q0_FFE0_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q0_ffe1_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q0_FFE1_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q0_ffe2_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q0_FFE2_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q0_ffe3_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q0_FFE3_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_REG(_BASE) ((rxana_adc_ffe_msg_q0_ffe_dcd0_reg_t*) RXANA_ADC_FFE_MSG_Q0_FFE_DCD0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_REG(_BASE) ((rxana_adc_ffe_msg_q0_ffe_dcd1_reg_t*) RXANA_ADC_FFE_MSG_Q0_FFE_DCD1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_FFE_CAP_REG(_BASE) ((rxana_adc_ffe_msg_q0_ffe_cap_reg_t*) RXANA_ADC_FFE_MSG_Q0_FFE_CAP_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_DFX0_REG(_BASE) ((rxana_adc_ffe_msg_q0_dfx0_reg_t*) RXANA_ADC_FFE_MSG_Q0_DFX0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_DFX2_REG(_BASE) ((rxana_adc_ffe_msg_q0_dfx2_reg_t*) RXANA_ADC_FFE_MSG_Q0_DFX2_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_REG(_BASE) ((rxana_adc_ffe_msg_q0_nextphase_ctrl0_reg_t*) RXANA_ADC_FFE_MSG_Q0_NEXTPHASE_CTRL0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_REG(_BASE) ((rxana_adc_ffe_msg_q0_bias_trim0_reg_t*) RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_REG(_BASE) ((rxana_adc_ffe_msg_q0_bias_trim1_reg_t*) RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_REG(_BASE) ((rxana_adc_ffe_msg_q0_bias_trim2_reg_t*) RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM2_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_REG(_BASE) ((rxana_adc_ffe_msg_q0_bias_trim3_reg_t*) RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM3_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_REG(_BASE) ((rxana_adc_ffe_msg_q0_bias_trim4_reg_t*) RXANA_ADC_FFE_MSG_Q0_BIAS_TRIM4_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_REG(_BASE) ((rxana_adc_ffe_msg_q0_summer_ofc_reg_t*) RXANA_ADC_FFE_MSG_Q0_SUMMER_OFC_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_REG(_BASE) ((rxana_adc_ffe_msg_q0_summer_cmfb_reg_t*) RXANA_ADC_FFE_MSG_Q0_SUMMER_CMFB_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_REG(_BASE) ((rxana_adc_ffe_msg_q0_summer_res_reg_t*) RXANA_ADC_FFE_MSG_Q0_SUMMER_RES_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_REG(_BASE) ((rxana_adc_ffe_msg_q0_summer_vcasc_reg_t*) RXANA_ADC_FFE_MSG_Q0_SUMMER_VCASC_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_REG(_BASE) ((rxana_adc_ffe_msg_q0_summer_ctrl0_reg_t*) RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_REG(_BASE) ((rxana_adc_ffe_msg_q0_summer_ctrl1_reg_t*) RXANA_ADC_FFE_MSG_Q0_SUMMER_CTRL1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_REG(_BASE) ((rxana_adc_ffe_msg_q0_ffe_spare0_reg_t*) RXANA_ADC_FFE_MSG_Q0_FFE_SPARE0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q1_ffe0_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q1_FFE0_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q1_ffe1_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q1_FFE1_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q1_ffe2_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q1_FFE2_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q1_ffe3_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q1_FFE3_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_REG(_BASE) ((rxana_adc_ffe_msg_q1_ffe_dcd0_reg_t*) RXANA_ADC_FFE_MSG_Q1_FFE_DCD0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_REG(_BASE) ((rxana_adc_ffe_msg_q1_ffe_dcd1_reg_t*) RXANA_ADC_FFE_MSG_Q1_FFE_DCD1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_FFE_CAP_REG(_BASE) ((rxana_adc_ffe_msg_q1_ffe_cap_reg_t*) RXANA_ADC_FFE_MSG_Q1_FFE_CAP_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_DFX0_REG(_BASE) ((rxana_adc_ffe_msg_q1_dfx0_reg_t*) RXANA_ADC_FFE_MSG_Q1_DFX0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_DFX2_REG(_BASE) ((rxana_adc_ffe_msg_q1_dfx2_reg_t*) RXANA_ADC_FFE_MSG_Q1_DFX2_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_REG(_BASE) ((rxana_adc_ffe_msg_q1_nextphase_ctrl0_reg_t*) RXANA_ADC_FFE_MSG_Q1_NEXTPHASE_CTRL0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_REG(_BASE) ((rxana_adc_ffe_msg_q1_bias_trim0_reg_t*) RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_REG(_BASE) ((rxana_adc_ffe_msg_q1_bias_trim1_reg_t*) RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_REG(_BASE) ((rxana_adc_ffe_msg_q1_bias_trim2_reg_t*) RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM2_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_REG(_BASE) ((rxana_adc_ffe_msg_q1_bias_trim3_reg_t*) RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM3_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_REG(_BASE) ((rxana_adc_ffe_msg_q1_bias_trim4_reg_t*) RXANA_ADC_FFE_MSG_Q1_BIAS_TRIM4_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_REG(_BASE) ((rxana_adc_ffe_msg_q1_summer_ofc_reg_t*) RXANA_ADC_FFE_MSG_Q1_SUMMER_OFC_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_REG(_BASE) ((rxana_adc_ffe_msg_q1_summer_cmfb_reg_t*) RXANA_ADC_FFE_MSG_Q1_SUMMER_CMFB_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_REG(_BASE) ((rxana_adc_ffe_msg_q1_summer_res_reg_t*) RXANA_ADC_FFE_MSG_Q1_SUMMER_RES_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_REG(_BASE) ((rxana_adc_ffe_msg_q1_summer_vcasc_reg_t*) RXANA_ADC_FFE_MSG_Q1_SUMMER_VCASC_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_REG(_BASE) ((rxana_adc_ffe_msg_q1_summer_ctrl0_reg_t*) RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_REG(_BASE) ((rxana_adc_ffe_msg_q1_summer_ctrl1_reg_t*) RXANA_ADC_FFE_MSG_Q1_SUMMER_CTRL1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_REG(_BASE) ((rxana_adc_ffe_msg_q1_ffe_spare0_reg_t*) RXANA_ADC_FFE_MSG_Q1_FFE_SPARE0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q2_ffe0_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q2_FFE0_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q2_ffe1_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q2_FFE1_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q2_ffe2_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q2_FFE2_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q2_ffe3_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q2_FFE3_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_REG(_BASE) ((rxana_adc_ffe_msg_q2_ffe_dcd0_reg_t*) RXANA_ADC_FFE_MSG_Q2_FFE_DCD0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_REG(_BASE) ((rxana_adc_ffe_msg_q2_ffe_dcd1_reg_t*) RXANA_ADC_FFE_MSG_Q2_FFE_DCD1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_FFE_CAP_REG(_BASE) ((rxana_adc_ffe_msg_q2_ffe_cap_reg_t*) RXANA_ADC_FFE_MSG_Q2_FFE_CAP_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_DFX0_REG(_BASE) ((rxana_adc_ffe_msg_q2_dfx0_reg_t*) RXANA_ADC_FFE_MSG_Q2_DFX0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_DFX2_REG(_BASE) ((rxana_adc_ffe_msg_q2_dfx2_reg_t*) RXANA_ADC_FFE_MSG_Q2_DFX2_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_REG(_BASE) ((rxana_adc_ffe_msg_q2_nextphase_ctrl0_reg_t*) RXANA_ADC_FFE_MSG_Q2_NEXTPHASE_CTRL0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_REG(_BASE) ((rxana_adc_ffe_msg_q2_bias_trim0_reg_t*) RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_REG(_BASE) ((rxana_adc_ffe_msg_q2_bias_trim1_reg_t*) RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_REG(_BASE) ((rxana_adc_ffe_msg_q2_bias_trim2_reg_t*) RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM2_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_REG(_BASE) ((rxana_adc_ffe_msg_q2_bias_trim3_reg_t*) RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM3_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_REG(_BASE) ((rxana_adc_ffe_msg_q2_bias_trim4_reg_t*) RXANA_ADC_FFE_MSG_Q2_BIAS_TRIM4_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_REG(_BASE) ((rxana_adc_ffe_msg_q2_summer_ofc_reg_t*) RXANA_ADC_FFE_MSG_Q2_SUMMER_OFC_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_REG(_BASE) ((rxana_adc_ffe_msg_q2_summer_cmfb_reg_t*) RXANA_ADC_FFE_MSG_Q2_SUMMER_CMFB_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_REG(_BASE) ((rxana_adc_ffe_msg_q2_summer_res_reg_t*) RXANA_ADC_FFE_MSG_Q2_SUMMER_RES_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_REG(_BASE) ((rxana_adc_ffe_msg_q2_summer_vcasc_reg_t*) RXANA_ADC_FFE_MSG_Q2_SUMMER_VCASC_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_REG(_BASE) ((rxana_adc_ffe_msg_q2_summer_ctrl0_reg_t*) RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_REG(_BASE) ((rxana_adc_ffe_msg_q2_summer_ctrl1_reg_t*) RXANA_ADC_FFE_MSG_Q2_SUMMER_CTRL1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_REG(_BASE) ((rxana_adc_ffe_msg_q2_ffe_spare0_reg_t*) RXANA_ADC_FFE_MSG_Q2_FFE_SPARE0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q3_ffe0_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q3_FFE0_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q3_ffe1_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q3_FFE1_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q3_ffe2_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q3_FFE2_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_REG(_BASE) ((rxana_adc_ffe_msg_q3_ffe3_coeff_reg_t*) RXANA_ADC_FFE_MSG_Q3_FFE3_COEFF_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_REG(_BASE) ((rxana_adc_ffe_msg_q3_ffe_dcd0_reg_t*) RXANA_ADC_FFE_MSG_Q3_FFE_DCD0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_REG(_BASE) ((rxana_adc_ffe_msg_q3_ffe_dcd1_reg_t*) RXANA_ADC_FFE_MSG_Q3_FFE_DCD1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_FFE_CAP_REG(_BASE) ((rxana_adc_ffe_msg_q3_ffe_cap_reg_t*) RXANA_ADC_FFE_MSG_Q3_FFE_CAP_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_DFX0_REG(_BASE) ((rxana_adc_ffe_msg_q3_dfx0_reg_t*) RXANA_ADC_FFE_MSG_Q3_DFX0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_DFX2_REG(_BASE) ((rxana_adc_ffe_msg_q3_dfx2_reg_t*) RXANA_ADC_FFE_MSG_Q3_DFX2_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_REG(_BASE) ((rxana_adc_ffe_msg_q3_nextphase_ctrl0_reg_t*) RXANA_ADC_FFE_MSG_Q3_NEXTPHASE_CTRL0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_REG(_BASE) ((rxana_adc_ffe_msg_q3_bias_trim0_reg_t*) RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_REG(_BASE) ((rxana_adc_ffe_msg_q3_bias_trim1_reg_t*) RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_REG(_BASE) ((rxana_adc_ffe_msg_q3_bias_trim2_reg_t*) RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM2_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_REG(_BASE) ((rxana_adc_ffe_msg_q3_bias_trim3_reg_t*) RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM3_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_REG(_BASE) ((rxana_adc_ffe_msg_q3_bias_trim4_reg_t*) RXANA_ADC_FFE_MSG_Q3_BIAS_TRIM4_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_REG(_BASE) ((rxana_adc_ffe_msg_q3_summer_ofc_reg_t*) RXANA_ADC_FFE_MSG_Q3_SUMMER_OFC_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_REG(_BASE) ((rxana_adc_ffe_msg_q3_summer_cmfb_reg_t*) RXANA_ADC_FFE_MSG_Q3_SUMMER_CMFB_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_REG(_BASE) ((rxana_adc_ffe_msg_q3_summer_res_reg_t*) RXANA_ADC_FFE_MSG_Q3_SUMMER_RES_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_REG(_BASE) ((rxana_adc_ffe_msg_q3_summer_vcasc_reg_t*) RXANA_ADC_FFE_MSG_Q3_SUMMER_VCASC_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_REG(_BASE) ((rxana_adc_ffe_msg_q3_summer_ctrl0_reg_t*) RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL0_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_REG(_BASE) ((rxana_adc_ffe_msg_q3_summer_ctrl1_reg_t*) RXANA_ADC_FFE_MSG_Q3_SUMMER_CTRL1_ADR(_BASE))
#define RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_REG(_BASE) ((rxana_adc_ffe_msg_q3_ffe_spare0_reg_t*) RXANA_ADC_FFE_MSG_Q3_FFE_SPARE0_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    rxana_adc_ffe_msg_q0_ffe0_coeff_reg_t Q0_FFE0_COEFF; /*< Address offset = 0x0 */
    rxana_adc_ffe_msg_q0_ffe1_coeff_reg_t Q0_FFE1_COEFF; /*< Address offset = 0x4 */
    rxana_adc_ffe_msg_q0_ffe2_coeff_reg_t Q0_FFE2_COEFF; /*< Address offset = 0x8 */
    rxana_adc_ffe_msg_q0_ffe3_coeff_reg_t Q0_FFE3_COEFF; /*< Address offset = 0xc */
    rxana_adc_ffe_msg_q0_ffe_dcd0_reg_t Q0_FFE_DCD0; /*< Address offset = 0x10 */
    rxana_adc_ffe_msg_q0_ffe_dcd1_reg_t Q0_FFE_DCD1; /*< Address offset = 0x14 */
    rxana_adc_ffe_msg_q0_ffe_cap_reg_t Q0_FFE_CAP; /*< Address offset = 0x18 */
    rxana_adc_ffe_msg_q0_dfx0_reg_t Q0_DFX0; /*< Address offset = 0x1c */
    rxana_adc_ffe_msg_q0_dfx2_reg_t Q0_DFX2; /*< Address offset = 0x20 */
    rxana_adc_ffe_msg_q0_nextphase_ctrl0_reg_t Q0_NEXTPHASE_CTRL0; /*< Address offset = 0x24 */
    rxana_adc_ffe_msg_q0_bias_trim0_reg_t Q0_BIAS_TRIM0; /*< Address offset = 0x28 */
    rxana_adc_ffe_msg_q0_bias_trim1_reg_t Q0_BIAS_TRIM1; /*< Address offset = 0x2c */
    rxana_adc_ffe_msg_q0_bias_trim2_reg_t Q0_BIAS_TRIM2; /*< Address offset = 0x30 */
    rxana_adc_ffe_msg_q0_bias_trim3_reg_t Q0_BIAS_TRIM3; /*< Address offset = 0x34 */
    rxana_adc_ffe_msg_q0_bias_trim4_reg_t Q0_BIAS_TRIM4; /*< Address offset = 0x38 */
    rxana_adc_ffe_msg_q0_summer_ofc_reg_t Q0_SUMMER_OFC; /*< Address offset = 0x3c */
    rxana_adc_ffe_msg_q0_summer_cmfb_reg_t Q0_SUMMER_CMFB; /*< Address offset = 0x40 */
    rxana_adc_ffe_msg_q0_summer_res_reg_t Q0_SUMMER_RES; /*< Address offset = 0x44 */
    rxana_adc_ffe_msg_q0_summer_vcasc_reg_t Q0_SUMMER_VCASC; /*< Address offset = 0x48 */
    rxana_adc_ffe_msg_q0_summer_ctrl0_reg_t Q0_SUMMER_CTRL0; /*< Address offset = 0x4c */
    rxana_adc_ffe_msg_q0_summer_ctrl1_reg_t Q0_SUMMER_CTRL1; /*< Address offset = 0x50 */
    rxana_adc_ffe_msg_q0_ffe_spare0_reg_t Q0_FFE_SPARE0; /*< Address offset = 0x54 */
    rxana_adc_ffe_msg_q1_ffe0_coeff_reg_t Q1_FFE0_COEFF; /*< Address offset = 0x58 */
    rxana_adc_ffe_msg_q1_ffe1_coeff_reg_t Q1_FFE1_COEFF; /*< Address offset = 0x5c */
    rxana_adc_ffe_msg_q1_ffe2_coeff_reg_t Q1_FFE2_COEFF; /*< Address offset = 0x60 */
    rxana_adc_ffe_msg_q1_ffe3_coeff_reg_t Q1_FFE3_COEFF; /*< Address offset = 0x64 */
    rxana_adc_ffe_msg_q1_ffe_dcd0_reg_t Q1_FFE_DCD0; /*< Address offset = 0x68 */
    rxana_adc_ffe_msg_q1_ffe_dcd1_reg_t Q1_FFE_DCD1; /*< Address offset = 0x6c */
    rxana_adc_ffe_msg_q1_ffe_cap_reg_t Q1_FFE_CAP; /*< Address offset = 0x70 */
    rxana_adc_ffe_msg_q1_dfx0_reg_t Q1_DFX0; /*< Address offset = 0x74 */
    rxana_adc_ffe_msg_q1_dfx2_reg_t Q1_DFX2; /*< Address offset = 0x78 */
    rxana_adc_ffe_msg_q1_nextphase_ctrl0_reg_t Q1_NEXTPHASE_CTRL0; /*< Address offset = 0x7c */
    rxana_adc_ffe_msg_q1_bias_trim0_reg_t Q1_BIAS_TRIM0; /*< Address offset = 0x80 */
    rxana_adc_ffe_msg_q1_bias_trim1_reg_t Q1_BIAS_TRIM1; /*< Address offset = 0x84 */
    rxana_adc_ffe_msg_q1_bias_trim2_reg_t Q1_BIAS_TRIM2; /*< Address offset = 0x88 */
    rxana_adc_ffe_msg_q1_bias_trim3_reg_t Q1_BIAS_TRIM3; /*< Address offset = 0x8c */
    rxana_adc_ffe_msg_q1_bias_trim4_reg_t Q1_BIAS_TRIM4; /*< Address offset = 0x90 */
    rxana_adc_ffe_msg_q1_summer_ofc_reg_t Q1_SUMMER_OFC; /*< Address offset = 0x94 */
    rxana_adc_ffe_msg_q1_summer_cmfb_reg_t Q1_SUMMER_CMFB; /*< Address offset = 0x98 */
    rxana_adc_ffe_msg_q1_summer_res_reg_t Q1_SUMMER_RES; /*< Address offset = 0x9c */
    rxana_adc_ffe_msg_q1_summer_vcasc_reg_t Q1_SUMMER_VCASC; /*< Address offset = 0xa0 */
    rxana_adc_ffe_msg_q1_summer_ctrl0_reg_t Q1_SUMMER_CTRL0; /*< Address offset = 0xa4 */
    rxana_adc_ffe_msg_q1_summer_ctrl1_reg_t Q1_SUMMER_CTRL1; /*< Address offset = 0xa8 */
    rxana_adc_ffe_msg_q1_ffe_spare0_reg_t Q1_FFE_SPARE0; /*< Address offset = 0xac */
    rxana_adc_ffe_msg_q2_ffe0_coeff_reg_t Q2_FFE0_COEFF; /*< Address offset = 0xb0 */
    rxana_adc_ffe_msg_q2_ffe1_coeff_reg_t Q2_FFE1_COEFF; /*< Address offset = 0xb4 */
    rxana_adc_ffe_msg_q2_ffe2_coeff_reg_t Q2_FFE2_COEFF; /*< Address offset = 0xb8 */
    rxana_adc_ffe_msg_q2_ffe3_coeff_reg_t Q2_FFE3_COEFF; /*< Address offset = 0xbc */
    rxana_adc_ffe_msg_q2_ffe_dcd0_reg_t Q2_FFE_DCD0; /*< Address offset = 0xc0 */
    rxana_adc_ffe_msg_q2_ffe_dcd1_reg_t Q2_FFE_DCD1; /*< Address offset = 0xc4 */
    rxana_adc_ffe_msg_q2_ffe_cap_reg_t Q2_FFE_CAP; /*< Address offset = 0xc8 */
    rxana_adc_ffe_msg_q2_dfx0_reg_t Q2_DFX0; /*< Address offset = 0xcc */
    rxana_adc_ffe_msg_q2_dfx2_reg_t Q2_DFX2; /*< Address offset = 0xd0 */
    rxana_adc_ffe_msg_q2_nextphase_ctrl0_reg_t Q2_NEXTPHASE_CTRL0; /*< Address offset = 0xd4 */
    rxana_adc_ffe_msg_q2_bias_trim0_reg_t Q2_BIAS_TRIM0; /*< Address offset = 0xd8 */
    rxana_adc_ffe_msg_q2_bias_trim1_reg_t Q2_BIAS_TRIM1; /*< Address offset = 0xdc */
    rxana_adc_ffe_msg_q2_bias_trim2_reg_t Q2_BIAS_TRIM2; /*< Address offset = 0xe0 */
    rxana_adc_ffe_msg_q2_bias_trim3_reg_t Q2_BIAS_TRIM3; /*< Address offset = 0xe4 */
    rxana_adc_ffe_msg_q2_bias_trim4_reg_t Q2_BIAS_TRIM4; /*< Address offset = 0xe8 */
    rxana_adc_ffe_msg_q2_summer_ofc_reg_t Q2_SUMMER_OFC; /*< Address offset = 0xec */
    rxana_adc_ffe_msg_q2_summer_cmfb_reg_t Q2_SUMMER_CMFB; /*< Address offset = 0xf0 */
    rxana_adc_ffe_msg_q2_summer_res_reg_t Q2_SUMMER_RES; /*< Address offset = 0xf4 */
    rxana_adc_ffe_msg_q2_summer_vcasc_reg_t Q2_SUMMER_VCASC; /*< Address offset = 0xf8 */
    rxana_adc_ffe_msg_q2_summer_ctrl0_reg_t Q2_SUMMER_CTRL0; /*< Address offset = 0xfc */
    rxana_adc_ffe_msg_q2_summer_ctrl1_reg_t Q2_SUMMER_CTRL1; /*< Address offset = 0x100 */
    rxana_adc_ffe_msg_q2_ffe_spare0_reg_t Q2_FFE_SPARE0; /*< Address offset = 0x104 */
    rxana_adc_ffe_msg_q3_ffe0_coeff_reg_t Q3_FFE0_COEFF; /*< Address offset = 0x108 */
    rxana_adc_ffe_msg_q3_ffe1_coeff_reg_t Q3_FFE1_COEFF; /*< Address offset = 0x10c */
    rxana_adc_ffe_msg_q3_ffe2_coeff_reg_t Q3_FFE2_COEFF; /*< Address offset = 0x110 */
    rxana_adc_ffe_msg_q3_ffe3_coeff_reg_t Q3_FFE3_COEFF; /*< Address offset = 0x114 */
    rxana_adc_ffe_msg_q3_ffe_dcd0_reg_t Q3_FFE_DCD0; /*< Address offset = 0x118 */
    rxana_adc_ffe_msg_q3_ffe_dcd1_reg_t Q3_FFE_DCD1; /*< Address offset = 0x11c */
    rxana_adc_ffe_msg_q3_ffe_cap_reg_t Q3_FFE_CAP; /*< Address offset = 0x120 */
    rxana_adc_ffe_msg_q3_dfx0_reg_t Q3_DFX0; /*< Address offset = 0x124 */
    rxana_adc_ffe_msg_q3_dfx2_reg_t Q3_DFX2; /*< Address offset = 0x128 */
    rxana_adc_ffe_msg_q3_nextphase_ctrl0_reg_t Q3_NEXTPHASE_CTRL0; /*< Address offset = 0x12c */
    rxana_adc_ffe_msg_q3_bias_trim0_reg_t Q3_BIAS_TRIM0; /*< Address offset = 0x130 */
    rxana_adc_ffe_msg_q3_bias_trim1_reg_t Q3_BIAS_TRIM1; /*< Address offset = 0x134 */
    rxana_adc_ffe_msg_q3_bias_trim2_reg_t Q3_BIAS_TRIM2; /*< Address offset = 0x138 */
    rxana_adc_ffe_msg_q3_bias_trim3_reg_t Q3_BIAS_TRIM3; /*< Address offset = 0x13c */
    rxana_adc_ffe_msg_q3_bias_trim4_reg_t Q3_BIAS_TRIM4; /*< Address offset = 0x140 */
    rxana_adc_ffe_msg_q3_summer_ofc_reg_t Q3_SUMMER_OFC; /*< Address offset = 0x144 */
    rxana_adc_ffe_msg_q3_summer_cmfb_reg_t Q3_SUMMER_CMFB; /*< Address offset = 0x148 */
    rxana_adc_ffe_msg_q3_summer_res_reg_t Q3_SUMMER_RES; /*< Address offset = 0x14c */
    rxana_adc_ffe_msg_q3_summer_vcasc_reg_t Q3_SUMMER_VCASC; /*< Address offset = 0x150 */
    rxana_adc_ffe_msg_q3_summer_ctrl0_reg_t Q3_SUMMER_CTRL0; /*< Address offset = 0x154 */
    rxana_adc_ffe_msg_q3_summer_ctrl1_reg_t Q3_SUMMER_CTRL1; /*< Address offset = 0x158 */
    rxana_adc_ffe_msg_q3_ffe_spare0_reg_t Q3_FFE_SPARE0; /*< Address offset = 0x15c */
} rxana_adc_ffe_msg_t;     // size: 0x0160

// AddressSpace struct pointer
//
#define DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_GLOBAL  ((rxana_adc_ffe_msg_t*) DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_GLOBAL_BASE)
#define DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q0      ((rxana_adc_ffe_msg_t*) DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q0_BASE)
#define DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q1      ((rxana_adc_ffe_msg_t*) DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q1_BASE)
#define DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q2      ((rxana_adc_ffe_msg_t*) DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q2_BASE)
#define DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q3      ((rxana_adc_ffe_msg_t*) DLNK_JESD0_PHY_PMA0_RXANA_ADC_FFE_Q3_BASE)
#define DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_GLOBAL  ((rxana_adc_ffe_msg_t*) DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_GLOBAL_BASE)
#define DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q0      ((rxana_adc_ffe_msg_t*) DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q0_BASE)
#define DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q1      ((rxana_adc_ffe_msg_t*) DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q1_BASE)
#define DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q2      ((rxana_adc_ffe_msg_t*) DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q2_BASE)
#define DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q3      ((rxana_adc_ffe_msg_t*) DLNK_JESD1_PHY_PMA0_RXANA_ADC_FFE_Q3_BASE)
#define DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_GLOBAL  ((rxana_adc_ffe_msg_t*) DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_GLOBAL_BASE)
#define DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q0      ((rxana_adc_ffe_msg_t*) DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q0_BASE)
#define DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q1      ((rxana_adc_ffe_msg_t*) DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q1_BASE)
#define DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q2      ((rxana_adc_ffe_msg_t*) DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q2_BASE)
#define DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q3      ((rxana_adc_ffe_msg_t*) DLNK_JESD2_PHY_PMA0_RXANA_ADC_FFE_Q3_BASE)
#define DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_GLOBAL  ((rxana_adc_ffe_msg_t*) DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_GLOBAL_BASE)
#define DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q0      ((rxana_adc_ffe_msg_t*) DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q0_BASE)
#define DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q1      ((rxana_adc_ffe_msg_t*) DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q1_BASE)
#define DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q2      ((rxana_adc_ffe_msg_t*) DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q2_BASE)
#define DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q3      ((rxana_adc_ffe_msg_t*) DLNK_JESD3_PHY_PMA0_RXANA_ADC_FFE_Q3_BASE)

// ******************************************* /Address Space

#endif      // _RXANA_ADC_FFE_MSG_H_

