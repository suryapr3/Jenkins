#ifndef _UC_TOP_MSG_H_
#define _UC_TOP_MSG_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_JESD0_PHY_UC_TOP_BASE  ( 0x06000000 )
#define DLNK_JESD1_PHY_UC_TOP_BASE  ( 0x06800000 )
#define DLNK_JESD2_PHY_UC_TOP_BASE  ( 0x07000000 )
#define DLNK_JESD3_PHY_UC_TOP_BASE  ( 0x07800000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define UC_TOP_MSG_UC_REVISION_OFFSET ( 0x00000000U )
#define UC_TOP_MSG_UC_JTAG_VER_OFFSET ( 0x00000004U )
#define UC_TOP_MSG_CAR_CLK_CTRL_OFFSET ( 0x00000008U )
#define UC_TOP_MSG_CAR_RST_CTRL_OFFSET ( 0x0000000cU )
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_OFFSET ( 0x00000010U )
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_OFFSET ( 0x00000014U )
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_OFFSET ( 0x00000018U )
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_OFFSET ( 0x0000001cU )
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_OFFSET ( 0x00000020U )
#define UC_TOP_MSG_UC_REF_CLK_FREQ_0_OFFSET ( 0x00000024U )
#define UC_TOP_MSG_UC_REF_CLK_FREQ_1_OFFSET ( 0x00000028U )
#define UC_TOP_MSG_UC_REF_CLK_FREQ_2_OFFSET ( 0x0000002cU )
#define UC_TOP_MSG_UC_REF_CLK_FREQ_3_OFFSET ( 0x00000030U )
#define UC_TOP_MSG_UC_FUSE_0_OFFSET ( 0x00000034U )
#define UC_TOP_MSG_UC_FUSE_1_OFFSET ( 0x00000038U )
#define UC_TOP_MSG_UC_FUSE_2_OFFSET ( 0x0000003cU )
#define UC_TOP_MSG_UC_FUSE_3_OFFSET ( 0x00000040U )
#define UC_TOP_MSG_UC_PRODUCT_SKU_OFFSET ( 0x00000044U )
#define UC_TOP_MSG_FABRIC_CTRL_OFFSET ( 0x00000048U )
#define UC_TOP_MSG_MEM_CTRL0_OFFSET ( 0x0000004cU )
#define UC_TOP_MSG_MEM_CTRL1_OFFSET ( 0x00000050U )
#define UC_TOP_MSG_MEM_CTRL2_OFFSET ( 0x00000054U )
#define UC_TOP_MSG_MEM_CTRL3_OFFSET ( 0x00000058U )
#define UC_TOP_MSG_MEM_CTRL4_OFFSET ( 0x0000005cU )
#define UC_TOP_MSG_MEM_CTRL5_OFFSET ( 0x00000060U )
#define UC_TOP_MSG_MEM_CTRL6_OFFSET ( 0x00000064U )
#define UC_TOP_MSG_MEM_CTRL7_OFFSET ( 0x00000068U )
#define UC_TOP_MSG_MEM_CTRL8_OFFSET ( 0x0000006cU )
#define UC_TOP_MSG_MEM_CTRL9_OFFSET ( 0x00000070U )
#define UC_TOP_MSG_MEM_CTRL10_OFFSET ( 0x00000074U )
#define UC_TOP_MSG_PMA_RST_REQ_OFFSET ( 0x00000078U )
#define UC_TOP_MSG_ICU_IRQ_0_CTL0_OFFSET ( 0x0000007cU )
#define UC_TOP_MSG_ICU_IRQ_0_CTL1_OFFSET ( 0x00000080U )
#define UC_TOP_MSG_ICU_IRQ_0_CTL2_OFFSET ( 0x00000084U )
#define UC_TOP_MSG_ICU_IRQ_0_STAT0_OFFSET ( 0x00000088U )
#define UC_TOP_MSG_ICU_IRQ_0_STAT1_OFFSET ( 0x0000008cU )
#define UC_TOP_MSG_ICU_IRQ_4_CTL0_OFFSET ( 0x00000090U )
#define UC_TOP_MSG_ICU_IRQ_4_CTL1_OFFSET ( 0x00000094U )
#define UC_TOP_MSG_ICU_IRQ_4_CTL2_OFFSET ( 0x00000098U )
#define UC_TOP_MSG_ICU_IRQ_4_STAT0_OFFSET ( 0x0000009cU )
#define UC_TOP_MSG_ICU_IRQ_4_STAT1_OFFSET ( 0x000000a0U )
#define UC_TOP_MSG_ICU_IRQ_10_CTL0_OFFSET ( 0x000000a4U )
#define UC_TOP_MSG_ICU_IRQ_10_CTL1_OFFSET ( 0x000000a8U )
#define UC_TOP_MSG_ICU_IRQ_10_CTL2_OFFSET ( 0x000000acU )
#define UC_TOP_MSG_ICU_IRQ_10_STAT0_OFFSET ( 0x000000b0U )
#define UC_TOP_MSG_ICU_IRQ_10_STAT1_OFFSET ( 0x000000b4U )
#define UC_TOP_MSG_ICU_IRQ_16_CTL0_OFFSET ( 0x000000b8U )
#define UC_TOP_MSG_ICU_IRQ_16_CTL1_OFFSET ( 0x000000bcU )
#define UC_TOP_MSG_ICU_IRQ_16_CTL2_OFFSET ( 0x000000c0U )
#define UC_TOP_MSG_ICU_IRQ_16_STAT0_OFFSET ( 0x000000c4U )
#define UC_TOP_MSG_ICU_IRQ_16_STAT1_OFFSET ( 0x000000c8U )
#define UC_TOP_MSG_ICU_IRQ_17_CTL0_OFFSET ( 0x000000ccU )
#define UC_TOP_MSG_ICU_IRQ_17_CTL1_OFFSET ( 0x000000d0U )
#define UC_TOP_MSG_ICU_IRQ_17_CTL2_OFFSET ( 0x000000d4U )
#define UC_TOP_MSG_ICU_IRQ_17_STAT0_OFFSET ( 0x000000d8U )
#define UC_TOP_MSG_ICU_IRQ_17_STAT1_OFFSET ( 0x000000dcU )
#define UC_TOP_MSG_ICU_IRQ_RAW_STAT_OFFSET ( 0x000000e0U )
#define UC_TOP_MSG_FW_STAT_RSLT_0_OFFSET ( 0x000000e4U )
#define UC_TOP_MSG_FW_STAT_RSLT_1_OFFSET ( 0x000000e8U )
#define UC_TOP_MSG_FW_STAT_RSLT_2_OFFSET ( 0x000000ecU )
#define UC_TOP_MSG_FW_STAT_RSLT_3_OFFSET ( 0x000000f0U )
#define UC_TOP_MSG_FW_STAT_RSLT_4_OFFSET ( 0x000000f4U )
#define UC_TOP_MSG_FW_STAT_RSLT_5_OFFSET ( 0x000000f8U )
#define UC_TOP_MSG_FW_STAT_RSLT_6_OFFSET ( 0x000000fcU )
#define UC_TOP_MSG_FW_STAT_RSLT_7_OFFSET ( 0x00000100U )
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_OFFSET ( 0x00000104U )
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_OFFSET ( 0x00000108U )
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_OFFSET ( 0x0000010cU )
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_OFFSET ( 0x00000110U )
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_OFFSET ( 0x00000114U )
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_OFFSET ( 0x00000118U )
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_OFFSET ( 0x0000011cU )
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_OFFSET ( 0x00000120U )
#define UC_TOP_MSG_TEMP_SENSE_OFFSET ( 0x00000124U )
#define UC_TOP_MSG_AUTONEG_0_OFFSET ( 0x00000128U )
#define UC_TOP_MSG_AUTONEG_1_OFFSET ( 0x0000012cU )
#define UC_TOP_MSG_FW_VER_0_OFFSET ( 0x00000130U )
#define UC_TOP_MSG_FW_VER_1_OFFSET ( 0x00000134U )
#define UC_TOP_MSG_FW_VER_2_OFFSET ( 0x00000138U )
#define UC_TOP_MSG_FW_VER_3_OFFSET ( 0x0000013cU )
#define UC_TOP_MSG_FW_TIMEBASE_OFFSET ( 0x00000140U )
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_OFFSET ( 0x00000144U )
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_OFFSET ( 0x00000148U )
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_OFFSET ( 0x0000014cU )
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_OFFSET ( 0x00000150U )
#define UC_TOP_MSG_FW_REF_CLK_FREQ_0_OFFSET ( 0x00000154U )
#define UC_TOP_MSG_FW_REF_CLK_FREQ_1_OFFSET ( 0x00000158U )
#define UC_TOP_MSG_FW_REF_CLK_FREQ_2_OFFSET ( 0x0000015cU )
#define UC_TOP_MSG_FW_REF_CLK_FREQ_3_OFFSET ( 0x00000160U )
#define UC_TOP_MSG_FW_FUSE_0_OFFSET ( 0x00000164U )
#define UC_TOP_MSG_FW_FUSE_1_OFFSET ( 0x00000168U )
#define UC_TOP_MSG_FW_FUSE_2_OFFSET ( 0x0000016cU )
#define UC_TOP_MSG_FW_FUSE_3_OFFSET ( 0x00000170U )
#define UC_TOP_MSG_FW_CORE_STAT_0_OFFSET ( 0x00000174U )
#define UC_TOP_MSG_FW_CORE_STAT_1_OFFSET ( 0x00000178U )
#define UC_TOP_MSG_FW_CORE_STAT_2_OFFSET ( 0x0000017cU )
#define UC_TOP_MSG_FW_SPARE_0_OFFSET ( 0x00000180U )
#define UC_TOP_MSG_FW_SPARE_1_OFFSET ( 0x00000184U )
#define UC_TOP_MSG_FW_SPARE_2_OFFSET ( 0x00000188U )
#define UC_TOP_MSG_FW_SPARE_3_OFFSET ( 0x0000018cU )
#define UC_TOP_MSG_FW_SPARE_4_OFFSET ( 0x00000190U )
#define UC_TOP_MSG_FW_SPARE_5_OFFSET ( 0x00000194U )
#define UC_TOP_MSG_FW_SPARE_6_OFFSET ( 0x00000198U )
#define UC_TOP_MSG_FW_SPARE_7_OFFSET ( 0x0000019cU )
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_OFFSET ( 0x000001a0U )
#define UC_TOP_MSG_SPARE_PORT_OVRD_0_OFFSET ( 0x000001a4U )
#define UC_TOP_MSG_SPARE_PORT_OVRD_1_OFFSET ( 0x000001a8U )
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_0_OFFSET ( 0x000001acU )
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_1_OFFSET ( 0x000001b0U )
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_OFFSET ( 0x000001b4U )
#define UC_TOP_MSG_UC_TESTBUS_CFG_1_OFFSET ( 0x000001b8U )
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_OFFSET ( 0x000001bcU )
#define UC_TOP_MSG_UC_TESTBUS_STAT_1_OFFSET ( 0x000001c0U )
#define UC_TOP_MSG_APB_CTRL_OFFSET ( 0x000001c4U )
#define UC_TOP_MSG_APB_STAT_OFFSET ( 0x000001c8U )
#define UC_TOP_MSG_APB_MASK_STAT_PRELIM_OFFSET ( 0x000001ccU )
#define UC_TOP_MSG_APB_MASK_STAT_FINAL_OFFSET ( 0x000001d0U )
#define UC_TOP_MSG_UC_CPU_PROBE_ADDR_OFFSET ( 0x000001d4U )
#define UC_TOP_MSG_UC_CPU_PROBE_OUT_OFFSET ( 0x000001d8U )
#define UC_TOP_MSG_UC_RW_SPARE_0_OFFSET ( 0x000001e4U )
#define UC_TOP_MSG_UC_RW_SPARE_1_OFFSET ( 0x000001e8U )
#define UC_TOP_MSG_UC_RW_SPARE_2_OFFSET ( 0x000001ecU )
#define UC_TOP_MSG_UC_RW_SPARE_3_OFFSET ( 0x000001f0U )
#define UC_TOP_MSG_UC_RO_SPARE_0_OFFSET ( 0x000001f4U )
#define UC_TOP_MSG_UC_RO_SPARE_1_OFFSET ( 0x000001f8U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define UC_TOP_MSG_UC_REVISION_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_REVISION_OFFSET ) ))
#define UC_TOP_MSG_UC_JTAG_VER_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_JTAG_VER_OFFSET ) ))
#define UC_TOP_MSG_CAR_CLK_CTRL_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_CAR_CLK_CTRL_OFFSET ) ))
#define UC_TOP_MSG_CAR_RST_CTRL_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_CAR_RST_CTRL_OFFSET ) ))
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_OFFSET ) ))
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_OFFSET ) ))
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_OFFSET ) ))
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_OFFSET ) ))
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_OFFSET ) ))
#define UC_TOP_MSG_UC_REF_CLK_FREQ_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_REF_CLK_FREQ_0_OFFSET ) ))
#define UC_TOP_MSG_UC_REF_CLK_FREQ_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_REF_CLK_FREQ_1_OFFSET ) ))
#define UC_TOP_MSG_UC_REF_CLK_FREQ_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_REF_CLK_FREQ_2_OFFSET ) ))
#define UC_TOP_MSG_UC_REF_CLK_FREQ_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_REF_CLK_FREQ_3_OFFSET ) ))
#define UC_TOP_MSG_UC_FUSE_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_FUSE_0_OFFSET ) ))
#define UC_TOP_MSG_UC_FUSE_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_FUSE_1_OFFSET ) ))
#define UC_TOP_MSG_UC_FUSE_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_FUSE_2_OFFSET ) ))
#define UC_TOP_MSG_UC_FUSE_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_FUSE_3_OFFSET ) ))
#define UC_TOP_MSG_UC_PRODUCT_SKU_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_PRODUCT_SKU_OFFSET ) ))
#define UC_TOP_MSG_FABRIC_CTRL_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FABRIC_CTRL_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL0_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL1_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL2_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL3_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL4_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL4_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL5_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL5_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL6_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL6_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL7_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL7_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL8_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL8_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL9_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL9_OFFSET ) ))
#define UC_TOP_MSG_MEM_CTRL10_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_MEM_CTRL10_OFFSET ) ))
#define UC_TOP_MSG_PMA_RST_REQ_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_PMA_RST_REQ_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_0_CTL0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_0_CTL0_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_0_CTL1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_0_CTL1_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_0_CTL2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_0_CTL2_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_0_STAT0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_0_STAT0_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_0_STAT1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_0_STAT1_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_4_CTL0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_4_CTL0_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_4_CTL1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_4_CTL1_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_4_CTL2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_4_CTL2_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_4_STAT0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_4_STAT0_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_4_STAT1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_4_STAT1_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_10_CTL0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_10_CTL0_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_10_CTL1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_10_CTL1_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_10_CTL2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_10_CTL2_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_10_STAT0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_10_STAT0_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_10_STAT1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_10_STAT1_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_16_CTL0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_16_CTL0_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_16_CTL1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_16_CTL1_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_16_CTL2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_16_CTL2_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_16_STAT0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_16_STAT0_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_16_STAT1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_16_STAT1_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_17_CTL0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_17_CTL0_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_17_CTL1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_17_CTL1_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_17_CTL2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_17_CTL2_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_17_STAT0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_17_STAT0_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_17_STAT1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_17_STAT1_OFFSET ) ))
#define UC_TOP_MSG_ICU_IRQ_RAW_STAT_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_ICU_IRQ_RAW_STAT_OFFSET ) ))
#define UC_TOP_MSG_FW_STAT_RSLT_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_STAT_RSLT_0_OFFSET ) ))
#define UC_TOP_MSG_FW_STAT_RSLT_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_STAT_RSLT_1_OFFSET ) ))
#define UC_TOP_MSG_FW_STAT_RSLT_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_STAT_RSLT_2_OFFSET ) ))
#define UC_TOP_MSG_FW_STAT_RSLT_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_STAT_RSLT_3_OFFSET ) ))
#define UC_TOP_MSG_FW_STAT_RSLT_4_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_STAT_RSLT_4_OFFSET ) ))
#define UC_TOP_MSG_FW_STAT_RSLT_5_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_STAT_RSLT_5_OFFSET ) ))
#define UC_TOP_MSG_FW_STAT_RSLT_6_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_STAT_RSLT_6_OFFSET ) ))
#define UC_TOP_MSG_FW_STAT_RSLT_7_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_STAT_RSLT_7_OFFSET ) ))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_OFFSET ) ))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_OFFSET ) ))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_OFFSET ) ))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_OFFSET ) ))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_OFFSET ) ))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_OFFSET ) ))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_OFFSET ) ))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_OFFSET ) ))
#define UC_TOP_MSG_TEMP_SENSE_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_TEMP_SENSE_OFFSET ) ))
#define UC_TOP_MSG_AUTONEG_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_AUTONEG_0_OFFSET ) ))
#define UC_TOP_MSG_AUTONEG_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_AUTONEG_1_OFFSET ) ))
#define UC_TOP_MSG_FW_VER_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_VER_0_OFFSET ) ))
#define UC_TOP_MSG_FW_VER_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_VER_1_OFFSET ) ))
#define UC_TOP_MSG_FW_VER_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_VER_2_OFFSET ) ))
#define UC_TOP_MSG_FW_VER_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_VER_3_OFFSET ) ))
#define UC_TOP_MSG_FW_TIMEBASE_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_TIMEBASE_OFFSET ) ))
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_OFFSET ) ))
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_OFFSET ) ))
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_OFFSET ) ))
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_OFFSET ) ))
#define UC_TOP_MSG_FW_REF_CLK_FREQ_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_REF_CLK_FREQ_0_OFFSET ) ))
#define UC_TOP_MSG_FW_REF_CLK_FREQ_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_REF_CLK_FREQ_1_OFFSET ) ))
#define UC_TOP_MSG_FW_REF_CLK_FREQ_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_REF_CLK_FREQ_2_OFFSET ) ))
#define UC_TOP_MSG_FW_REF_CLK_FREQ_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_REF_CLK_FREQ_3_OFFSET ) ))
#define UC_TOP_MSG_FW_FUSE_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_FUSE_0_OFFSET ) ))
#define UC_TOP_MSG_FW_FUSE_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_FUSE_1_OFFSET ) ))
#define UC_TOP_MSG_FW_FUSE_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_FUSE_2_OFFSET ) ))
#define UC_TOP_MSG_FW_FUSE_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_FUSE_3_OFFSET ) ))
#define UC_TOP_MSG_FW_CORE_STAT_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_CORE_STAT_0_OFFSET ) ))
#define UC_TOP_MSG_FW_CORE_STAT_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_CORE_STAT_1_OFFSET ) ))
#define UC_TOP_MSG_FW_CORE_STAT_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_CORE_STAT_2_OFFSET ) ))
#define UC_TOP_MSG_FW_SPARE_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_SPARE_0_OFFSET ) ))
#define UC_TOP_MSG_FW_SPARE_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_SPARE_1_OFFSET ) ))
#define UC_TOP_MSG_FW_SPARE_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_SPARE_2_OFFSET ) ))
#define UC_TOP_MSG_FW_SPARE_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_SPARE_3_OFFSET ) ))
#define UC_TOP_MSG_FW_SPARE_4_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_SPARE_4_OFFSET ) ))
#define UC_TOP_MSG_FW_SPARE_5_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_SPARE_5_OFFSET ) ))
#define UC_TOP_MSG_FW_SPARE_6_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_SPARE_6_OFFSET ) ))
#define UC_TOP_MSG_FW_SPARE_7_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_FW_SPARE_7_OFFSET ) ))
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_OFFSET ) ))
#define UC_TOP_MSG_SPARE_PORT_OVRD_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_SPARE_PORT_OVRD_0_OFFSET ) ))
#define UC_TOP_MSG_SPARE_PORT_OVRD_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_SPARE_PORT_OVRD_1_OFFSET ) ))
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_SPARE_PORT_PREOVRD_0_OFFSET ) ))
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_SPARE_PORT_PREOVRD_1_OFFSET ) ))
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_TESTBUS_CFG_0_OFFSET ) ))
#define UC_TOP_MSG_UC_TESTBUS_CFG_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_TESTBUS_CFG_1_OFFSET ) ))
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_TESTBUS_STAT_0_OFFSET ) ))
#define UC_TOP_MSG_UC_TESTBUS_STAT_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_TESTBUS_STAT_1_OFFSET ) ))
#define UC_TOP_MSG_APB_CTRL_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_APB_CTRL_OFFSET ) ))
#define UC_TOP_MSG_APB_STAT_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_APB_STAT_OFFSET ) ))
#define UC_TOP_MSG_APB_MASK_STAT_PRELIM_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_APB_MASK_STAT_PRELIM_OFFSET ) ))
#define UC_TOP_MSG_APB_MASK_STAT_FINAL_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_APB_MASK_STAT_FINAL_OFFSET ) ))
#define UC_TOP_MSG_UC_CPU_PROBE_ADDR_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_CPU_PROBE_ADDR_OFFSET ) ))
#define UC_TOP_MSG_UC_CPU_PROBE_OUT_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_CPU_PROBE_OUT_OFFSET ) ))
#define UC_TOP_MSG_UC_RW_SPARE_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RW_SPARE_0_OFFSET ) ))
#define UC_TOP_MSG_UC_RW_SPARE_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RW_SPARE_1_OFFSET ) ))
#define UC_TOP_MSG_UC_RW_SPARE_2_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RW_SPARE_2_OFFSET ) ))
#define UC_TOP_MSG_UC_RW_SPARE_3_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RW_SPARE_3_OFFSET ) ))
#define UC_TOP_MSG_UC_RO_SPARE_0_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RO_SPARE_0_OFFSET ) ))
#define UC_TOP_MSG_UC_RO_SPARE_1_ADR(_BASE) (( ( _BASE ) + ( UC_TOP_MSG_UC_RO_SPARE_1_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_REVISION register description at address offset 0x0
  *
  * Register default value:        0x24040200
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_revision
  * UC Revision
  */

typedef union {
  struct {
    uint32_t UC_REVISION : 32;
    ///< UC hardware revision
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x24040200"
  } ;
  uint32_t value;
} uc_top_msg_uc_revision_reg_t;

#define UC_TOP_MSG_UC_REVISION_DEFAULT (0x24040200U)
#define UC_TOP_MSG_UC_REVISION_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_REVISION_WR_MASK (0x00000000U)


///< UC hardware revision
#define UC_TOP_MSG_UC_REVISION_UC_REVISION_BF_OFF ( 0)
#define UC_TOP_MSG_UC_REVISION_UC_REVISION_BF_WID (32)
#define UC_TOP_MSG_UC_REVISION_UC_REVISION_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_REVISION_UC_REVISION_BF_DEF (0x24040200)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_JTAG_VERSION register description at address offset 0x4
  *
  * Register default value:        0x11490001
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_jtag_version
  * UC Jtag version
  */

typedef union {
  struct {
    uint32_t UC_JTAG_VERSION : 32;
    ///< UC Jtag version
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x11490001"
  } ;
  uint32_t value;
} uc_top_msg_uc_jtag_ver_reg_t;

#define UC_TOP_MSG_UC_JTAG_VER_DEFAULT (0x11490001U)
#define UC_TOP_MSG_UC_JTAG_VER_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_JTAG_VER_WR_MASK (0x00000000U)


///< UC Jtag version
#define UC_TOP_MSG_UC_JTAG_VER_UC_JTAG_VER_BF_OFF ( 0)
#define UC_TOP_MSG_UC_JTAG_VER_UC_JTAG_VER_BF_WID (32)
#define UC_TOP_MSG_UC_JTAG_VER_UC_JTAG_VER_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_JTAG_VER_UC_JTAG_VER_BF_DEF (0x11490001)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_CAR_CLK_CTRL register description at address offset 0x8
  *
  * Register default value:        0x00000202
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/car_clk_ctrl
  * placeholder
  */

typedef union {
  struct {
    uint32_t CLK_SEL : 1;
    ///< Select clock between Refclk and the other input clocks
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t FAST_CLK_DIVN_VAL : 3;
    ///< The divisor for the External Fast clock divider
    ///< 0: Divide by 1
    ///< 1: Divide by 2
    ///< 2: Divide by 4
    ///< 3: Divide by 8
    ///< 4: Divide by 16
    ///< AccessType="RW" BitOffset="1" ResetValue="0x1"
    uint32_t PMA_CLK_SEL : 4;
    ///< Select the source of PMA clock
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t CPU_CLKEN : 1;
    ///< Enable the CPU and memories clock
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t FWLOADER_CLKEN : 1;
    ///< Enable the fwloader clock
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_car_clk_ctrl_reg_t;

#define UC_TOP_MSG_CAR_CLK_CTRL_DEFAULT (0x00000202U)
#define UC_TOP_MSG_CAR_CLK_CTRL_RD_MASK (0x000003ffU)
#define UC_TOP_MSG_CAR_CLK_CTRL_WR_MASK (0x000003ffU)


///< Select clock between Refclk and the other input clocks
#define UC_TOP_MSG_CAR_CLK_CTRL_CLK_SEL_BF_OFF ( 0)
#define UC_TOP_MSG_CAR_CLK_CTRL_CLK_SEL_BF_WID ( 1)
#define UC_TOP_MSG_CAR_CLK_CTRL_CLK_SEL_BF_MSK (0x00000001)
#define UC_TOP_MSG_CAR_CLK_CTRL_CLK_SEL_BF_DEF (0x00000000)

///< The divisor for the External Fast clock divider
///< 0: Divide by 1
///< 1: Divide by 2
///< 2: Divide by 4
///< 3: Divide by 8
///< 4: Divide by 16
#define UC_TOP_MSG_CAR_CLK_CTRL_FAST_CLK_DIVN_VAL_BF_OFF ( 1)
#define UC_TOP_MSG_CAR_CLK_CTRL_FAST_CLK_DIVN_VAL_BF_WID ( 3)
#define UC_TOP_MSG_CAR_CLK_CTRL_FAST_CLK_DIVN_VAL_BF_MSK (0x0000000E)
#define UC_TOP_MSG_CAR_CLK_CTRL_FAST_CLK_DIVN_VAL_BF_DEF (0x00000002)

///< Select the source of PMA clock
#define UC_TOP_MSG_CAR_CLK_CTRL_PMA_CLK_SEL_BF_OFF ( 4)
#define UC_TOP_MSG_CAR_CLK_CTRL_PMA_CLK_SEL_BF_WID ( 4)
#define UC_TOP_MSG_CAR_CLK_CTRL_PMA_CLK_SEL_BF_MSK (0x000000F0)
#define UC_TOP_MSG_CAR_CLK_CTRL_PMA_CLK_SEL_BF_DEF (0x00000000)

///< Enable the CPU and memories clock
#define UC_TOP_MSG_CAR_CLK_CTRL_CPU_CLKEN_BF_OFF ( 8)
#define UC_TOP_MSG_CAR_CLK_CTRL_CPU_CLKEN_BF_WID ( 1)
#define UC_TOP_MSG_CAR_CLK_CTRL_CPU_CLKEN_BF_MSK (0x00000100)
#define UC_TOP_MSG_CAR_CLK_CTRL_CPU_CLKEN_BF_DEF (0x00000000)

///< Enable the fwloader clock
#define UC_TOP_MSG_CAR_CLK_CTRL_FWLOADER_CLKEN_BF_OFF ( 9)
#define UC_TOP_MSG_CAR_CLK_CTRL_FWLOADER_CLKEN_BF_WID ( 1)
#define UC_TOP_MSG_CAR_CLK_CTRL_FWLOADER_CLKEN_BF_MSK (0x00000200)
#define UC_TOP_MSG_CAR_CLK_CTRL_FWLOADER_CLKEN_BF_DEF (0x00000200)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_CAR_RESET_CTRL register description at address offset 0xc
  *
  * Register default value:        0x55401F03
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/car_reset_ctrl
  * placeholder
  */

typedef union {
  struct {
    uint32_t CPU_SWRSTN : 1;
    ///< Reset CPU and memories
    ///< AccessType="RW" BitOffset="0" ResetValue="0x1"
    uint32_t EXT_FAST_SWRSTN : 1;
    ///< Reset the External fast clock divider
    ///< AccessType="RW" BitOffset="1" ResetValue="0x1"
    uint32_t  : 6;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
    uint32_t RST_PMA0_B : 1;
    ///< Reset (POR) PMA0 by firmware
    ///< AccessType="RW" BitOffset="8" ResetValue="0x1"
    uint32_t RST_PMA1_B : 1;
    ///< Reset (POR) PMA1 by firmware
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t RST_PMA2_B : 1;
    ///< Reset (POR) PMA2 by firmware
    ///< AccessType="RW" BitOffset="10" ResetValue="0x1"
    uint32_t RST_PMA3_B : 1;
    ///< Reset (POR) PMA3 by firmware
    ///< AccessType="RW" BitOffset="11" ResetValue="0x1"
    uint32_t RST_PCS_B : 1;
    ///< Reset (POR) PCS by firmware
    ///< AccessType="RW" BitOffset="12" ResetValue="0x1"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="13" ResetValue="None"
    uint32_t RST_PMA0_SEL_OVR : 1;
    ///< Set to 1 if the PMA0 reset is controlled directly by the input pin
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t RST_PMA1_SEL_OVR : 1;
    ///< Set to 1 if the PMA1 reset is controlled directly by the input pin
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t RST_PMA2_SEL_OVR : 1;
    ///< Set to 1 if the PMA2 reset is controlled directly by the input pin
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t RST_PMA3_SEL_OVR : 1;
    ///< Set to 1 if the PMA3 reset is controlled directly by the input pin
    ///< AccessType="RW" BitOffset="19" ResetValue="0x0"
    uint32_t RST_PCS_SEL_OVR : 1;
    ///< Set to 1 if the PCS reset is controlled directly by the input pin
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t RST_APB_PCS_SEL_OVR : 1;
    ///< Set to 1 to select the override value of PCS APB reset (rst_apb_pcs_val_ovr)
    ///< AccessType="RW" BitOffset="21" ResetValue="0x0"
    uint32_t RST_APB_PCS_VAL_OVR : 1;
    ///< Set the value for PCS APB reset override
    ///< AccessType="RW" BitOffset="22" ResetValue="0x1"
    uint32_t RST_APB_PMA0_SEL_OVR : 1;
    ///< Set to 1 to select the override value of PMA0 APB reset (rst_apb_pma0_val_ovr)
    ///< AccessType="RW" BitOffset="23" ResetValue="0x0"
    uint32_t RST_APB_PMA0_VAL_OVR : 1;
    ///< Set the value for PMA0 APB reset override
    ///< AccessType="RW" BitOffset="24" ResetValue="0x1"
    uint32_t RST_APB_PMA1_SEL_OVR : 1;
    ///< Set to 1 to select the override value of PMA1 APB reset (rst_apb_pma1_val_ovr)
    ///< AccessType="RW" BitOffset="25" ResetValue="0x0"
    uint32_t RST_APB_PMA1_VAL_OVR : 1;
    ///< Set the value for PMA1 APB reset override
    ///< AccessType="RW" BitOffset="26" ResetValue="0x1"
    uint32_t RST_APB_PMA2_SEL_OVR : 1;
    ///< Set to 1 to select the override value of PMA2 APB reset (rst_apb_pma2_val_ovr)
    ///< AccessType="RW" BitOffset="27" ResetValue="0x0"
    uint32_t RST_APB_PMA2_VAL_OVR : 1;
    ///< Set the value for PMA2 APB reset override
    ///< AccessType="RW" BitOffset="28" ResetValue="0x1"
    uint32_t RST_APB_PMA3_SEL_OVR : 1;
    ///< Set to 1 to select the override value of PMA3 APB reset (rst_apb_pma3_val_ovr)
    ///< AccessType="RW" BitOffset="29" ResetValue="0x0"
    uint32_t RST_APB_PMA3_VAL_OVR : 1;
    ///< Set the value for PMA3 APB reset override
    ///< AccessType="RW" BitOffset="30" ResetValue="0x1"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="31" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_car_rst_ctrl_reg_t;

#define UC_TOP_MSG_CAR_RST_CTRL_DEFAULT (0x55401f03U)
#define UC_TOP_MSG_CAR_RST_CTRL_RD_MASK (0x7fff1f03U)
#define UC_TOP_MSG_CAR_RST_CTRL_WR_MASK (0x7fff1f03U)


///< Reset CPU and memories
#define UC_TOP_MSG_CAR_RST_CTRL_CPU_SWRSTN_BF_OFF ( 0)
#define UC_TOP_MSG_CAR_RST_CTRL_CPU_SWRSTN_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_CPU_SWRSTN_BF_MSK (0x00000001)
#define UC_TOP_MSG_CAR_RST_CTRL_CPU_SWRSTN_BF_DEF (0x00000001)

///< Reset the External fast clock divider
#define UC_TOP_MSG_CAR_RST_CTRL_EXT_FAST_SWRSTN_BF_OFF ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_EXT_FAST_SWRSTN_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_EXT_FAST_SWRSTN_BF_MSK (0x00000002)
#define UC_TOP_MSG_CAR_RST_CTRL_EXT_FAST_SWRSTN_BF_DEF (0x00000002)

///< Reset (POR) PMA0 by firmware
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA0_B_BF_OFF ( 8)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA0_B_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA0_B_BF_MSK (0x00000100)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA0_B_BF_DEF (0x00000100)

///< Reset (POR) PMA1 by firmware
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA1_B_BF_OFF ( 9)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA1_B_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA1_B_BF_MSK (0x00000200)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA1_B_BF_DEF (0x00000200)

///< Reset (POR) PMA2 by firmware
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA2_B_BF_OFF (10)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA2_B_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA2_B_BF_MSK (0x00000400)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA2_B_BF_DEF (0x00000400)

///< Reset (POR) PMA3 by firmware
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA3_B_BF_OFF (11)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA3_B_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA3_B_BF_MSK (0x00000800)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA3_B_BF_DEF (0x00000800)

///< Reset (POR) PCS by firmware
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PCS_B_BF_OFF (12)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PCS_B_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PCS_B_BF_MSK (0x00001000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PCS_B_BF_DEF (0x00001000)

///< Set to 1 if the PMA0 reset is controlled directly by the input pin
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA0_SEL_OVR_BF_OFF (16)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA0_SEL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA0_SEL_OVR_BF_MSK (0x00010000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA0_SEL_OVR_BF_DEF (0x00000000)

///< Set to 1 if the PMA1 reset is controlled directly by the input pin
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA1_SEL_OVR_BF_OFF (17)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA1_SEL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA1_SEL_OVR_BF_MSK (0x00020000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA1_SEL_OVR_BF_DEF (0x00000000)

///< Set to 1 if the PMA2 reset is controlled directly by the input pin
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA2_SEL_OVR_BF_OFF (18)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA2_SEL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA2_SEL_OVR_BF_MSK (0x00040000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA2_SEL_OVR_BF_DEF (0x00000000)

///< Set to 1 if the PMA3 reset is controlled directly by the input pin
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA3_SEL_OVR_BF_OFF (19)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA3_SEL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA3_SEL_OVR_BF_MSK (0x00080000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PMA3_SEL_OVR_BF_DEF (0x00000000)

///< Set to 1 if the PCS reset is controlled directly by the input pin
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PCS_SEL_OVR_BF_OFF (20)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PCS_SEL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PCS_SEL_OVR_BF_MSK (0x00100000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_PCS_SEL_OVR_BF_DEF (0x00000000)

///< Set to 1 to select the override value of PCS APB reset (rst_apb_pcs_val_ovr)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PCS_SEL_OVR_BF_OFF (21)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PCS_SEL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PCS_SEL_OVR_BF_MSK (0x00200000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PCS_SEL_OVR_BF_DEF (0x00000000)

///< Set the value for PCS APB reset override
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PCS_VAL_OVR_BF_OFF (22)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PCS_VAL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PCS_VAL_OVR_BF_MSK (0x00400000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PCS_VAL_OVR_BF_DEF (0x00400000)

///< Set to 1 to select the override value of PMA0 APB reset (rst_apb_pma0_val_ovr)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA0_SEL_OVR_BF_OFF (23)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA0_SEL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA0_SEL_OVR_BF_MSK (0x00800000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA0_SEL_OVR_BF_DEF (0x00000000)

///< Set the value for PMA0 APB reset override
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA0_VAL_OVR_BF_OFF (24)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA0_VAL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA0_VAL_OVR_BF_MSK (0x01000000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA0_VAL_OVR_BF_DEF (0x01000000)

///< Set to 1 to select the override value of PMA1 APB reset (rst_apb_pma1_val_ovr)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA1_SEL_OVR_BF_OFF (25)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA1_SEL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA1_SEL_OVR_BF_MSK (0x02000000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA1_SEL_OVR_BF_DEF (0x00000000)

///< Set the value for PMA1 APB reset override
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA1_VAL_OVR_BF_OFF (26)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA1_VAL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA1_VAL_OVR_BF_MSK (0x04000000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA1_VAL_OVR_BF_DEF (0x04000000)

///< Set to 1 to select the override value of PMA2 APB reset (rst_apb_pma2_val_ovr)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA2_SEL_OVR_BF_OFF (27)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA2_SEL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA2_SEL_OVR_BF_MSK (0x08000000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA2_SEL_OVR_BF_DEF (0x00000000)

///< Set the value for PMA2 APB reset override
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA2_VAL_OVR_BF_OFF (28)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA2_VAL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA2_VAL_OVR_BF_MSK (0x10000000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA2_VAL_OVR_BF_DEF (0x10000000)

///< Set to 1 to select the override value of PMA3 APB reset (rst_apb_pma3_val_ovr)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA3_SEL_OVR_BF_OFF (29)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA3_SEL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA3_SEL_OVR_BF_MSK (0x20000000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA3_SEL_OVR_BF_DEF (0x00000000)

///< Set the value for PMA3 APB reset override
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA3_VAL_OVR_BF_OFF (30)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA3_VAL_OVR_BF_WID ( 1)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA3_VAL_OVR_BF_MSK (0x40000000)
#define UC_TOP_MSG_CAR_RST_CTRL_RST_APB_PMA3_VAL_OVR_BF_DEF (0x40000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RATE_LIMIT_LANE_0 register description at address offset 0x10
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_rate_limit_lane_0
  * Fuse rate limit
  */

typedef union {
  struct {
    uint32_t UC_RATE_LIMIT_LANE_0 : 32;
    ///< Fuse - lane rate limits based on SKU
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_rate_limit_lane_0_reg_t;

#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_WR_MASK (0xffffffffU)


///< Fuse - lane rate limits based on SKU
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_UC_RATE_LIMIT_LANE_0_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_UC_RATE_LIMIT_LANE_0_BF_WID (32)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_UC_RATE_LIMIT_LANE_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_UC_RATE_LIMIT_LANE_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RATE_LIMIT_LANE_1 register description at address offset 0x14
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_rate_limit_lane_1
  * Fuse rate limit
  */

typedef union {
  struct {
    uint32_t UC_RATE_LIMIT_LANE_1 : 32;
    ///< Fuse - lane rate limits based on SKU
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_rate_limit_lane_1_reg_t;

#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_WR_MASK (0xffffffffU)


///< Fuse - lane rate limits based on SKU
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_UC_RATE_LIMIT_LANE_1_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_UC_RATE_LIMIT_LANE_1_BF_WID (32)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_UC_RATE_LIMIT_LANE_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_UC_RATE_LIMIT_LANE_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RATE_LIMIT_LANE_2 register description at address offset 0x18
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_rate_limit_lane_2
  * Fuse rate limit
  */

typedef union {
  struct {
    uint32_t UC_RATE_LIMIT_LANE_2 : 32;
    ///< Fuse - lane rate limits based on SKU
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_rate_limit_lane_2_reg_t;

#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_WR_MASK (0xffffffffU)


///< Fuse - lane rate limits based on SKU
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_UC_RATE_LIMIT_LANE_2_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_UC_RATE_LIMIT_LANE_2_BF_WID (32)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_UC_RATE_LIMIT_LANE_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_UC_RATE_LIMIT_LANE_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RATE_LIMIT_LANE_3 register description at address offset 0x1c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_rate_limit_lane_3
  * Fuse rate limit
  */

typedef union {
  struct {
    uint32_t UC_RATE_LIMIT_LANE_3 : 32;
    ///< Fuse - lane rate limits based on SKU
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_rate_limit_lane_3_reg_t;

#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_WR_MASK (0xffffffffU)


///< Fuse - lane rate limits based on SKU
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_UC_RATE_LIMIT_LANE_3_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_UC_RATE_LIMIT_LANE_3_BF_WID (32)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_UC_RATE_LIMIT_LANE_3_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_UC_RATE_LIMIT_LANE_3_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RATE_LIMIT_LANE_4 register description at address offset 0x20
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_rate_limit_lane_4
  * Fuse rate limit
  */

typedef union {
  struct {
    uint32_t UC_RATE_LIMIT_LANE_4 : 32;
    ///< Fuse - lane rate limits based on SKU
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_rate_limit_lane_4_reg_t;

#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_WR_MASK (0xffffffffU)


///< Fuse - lane rate limits based on SKU
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_UC_RATE_LIMIT_LANE_4_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_UC_RATE_LIMIT_LANE_4_BF_WID (32)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_UC_RATE_LIMIT_LANE_4_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_UC_RATE_LIMIT_LANE_4_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_REF_CLK_FREQ_0 register description at address offset 0x24
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_ref_clk_freq_0
  * Fuse reference clock frequency
  */

typedef union {
  struct {
    uint32_t UC_REF_CLK_FREQ_0 : 32;
    ///< Fuse  - lreference clock freauency for each source (max)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_ref_clk_freq_0_reg_t;

#define UC_TOP_MSG_UC_REF_CLK_FREQ_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_0_WR_MASK (0xffffffffU)


///< Fuse  - lreference clock freauency for each source (max)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_0_UC_REF_CLK_FREQ_0_BF_OFF ( 0)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_0_UC_REF_CLK_FREQ_0_BF_WID (32)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_0_UC_REF_CLK_FREQ_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_0_UC_REF_CLK_FREQ_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_REF_CLK_FREQ_1 register description at address offset 0x28
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_ref_clk_freq_1
  * Fuse reference clock frequency
  */

typedef union {
  struct {
    uint32_t UC_REF_CLK_FREQ_1 : 32;
    ///< Fuse  - lreference clock freauency for each source (max)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_ref_clk_freq_1_reg_t;

#define UC_TOP_MSG_UC_REF_CLK_FREQ_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_1_WR_MASK (0xffffffffU)


///< Fuse  - lreference clock freauency for each source (max)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_1_UC_REF_CLK_FREQ_1_BF_OFF ( 0)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_1_UC_REF_CLK_FREQ_1_BF_WID (32)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_1_UC_REF_CLK_FREQ_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_1_UC_REF_CLK_FREQ_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_REF_CLK_FREQ_2 register description at address offset 0x2c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_ref_clk_freq_2
  * Fuse reference clock frequency
  */

typedef union {
  struct {
    uint32_t UC_REF_CLK_FREQ_2 : 32;
    ///< Fuse  - lreference clock freauency for each source (max)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_ref_clk_freq_2_reg_t;

#define UC_TOP_MSG_UC_REF_CLK_FREQ_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_2_WR_MASK (0xffffffffU)


///< Fuse  - lreference clock freauency for each source (max)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_2_UC_REF_CLK_FREQ_2_BF_OFF ( 0)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_2_UC_REF_CLK_FREQ_2_BF_WID (32)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_2_UC_REF_CLK_FREQ_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_2_UC_REF_CLK_FREQ_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_REF_CLK_FREQ_3 register description at address offset 0x30
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_ref_clk_freq_3
  * Fuse reference clock frequency
  */

typedef union {
  struct {
    uint32_t UC_REF_CLK_FREQ_3 : 32;
    ///< Fuse  - lreference clock freauency for each source (max)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_ref_clk_freq_3_reg_t;

#define UC_TOP_MSG_UC_REF_CLK_FREQ_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_3_WR_MASK (0xffffffffU)


///< Fuse  - lreference clock freauency for each source (max)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_3_UC_REF_CLK_FREQ_3_BF_OFF ( 0)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_3_UC_REF_CLK_FREQ_3_BF_WID (32)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_3_UC_REF_CLK_FREQ_3_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_REF_CLK_FREQ_3_UC_REF_CLK_FREQ_3_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_FUSE_0 register description at address offset 0x34
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_fuse_0
  * Fuse spare
  */

typedef union {
  struct {
    uint32_t UC_FUSE_0 : 32;
    ///< Fuse spare 0
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_fuse_0_reg_t;

#define UC_TOP_MSG_UC_FUSE_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_FUSE_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_FUSE_0_WR_MASK (0xffffffffU)


///< Fuse spare 0
#define UC_TOP_MSG_UC_FUSE_0_UC_FUSE_0_BF_OFF ( 0)
#define UC_TOP_MSG_UC_FUSE_0_UC_FUSE_0_BF_WID (32)
#define UC_TOP_MSG_UC_FUSE_0_UC_FUSE_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_FUSE_0_UC_FUSE_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_FUSE_1 register description at address offset 0x38
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_fuse_1
  * Fuse spare
  */

typedef union {
  struct {
    uint32_t UC_FUSE_1 : 32;
    ///< Fuse spare 1
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_fuse_1_reg_t;

#define UC_TOP_MSG_UC_FUSE_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_FUSE_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_FUSE_1_WR_MASK (0xffffffffU)


///< Fuse spare 1
#define UC_TOP_MSG_UC_FUSE_1_UC_FUSE_1_BF_OFF ( 0)
#define UC_TOP_MSG_UC_FUSE_1_UC_FUSE_1_BF_WID (32)
#define UC_TOP_MSG_UC_FUSE_1_UC_FUSE_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_FUSE_1_UC_FUSE_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_FUSE_2 register description at address offset 0x3c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_fuse_2
  * Fuse spare
  */

typedef union {
  struct {
    uint32_t UC_FUSE_2 : 32;
    ///< Fuse spare 2
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_fuse_2_reg_t;

#define UC_TOP_MSG_UC_FUSE_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_FUSE_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_FUSE_2_WR_MASK (0xffffffffU)


///< Fuse spare 2
#define UC_TOP_MSG_UC_FUSE_2_UC_FUSE_2_BF_OFF ( 0)
#define UC_TOP_MSG_UC_FUSE_2_UC_FUSE_2_BF_WID (32)
#define UC_TOP_MSG_UC_FUSE_2_UC_FUSE_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_FUSE_2_UC_FUSE_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_FUSE_3 register description at address offset 0x40
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_fuse_3
  * Fuse spare
  */

typedef union {
  struct {
    uint32_t UC_FUSE_3 : 32;
    ///< Fuse spare 3
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_fuse_3_reg_t;

#define UC_TOP_MSG_UC_FUSE_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_FUSE_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_FUSE_3_WR_MASK (0xffffffffU)


///< Fuse spare 3
#define UC_TOP_MSG_UC_FUSE_3_UC_FUSE_3_BF_OFF ( 0)
#define UC_TOP_MSG_UC_FUSE_3_UC_FUSE_3_BF_WID (32)
#define UC_TOP_MSG_UC_FUSE_3_UC_FUSE_3_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_FUSE_3_UC_FUSE_3_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_PRODUCT_SKU register description at address offset 0x44
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_product_sku
  * Product SKU
  */

typedef union {
  struct {
    uint32_t UC_PRODUCT_SKU : 32;
    ///< Fuse - representing Product SKU, stepping, andmanufacturing process
    ///< version
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_product_sku_reg_t;

#define UC_TOP_MSG_UC_PRODUCT_SKU_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_PRODUCT_SKU_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_PRODUCT_SKU_WR_MASK (0xffffffffU)


///< Fuse - representing Product SKU, stepping, andmanufacturing process
///< version
#define UC_TOP_MSG_UC_PRODUCT_SKU_UC_PRODUCT_SKU_BF_OFF ( 0)
#define UC_TOP_MSG_UC_PRODUCT_SKU_UC_PRODUCT_SKU_BF_WID (32)
#define UC_TOP_MSG_UC_PRODUCT_SKU_UC_PRODUCT_SKU_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_PRODUCT_SKU_UC_PRODUCT_SKU_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FABRIC_CTRL register description at address offset 0x48
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fabric_ctrl
  * placeholder
  */

typedef union {
  struct {
    uint32_t BROADCAST_FEATURE_EN : 1;
    ///< Enable Broadcast feature
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t BROADCAST_TYPE : 1;
    ///< Broadcast Type
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_fabric_ctrl_reg_t;

#define UC_TOP_MSG_FABRIC_CTRL_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FABRIC_CTRL_RD_MASK (0x00000003U)
#define UC_TOP_MSG_FABRIC_CTRL_WR_MASK (0x00000003U)


///< Enable Broadcast feature
#define UC_TOP_MSG_FABRIC_CTRL_BROADCAST_FEATURE_EN_BF_OFF ( 0)
#define UC_TOP_MSG_FABRIC_CTRL_BROADCAST_FEATURE_EN_BF_WID ( 1)
#define UC_TOP_MSG_FABRIC_CTRL_BROADCAST_FEATURE_EN_BF_MSK (0x00000001)
#define UC_TOP_MSG_FABRIC_CTRL_BROADCAST_FEATURE_EN_BF_DEF (0x00000000)

///< Broadcast Type
#define UC_TOP_MSG_FABRIC_CTRL_BROADCAST_TYPE_BF_OFF ( 1)
#define UC_TOP_MSG_FABRIC_CTRL_BROADCAST_TYPE_BF_WID ( 1)
#define UC_TOP_MSG_FABRIC_CTRL_BROADCAST_TYPE_BF_MSK (0x00000002)
#define UC_TOP_MSG_FABRIC_CTRL_BROADCAST_TYPE_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL0 register description at address offset 0x4c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl0
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_DRAM_PROCESS_CTRL : 32;
    ///< Memory Process control all DRAM (optional)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl0_reg_t;

#define UC_TOP_MSG_MEM_CTRL0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL0_WR_MASK (0xffffffffU)


///< Memory Process control all DRAM (optional)
#define UC_TOP_MSG_MEM_CTRL0_MEM_DRAM_PROCESS_CTRL_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL0_MEM_DRAM_PROCESS_CTRL_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL0_MEM_DRAM_PROCESS_CTRL_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL0_MEM_DRAM_PROCESS_CTRL_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL1 register description at address offset 0x50
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl1
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_IRAM_PROCESS_CTRL : 32;
    ///< Memory Process control all IRAM (optional)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl1_reg_t;

#define UC_TOP_MSG_MEM_CTRL1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL1_WR_MASK (0xffffffffU)


///< Memory Process control all IRAM (optional)
#define UC_TOP_MSG_MEM_CTRL1_MEM_IRAM_PROCESS_CTRL_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL1_MEM_IRAM_PROCESS_CTRL_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL1_MEM_IRAM_PROCESS_CTRL_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL1_MEM_IRAM_PROCESS_CTRL_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL2 register description at address offset 0x54
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl2
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_TRACE_PROCESS_CTRL : 32;
    ///< Memory Process control all Trace Memory (optional)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl2_reg_t;

#define UC_TOP_MSG_MEM_CTRL2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL2_WR_MASK (0xffffffffU)


///< Memory Process control all Trace Memory (optional)
#define UC_TOP_MSG_MEM_CTRL2_MEM_TRACE_PROCESS_CTRL_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL2_MEM_TRACE_PROCESS_CTRL_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL2_MEM_TRACE_PROCESS_CTRL_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL2_MEM_TRACE_PROCESS_CTRL_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL3 register description at address offset 0x58
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl3
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_DRAM0_COL_REPAIR : 32;
    ///< Column repair for the desired dram0 address
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl3_reg_t;

#define UC_TOP_MSG_MEM_CTRL3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL3_WR_MASK (0xffffffffU)


///< Column repair for the desired dram0 address
#define UC_TOP_MSG_MEM_CTRL3_MEM_DRAM0_COL_REPAIR_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL3_MEM_DRAM0_COL_REPAIR_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL3_MEM_DRAM0_COL_REPAIR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL3_MEM_DRAM0_COL_REPAIR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL4 register description at address offset 0x5c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl4
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_DRAM0_ROW_REPAIR : 32;
    ///< Row repair for the desired dram0 address
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl4_reg_t;

#define UC_TOP_MSG_MEM_CTRL4_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL4_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL4_WR_MASK (0xffffffffU)


///< Row repair for the desired dram0 address
#define UC_TOP_MSG_MEM_CTRL4_MEM_DRAM0_ROW_REPAIR_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL4_MEM_DRAM0_ROW_REPAIR_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL4_MEM_DRAM0_ROW_REPAIR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL4_MEM_DRAM0_ROW_REPAIR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL5 register description at address offset 0x60
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl5
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_IRAM0_COL_REPAIR : 32;
    ///< Column repair for the desired iram0 address
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl5_reg_t;

#define UC_TOP_MSG_MEM_CTRL5_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL5_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL5_WR_MASK (0xffffffffU)


///< Column repair for the desired iram0 address
#define UC_TOP_MSG_MEM_CTRL5_MEM_IRAM0_COL_REPAIR_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL5_MEM_IRAM0_COL_REPAIR_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL5_MEM_IRAM0_COL_REPAIR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL5_MEM_IRAM0_COL_REPAIR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL6 register description at address offset 0x64
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl6
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_IRAM0_ROW_REPAIR : 32;
    ///< Row repair for the desired iram0 address
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl6_reg_t;

#define UC_TOP_MSG_MEM_CTRL6_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL6_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL6_WR_MASK (0xffffffffU)


///< Row repair for the desired iram0 address
#define UC_TOP_MSG_MEM_CTRL6_MEM_IRAM0_ROW_REPAIR_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL6_MEM_IRAM0_ROW_REPAIR_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL6_MEM_IRAM0_ROW_REPAIR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL6_MEM_IRAM0_ROW_REPAIR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL7 register description at address offset 0x68
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl7
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_IRAM1_COL_REPAIR : 32;
    ///< Column repair for the desired iram1 address
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl7_reg_t;

#define UC_TOP_MSG_MEM_CTRL7_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL7_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL7_WR_MASK (0xffffffffU)


///< Column repair for the desired iram1 address
#define UC_TOP_MSG_MEM_CTRL7_MEM_IRAM1_COL_REPAIR_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL7_MEM_IRAM1_COL_REPAIR_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL7_MEM_IRAM1_COL_REPAIR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL7_MEM_IRAM1_COL_REPAIR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL8 register description at address offset 0x6c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl8
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_IRAM1_ROW_REPAIR : 32;
    ///< Row repair for the desired iram1 address
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl8_reg_t;

#define UC_TOP_MSG_MEM_CTRL8_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL8_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL8_WR_MASK (0xffffffffU)


///< Row repair for the desired iram1 address
#define UC_TOP_MSG_MEM_CTRL8_MEM_IRAM1_ROW_REPAIR_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL8_MEM_IRAM1_ROW_REPAIR_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL8_MEM_IRAM1_ROW_REPAIR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL8_MEM_IRAM1_ROW_REPAIR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL9 register description at address offset 0x70
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl9
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_TRACE_COL_REPAIR : 32;
    ///< Column repair for the desired trace memory address
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl9_reg_t;

#define UC_TOP_MSG_MEM_CTRL9_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL9_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL9_WR_MASK (0xffffffffU)


///< Column repair for the desired trace memory address
#define UC_TOP_MSG_MEM_CTRL9_MEM_TRACE_COL_REPAIR_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL9_MEM_TRACE_COL_REPAIR_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL9_MEM_TRACE_COL_REPAIR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL9_MEM_TRACE_COL_REPAIR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_MEM_CTRL10 register description at address offset 0x74
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/mem_ctrl10
  * placeholder
  */

typedef union {
  struct {
    uint32_t MEM_TRACE_ROW_REPAIR : 32;
    ///< Row repair for the desired trace memory address
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_mem_ctrl10_reg_t;

#define UC_TOP_MSG_MEM_CTRL10_DEFAULT (0x00000000U)
#define UC_TOP_MSG_MEM_CTRL10_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_MEM_CTRL10_WR_MASK (0xffffffffU)


///< Row repair for the desired trace memory address
#define UC_TOP_MSG_MEM_CTRL10_MEM_TRACE_ROW_REPAIR_BF_OFF ( 0)
#define UC_TOP_MSG_MEM_CTRL10_MEM_TRACE_ROW_REPAIR_BF_WID (32)
#define UC_TOP_MSG_MEM_CTRL10_MEM_TRACE_ROW_REPAIR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_MEM_CTRL10_MEM_TRACE_ROW_REPAIR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_PMA_RESET_REQ register description at address offset 0x78
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/pma_reset_req
  * placeholder
  */

typedef union {
  struct {
    uint32_t RST_PMA0 : 1;
    ///< This is a pulse to request PMA0 reset
    ///< AccessType="RO/C/V" BitOffset="0" ResetValue="0x0"
    uint32_t RST_PMA1 : 1;
    ///< This is a pulse to request PMA1 reset
    ///< AccessType="RO/C/V" BitOffset="1" ResetValue="0x0"
    uint32_t RST_PMA2 : 1;
    ///< This is a pulse to request PMA2 reset
    ///< AccessType="RO/C/V" BitOffset="2" ResetValue="0x0"
    uint32_t RST_PMA3 : 1;
    ///< This is a pulse to request PMA3 reset
    ///< AccessType="RO/C/V" BitOffset="3" ResetValue="0x0"
    uint32_t RST_PCS : 1;
    ///< This is a pulse to request PCS reset
    ///< AccessType="RO/C/V" BitOffset="4" ResetValue="0x0"
    uint32_t  : 27;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_pma_rst_req_reg_t;

#define UC_TOP_MSG_PMA_RST_REQ_DEFAULT (0x00000000U)
#define UC_TOP_MSG_PMA_RST_REQ_RD_MASK (0x0000001fU)
#define UC_TOP_MSG_PMA_RST_REQ_WR_MASK (0x00000000U)


///< This is a pulse to request PMA0 reset
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA0_BF_OFF ( 0)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA0_BF_WID ( 1)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA0_BF_MSK (0x00000001)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA0_BF_DEF (0x00000000)

///< This is a pulse to request PMA1 reset
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA1_BF_OFF ( 1)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA1_BF_WID ( 1)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA1_BF_MSK (0x00000002)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA1_BF_DEF (0x00000000)

///< This is a pulse to request PMA2 reset
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA2_BF_OFF ( 2)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA2_BF_WID ( 1)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA2_BF_MSK (0x00000004)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA2_BF_DEF (0x00000000)

///< This is a pulse to request PMA3 reset
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA3_BF_OFF ( 3)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA3_BF_WID ( 1)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA3_BF_MSK (0x00000008)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PMA3_BF_DEF (0x00000000)

///< This is a pulse to request PCS reset
#define UC_TOP_MSG_PMA_RST_REQ_RST_PCS_BF_OFF ( 4)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PCS_BF_WID ( 1)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PCS_BF_MSK (0x00000010)
#define UC_TOP_MSG_PMA_RST_REQ_RST_PCS_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_0_CTL0 register description at address offset 0x7c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_0_ctl0
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_0_ENABLE : 32;
    ///< Enable the UC interrupt
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_0_ctl0_reg_t;

#define UC_TOP_MSG_ICU_IRQ_0_CTL0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_0_CTL0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_0_CTL0_WR_MASK (0xffffffffU)


///< Enable the UC interrupt
#define UC_TOP_MSG_ICU_IRQ_0_CTL0_ICU_IRQ_0_EN_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_0_CTL0_ICU_IRQ_0_EN_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_0_CTL0_ICU_IRQ_0_EN_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_0_CTL0_ICU_IRQ_0_EN_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_0_CTL1 register description at address offset 0x80
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_0_ctl1
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_0_MASK : 32;
    ///< Mask the UC interrupt request
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_0_ctl1_reg_t;

#define UC_TOP_MSG_ICU_IRQ_0_CTL1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_0_CTL1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_0_CTL1_WR_MASK (0xffffffffU)


///< Mask the UC interrupt request
#define UC_TOP_MSG_ICU_IRQ_0_CTL1_ICU_IRQ_0_MASK_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_0_CTL1_ICU_IRQ_0_MASK_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_0_CTL1_ICU_IRQ_0_MASK_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_0_CTL1_ICU_IRQ_0_MASK_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_0_CTL2 register description at address offset 0x84
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_0_ctl2
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_0_CLEAR : 32;
    ///< clear icu
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_0_ctl2_reg_t;

#define UC_TOP_MSG_ICU_IRQ_0_CTL2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_0_CTL2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_0_CTL2_WR_MASK (0xffffffffU)


///< clear icu
#define UC_TOP_MSG_ICU_IRQ_0_CTL2_ICU_IRQ_0_CLR_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_0_CTL2_ICU_IRQ_0_CLR_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_0_CTL2_ICU_IRQ_0_CLR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_0_CTL2_ICU_IRQ_0_CLR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_0_STATUS0 register description at address offset 0x88
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_0_status0
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_0_RAW_STATUS : 32;
    ///< ICU Raw status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_0_stat0_reg_t;

#define UC_TOP_MSG_ICU_IRQ_0_STAT0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_0_STAT0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_0_STAT0_WR_MASK (0x00000000U)


///< ICU Raw status
#define UC_TOP_MSG_ICU_IRQ_0_STAT0_ICU_IRQ_0_RAW_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_0_STAT0_ICU_IRQ_0_RAW_STAT_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_0_STAT0_ICU_IRQ_0_RAW_STAT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_0_STAT0_ICU_IRQ_0_RAW_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_0_STATUS1 register description at address offset 0x8c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_0_status1
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_0_STATUS : 32;
    ///< ICU status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_0_stat1_reg_t;

#define UC_TOP_MSG_ICU_IRQ_0_STAT1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_0_STAT1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_0_STAT1_WR_MASK (0x00000000U)


///< ICU status
#define UC_TOP_MSG_ICU_IRQ_0_STAT1_ICU_IRQ_0_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_0_STAT1_ICU_IRQ_0_STAT_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_0_STAT1_ICU_IRQ_0_STAT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_0_STAT1_ICU_IRQ_0_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_4_CTL0 register description at address offset 0x90
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_4_ctl0
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_4_ENABLE : 32;
    ///< Enable the UC interrupt
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_4_ctl0_reg_t;

#define UC_TOP_MSG_ICU_IRQ_4_CTL0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_4_CTL0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_4_CTL0_WR_MASK (0xffffffffU)


///< Enable the UC interrupt
#define UC_TOP_MSG_ICU_IRQ_4_CTL0_ICU_IRQ_4_EN_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_4_CTL0_ICU_IRQ_4_EN_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_4_CTL0_ICU_IRQ_4_EN_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_4_CTL0_ICU_IRQ_4_EN_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_4_CTL1 register description at address offset 0x94
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_4_ctl1
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_4_MASK : 32;
    ///< Mask the UC interrupt request
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_4_ctl1_reg_t;

#define UC_TOP_MSG_ICU_IRQ_4_CTL1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_4_CTL1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_4_CTL1_WR_MASK (0xffffffffU)


///< Mask the UC interrupt request
#define UC_TOP_MSG_ICU_IRQ_4_CTL1_ICU_IRQ_4_MASK_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_4_CTL1_ICU_IRQ_4_MASK_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_4_CTL1_ICU_IRQ_4_MASK_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_4_CTL1_ICU_IRQ_4_MASK_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_4_CTL2 register description at address offset 0x98
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_4_ctl2
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_4_CLEAR : 32;
    ///< clear icu
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_4_ctl2_reg_t;

#define UC_TOP_MSG_ICU_IRQ_4_CTL2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_4_CTL2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_4_CTL2_WR_MASK (0xffffffffU)


///< clear icu
#define UC_TOP_MSG_ICU_IRQ_4_CTL2_ICU_IRQ_4_CLR_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_4_CTL2_ICU_IRQ_4_CLR_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_4_CTL2_ICU_IRQ_4_CLR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_4_CTL2_ICU_IRQ_4_CLR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_4_STATUS0 register description at address offset 0x9c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_4_status0
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_4_RAW_STATUS : 32;
    ///< ICU Raw status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_4_stat0_reg_t;

#define UC_TOP_MSG_ICU_IRQ_4_STAT0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_4_STAT0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_4_STAT0_WR_MASK (0x00000000U)


///< ICU Raw status
#define UC_TOP_MSG_ICU_IRQ_4_STAT0_ICU_IRQ_4_RAW_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_4_STAT0_ICU_IRQ_4_RAW_STAT_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_4_STAT0_ICU_IRQ_4_RAW_STAT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_4_STAT0_ICU_IRQ_4_RAW_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_4_STATUS1 register description at address offset 0xa0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_4_status1
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_4_STATUS : 32;
    ///< ICU status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_4_stat1_reg_t;

#define UC_TOP_MSG_ICU_IRQ_4_STAT1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_4_STAT1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_4_STAT1_WR_MASK (0x00000000U)


///< ICU status
#define UC_TOP_MSG_ICU_IRQ_4_STAT1_ICU_IRQ_4_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_4_STAT1_ICU_IRQ_4_STAT_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_4_STAT1_ICU_IRQ_4_STAT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_4_STAT1_ICU_IRQ_4_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_10_CTL0 register description at address offset 0xa4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_10_ctl0
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_10_ENABLE : 32;
    ///< Enable the UC interrupt
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_10_ctl0_reg_t;

#define UC_TOP_MSG_ICU_IRQ_10_CTL0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_10_CTL0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_10_CTL0_WR_MASK (0xffffffffU)


///< Enable the UC interrupt
#define UC_TOP_MSG_ICU_IRQ_10_CTL0_ICU_IRQ_10_EN_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_10_CTL0_ICU_IRQ_10_EN_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_10_CTL0_ICU_IRQ_10_EN_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_10_CTL0_ICU_IRQ_10_EN_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_10_CTL1 register description at address offset 0xa8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_10_ctl1
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_10_MASK : 32;
    ///< Mask the UC interrupt request
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_10_ctl1_reg_t;

#define UC_TOP_MSG_ICU_IRQ_10_CTL1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_10_CTL1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_10_CTL1_WR_MASK (0xffffffffU)


///< Mask the UC interrupt request
#define UC_TOP_MSG_ICU_IRQ_10_CTL1_ICU_IRQ_10_MASK_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_10_CTL1_ICU_IRQ_10_MASK_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_10_CTL1_ICU_IRQ_10_MASK_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_10_CTL1_ICU_IRQ_10_MASK_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_10_CTL2 register description at address offset 0xac
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_10_ctl2
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_10_CLEAR : 32;
    ///< clear icu
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_10_ctl2_reg_t;

#define UC_TOP_MSG_ICU_IRQ_10_CTL2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_10_CTL2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_10_CTL2_WR_MASK (0xffffffffU)


///< clear icu
#define UC_TOP_MSG_ICU_IRQ_10_CTL2_ICU_IRQ_10_CLR_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_10_CTL2_ICU_IRQ_10_CLR_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_10_CTL2_ICU_IRQ_10_CLR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_10_CTL2_ICU_IRQ_10_CLR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_10_STATUS0 register description at address offset 0xb0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_10_status0
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_10_RAW_STATUS : 32;
    ///< ICU Raw status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_10_stat0_reg_t;

#define UC_TOP_MSG_ICU_IRQ_10_STAT0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_10_STAT0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_10_STAT0_WR_MASK (0x00000000U)


///< ICU Raw status
#define UC_TOP_MSG_ICU_IRQ_10_STAT0_ICU_IRQ_10_RAW_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_10_STAT0_ICU_IRQ_10_RAW_STAT_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_10_STAT0_ICU_IRQ_10_RAW_STAT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_10_STAT0_ICU_IRQ_10_RAW_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_10_STATUS1 register description at address offset 0xb4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_10_status1
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_10_STATUS : 32;
    ///< ICU status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_10_stat1_reg_t;

#define UC_TOP_MSG_ICU_IRQ_10_STAT1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_10_STAT1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_10_STAT1_WR_MASK (0x00000000U)


///< ICU status
#define UC_TOP_MSG_ICU_IRQ_10_STAT1_ICU_IRQ_10_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_10_STAT1_ICU_IRQ_10_STAT_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_10_STAT1_ICU_IRQ_10_STAT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_10_STAT1_ICU_IRQ_10_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_16_CTL0 register description at address offset 0xb8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_16_ctl0
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_16_ENABLE : 32;
    ///< Enable the UC interrupt
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_16_ctl0_reg_t;

#define UC_TOP_MSG_ICU_IRQ_16_CTL0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_16_CTL0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_16_CTL0_WR_MASK (0xffffffffU)


///< Enable the UC interrupt
#define UC_TOP_MSG_ICU_IRQ_16_CTL0_ICU_IRQ_16_EN_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_16_CTL0_ICU_IRQ_16_EN_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_16_CTL0_ICU_IRQ_16_EN_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_16_CTL0_ICU_IRQ_16_EN_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_16_CTL1 register description at address offset 0xbc
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_16_ctl1
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_16_MASK : 32;
    ///< Mask the UC interrupt request
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_16_ctl1_reg_t;

#define UC_TOP_MSG_ICU_IRQ_16_CTL1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_16_CTL1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_16_CTL1_WR_MASK (0xffffffffU)


///< Mask the UC interrupt request
#define UC_TOP_MSG_ICU_IRQ_16_CTL1_ICU_IRQ_16_MASK_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_16_CTL1_ICU_IRQ_16_MASK_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_16_CTL1_ICU_IRQ_16_MASK_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_16_CTL1_ICU_IRQ_16_MASK_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_16_CTL2 register description at address offset 0xc0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_16_ctl2
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_16_CLEAR : 32;
    ///< clear icu
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_16_ctl2_reg_t;

#define UC_TOP_MSG_ICU_IRQ_16_CTL2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_16_CTL2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_16_CTL2_WR_MASK (0xffffffffU)


///< clear icu
#define UC_TOP_MSG_ICU_IRQ_16_CTL2_ICU_IRQ_16_CLR_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_16_CTL2_ICU_IRQ_16_CLR_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_16_CTL2_ICU_IRQ_16_CLR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_16_CTL2_ICU_IRQ_16_CLR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_16_STATUS0 register description at address offset 0xc4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_16_status0
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_16_RAW_STATUS : 32;
    ///< ICU Raw status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_16_stat0_reg_t;

#define UC_TOP_MSG_ICU_IRQ_16_STAT0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_16_STAT0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_16_STAT0_WR_MASK (0x00000000U)


///< ICU Raw status
#define UC_TOP_MSG_ICU_IRQ_16_STAT0_ICU_IRQ_16_RAW_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_16_STAT0_ICU_IRQ_16_RAW_STAT_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_16_STAT0_ICU_IRQ_16_RAW_STAT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_16_STAT0_ICU_IRQ_16_RAW_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_16_STATUS1 register description at address offset 0xc8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_16_status1
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_16_STATUS : 32;
    ///< ICU status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_16_stat1_reg_t;

#define UC_TOP_MSG_ICU_IRQ_16_STAT1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_16_STAT1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_16_STAT1_WR_MASK (0x00000000U)


///< ICU status
#define UC_TOP_MSG_ICU_IRQ_16_STAT1_ICU_IRQ_16_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_16_STAT1_ICU_IRQ_16_STAT_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_16_STAT1_ICU_IRQ_16_STAT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_16_STAT1_ICU_IRQ_16_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_17_CTL0 register description at address offset 0xcc
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_17_ctl0
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_17_ENABLE : 32;
    ///< Enable the UC interrupt
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_17_ctl0_reg_t;

#define UC_TOP_MSG_ICU_IRQ_17_CTL0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_17_CTL0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_17_CTL0_WR_MASK (0xffffffffU)


///< Enable the UC interrupt
#define UC_TOP_MSG_ICU_IRQ_17_CTL0_ICU_IRQ_17_EN_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_17_CTL0_ICU_IRQ_17_EN_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_17_CTL0_ICU_IRQ_17_EN_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_17_CTL0_ICU_IRQ_17_EN_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_17_CTL1 register description at address offset 0xd0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_17_ctl1
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_17_MASK : 32;
    ///< Mask the UC interrupt request
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_17_ctl1_reg_t;

#define UC_TOP_MSG_ICU_IRQ_17_CTL1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_17_CTL1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_17_CTL1_WR_MASK (0xffffffffU)


///< Mask the UC interrupt request
#define UC_TOP_MSG_ICU_IRQ_17_CTL1_ICU_IRQ_17_MASK_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_17_CTL1_ICU_IRQ_17_MASK_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_17_CTL1_ICU_IRQ_17_MASK_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_17_CTL1_ICU_IRQ_17_MASK_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_17_CTL2 register description at address offset 0xd4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_17_ctl2
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_17_CLEAR : 32;
    ///< clear icu
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_17_ctl2_reg_t;

#define UC_TOP_MSG_ICU_IRQ_17_CTL2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_17_CTL2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_17_CTL2_WR_MASK (0xffffffffU)


///< clear icu
#define UC_TOP_MSG_ICU_IRQ_17_CTL2_ICU_IRQ_17_CLR_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_17_CTL2_ICU_IRQ_17_CLR_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_17_CTL2_ICU_IRQ_17_CLR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_17_CTL2_ICU_IRQ_17_CLR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_17_STATUS0 register description at address offset 0xd8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_17_status0
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_17_RAW_STATUS : 32;
    ///< ICU Raw status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_17_stat0_reg_t;

#define UC_TOP_MSG_ICU_IRQ_17_STAT0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_17_STAT0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_17_STAT0_WR_MASK (0x00000000U)


///< ICU Raw status
#define UC_TOP_MSG_ICU_IRQ_17_STAT0_ICU_IRQ_17_RAW_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_17_STAT0_ICU_IRQ_17_RAW_STAT_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_17_STAT0_ICU_IRQ_17_RAW_STAT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_17_STAT0_ICU_IRQ_17_RAW_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_17_STATUS1 register description at address offset 0xdc
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_17_status1
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_17_STATUS : 32;
    ///< ICU status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_17_stat1_reg_t;

#define UC_TOP_MSG_ICU_IRQ_17_STAT1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_17_STAT1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_ICU_IRQ_17_STAT1_WR_MASK (0x00000000U)


///< ICU status
#define UC_TOP_MSG_ICU_IRQ_17_STAT1_ICU_IRQ_17_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_17_STAT1_ICU_IRQ_17_STAT_BF_WID (32)
#define UC_TOP_MSG_ICU_IRQ_17_STAT1_ICU_IRQ_17_STAT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_ICU_IRQ_17_STAT1_ICU_IRQ_17_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_ICU_IRQ_RAW_STATUS register description at address offset 0xe0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/icu_irq_raw_status
  * placeholder
  */

typedef union {
  struct {
    uint32_t ICU_IRQ_RAW_STATUS : 24;
    ///< ICU raw status
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 8;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_icu_irq_raw_stat_reg_t;

#define UC_TOP_MSG_ICU_IRQ_RAW_STAT_DEFAULT (0x00000000U)
#define UC_TOP_MSG_ICU_IRQ_RAW_STAT_RD_MASK (0x00ffffffU)
#define UC_TOP_MSG_ICU_IRQ_RAW_STAT_WR_MASK (0x00000000U)


///< ICU raw status
#define UC_TOP_MSG_ICU_IRQ_RAW_STAT_ICU_IRQ_RAW_STAT_BF_OFF ( 0)
#define UC_TOP_MSG_ICU_IRQ_RAW_STAT_ICU_IRQ_RAW_STAT_BF_WID (24)
#define UC_TOP_MSG_ICU_IRQ_RAW_STAT_ICU_IRQ_RAW_STAT_BF_MSK (0x00FFFFFF)
#define UC_TOP_MSG_ICU_IRQ_RAW_STAT_ICU_IRQ_RAW_STAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_STATUS_RSLT_0 register description at address offset 0xe4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_status_rslt_0
  * FW Status & Result
  */

typedef union {
  struct {
    uint32_t FW_STATUS_RSLT_0 : 32;
    ///< FW status and result - FW uses this register for ack and busy signals,
    ///< storing results and other status signals
    ///< 0: o_uc_status_irq_a
    ///< 1: o_uc_fw_macro_busy_ack
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_stat_rslt_0_reg_t;

#define UC_TOP_MSG_FW_STAT_RSLT_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_STAT_RSLT_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_STAT_RSLT_0_WR_MASK (0xffffffffU)


///< FW status and result - FW uses this register for ack and busy signals,
///< storing results and other status signals
///< 0: o_uc_status_irq_a
///< 1: o_uc_fw_macro_busy_ack
#define UC_TOP_MSG_FW_STAT_RSLT_0_FW_STAT_RSLT_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_STAT_RSLT_0_FW_STAT_RSLT_0_BF_WID (32)
#define UC_TOP_MSG_FW_STAT_RSLT_0_FW_STAT_RSLT_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_STAT_RSLT_0_FW_STAT_RSLT_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_STATUS_RSLT_1 register description at address offset 0xe8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_status_rslt_1
  * FW Status & Result
  */

typedef union {
  struct {
    uint32_t FW_STATUS_RSLT_1 : 32;
    ///< FW status and result - FW uses this register for ack and busy signals,
    ///< storing results and other status signals
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_stat_rslt_1_reg_t;

#define UC_TOP_MSG_FW_STAT_RSLT_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_STAT_RSLT_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_STAT_RSLT_1_WR_MASK (0xffffffffU)


///< FW status and result - FW uses this register for ack and busy signals,
///< storing results and other status signals
#define UC_TOP_MSG_FW_STAT_RSLT_1_FW_STAT_RSLT_1_BF_OFF ( 0)
#define UC_TOP_MSG_FW_STAT_RSLT_1_FW_STAT_RSLT_1_BF_WID (32)
#define UC_TOP_MSG_FW_STAT_RSLT_1_FW_STAT_RSLT_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_STAT_RSLT_1_FW_STAT_RSLT_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_STATUS_RSLT_2 register description at address offset 0xec
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_status_rslt_2
  * FW Status & Result
  */

typedef union {
  struct {
    uint32_t FW_STATUS_RSLT_2 : 32;
    ///< FW status and result - FW uses this register for ack and busy signals,
    ///< storing results and other status signals
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_stat_rslt_2_reg_t;

#define UC_TOP_MSG_FW_STAT_RSLT_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_STAT_RSLT_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_STAT_RSLT_2_WR_MASK (0xffffffffU)


///< FW status and result - FW uses this register for ack and busy signals,
///< storing results and other status signals
#define UC_TOP_MSG_FW_STAT_RSLT_2_FW_STAT_RSLT_2_BF_OFF ( 0)
#define UC_TOP_MSG_FW_STAT_RSLT_2_FW_STAT_RSLT_2_BF_WID (32)
#define UC_TOP_MSG_FW_STAT_RSLT_2_FW_STAT_RSLT_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_STAT_RSLT_2_FW_STAT_RSLT_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_STATUS_RSLT_3 register description at address offset 0xf0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_status_rslt_3
  * FW Status & Result
  */

typedef union {
  struct {
    uint32_t FW_STATUS_RSLT_3 : 32;
    ///< FW status and result - FW uses this register for ack and busy signals,
    ///< storing results and other status signals
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_stat_rslt_3_reg_t;

#define UC_TOP_MSG_FW_STAT_RSLT_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_STAT_RSLT_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_STAT_RSLT_3_WR_MASK (0xffffffffU)


///< FW status and result - FW uses this register for ack and busy signals,
///< storing results and other status signals
#define UC_TOP_MSG_FW_STAT_RSLT_3_FW_STAT_RSLT_3_BF_OFF ( 0)
#define UC_TOP_MSG_FW_STAT_RSLT_3_FW_STAT_RSLT_3_BF_WID (32)
#define UC_TOP_MSG_FW_STAT_RSLT_3_FW_STAT_RSLT_3_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_STAT_RSLT_3_FW_STAT_RSLT_3_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_STATUS_RSLT_4 register description at address offset 0xf4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_status_rslt_4
  * FW Status & Result
  */

typedef union {
  struct {
    uint32_t FW_STATUS_RSLT_4 : 32;
    ///< FW status and result - FW uses this register for ack and busy signals,
    ///< storing results and other status signals (Reserved for future use)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_stat_rslt_4_reg_t;

#define UC_TOP_MSG_FW_STAT_RSLT_4_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_STAT_RSLT_4_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_STAT_RSLT_4_WR_MASK (0xffffffffU)


///< FW status and result - FW uses this register for ack and busy signals,
///< storing results and other status signals (Reserved for future use)
#define UC_TOP_MSG_FW_STAT_RSLT_4_FW_STAT_RSLT_4_BF_OFF ( 0)
#define UC_TOP_MSG_FW_STAT_RSLT_4_FW_STAT_RSLT_4_BF_WID (32)
#define UC_TOP_MSG_FW_STAT_RSLT_4_FW_STAT_RSLT_4_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_STAT_RSLT_4_FW_STAT_RSLT_4_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_STATUS_RSLT_5 register description at address offset 0xf8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_status_rslt_5
  * FW Status & Result
  */

typedef union {
  struct {
    uint32_t FW_STATUS_RSLT_5 : 32;
    ///< FW status and result - FW uses this register for ack and busy signals,
    ///< storing results and other status signals (Reserved for future use)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_stat_rslt_5_reg_t;

#define UC_TOP_MSG_FW_STAT_RSLT_5_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_STAT_RSLT_5_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_STAT_RSLT_5_WR_MASK (0xffffffffU)


///< FW status and result - FW uses this register for ack and busy signals,
///< storing results and other status signals (Reserved for future use)
#define UC_TOP_MSG_FW_STAT_RSLT_5_FW_STAT_RSLT_5_BF_OFF ( 0)
#define UC_TOP_MSG_FW_STAT_RSLT_5_FW_STAT_RSLT_5_BF_WID (32)
#define UC_TOP_MSG_FW_STAT_RSLT_5_FW_STAT_RSLT_5_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_STAT_RSLT_5_FW_STAT_RSLT_5_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_STATUS_RSLT_6 register description at address offset 0xfc
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_status_rslt_6
  * FW Status & Result
  */

typedef union {
  struct {
    uint32_t FW_STATUS_RSLT_6 : 32;
    ///< FW status and result - FW uses this register for ack and busy signals,
    ///< storing results and other status signals (Reserved for future use)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_stat_rslt_6_reg_t;

#define UC_TOP_MSG_FW_STAT_RSLT_6_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_STAT_RSLT_6_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_STAT_RSLT_6_WR_MASK (0xffffffffU)


///< FW status and result - FW uses this register for ack and busy signals,
///< storing results and other status signals (Reserved for future use)
#define UC_TOP_MSG_FW_STAT_RSLT_6_FW_STAT_RSLT_6_BF_OFF ( 0)
#define UC_TOP_MSG_FW_STAT_RSLT_6_FW_STAT_RSLT_6_BF_WID (32)
#define UC_TOP_MSG_FW_STAT_RSLT_6_FW_STAT_RSLT_6_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_STAT_RSLT_6_FW_STAT_RSLT_6_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_STATUS_RSLT_7 register description at address offset 0x100
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_status_rslt_7
  * FW Status & Result
  */

typedef union {
  struct {
    uint32_t FW_STATUS_RSLT_7 : 32;
    ///< FW status and result - FW uses this register for ack and busy signals,
    ///< storing results and other status signals (Reserved for future use)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_stat_rslt_7_reg_t;

#define UC_TOP_MSG_FW_STAT_RSLT_7_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_STAT_RSLT_7_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_STAT_RSLT_7_WR_MASK (0xffffffffU)


///< FW status and result - FW uses this register for ack and busy signals,
///< storing results and other status signals (Reserved for future use)
#define UC_TOP_MSG_FW_STAT_RSLT_7_FW_STAT_RSLT_7_BF_OFF ( 0)
#define UC_TOP_MSG_FW_STAT_RSLT_7_FW_STAT_RSLT_7_BF_WID (32)
#define UC_TOP_MSG_FW_STAT_RSLT_7_FW_STAT_RSLT_7_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_STAT_RSLT_7_FW_STAT_RSLT_7_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_MACRO_TRIGGER_CTRL_0 register description at address offset 0x104
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_macro_trigger_ctrl_0
  * FW Macro Trigger
  */

typedef union {
  struct {
    uint32_t FW_MACRO_TRIGGER_0_0 : 1;
    ///< FW macro trigger 0 - bit 0  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_1 : 1;
    ///< FW macro trigger 0 - bit 1  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="1" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_2 : 1;
    ///< FW macro trigger 0 - bit 2  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="2" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_3 : 1;
    ///< FW macro trigger 0 - bit 3  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="3" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_4 : 1;
    ///< FW macro trigger 0 - bit 4  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="4" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_5 : 1;
    ///< FW macro trigger 0 - bit 5  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="5" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_6 : 1;
    ///< FW macro trigger 0 - bit 6  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="6" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_7 : 1;
    ///< FW macro trigger 0 - bit 7  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="7" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_8 : 1;
    ///< FW macro trigger 0 - bit 8  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_9 : 1;
    ///< FW macro trigger 0 - bit 9  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="9" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_10 : 1;
    ///< FW macro trigger 0 - bit 10  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="10" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_11 : 1;
    ///< FW macro trigger 0 - bit 11  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="11" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_12 : 1;
    ///< FW macro trigger 0 - bit 12  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="12" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_13 : 1;
    ///< FW macro trigger 0 - bit 13  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="13" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_14 : 1;
    ///< FW macro trigger 0 - bit 14  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="14" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_15 : 1;
    ///< FW macro trigger 0 - bit 15  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="15" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_16 : 1;
    ///< FW macro trigger 0 - bit 16  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_17 : 1;
    ///< FW macro trigger 0 - bit 17  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="17" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_18 : 1;
    ///< FW macro trigger 0 - bit 18  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="18" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_19 : 1;
    ///< FW macro trigger 0 - bit 19  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="19" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_20 : 1;
    ///< FW macro trigger 0 - bit 20  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="20" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_21 : 1;
    ///< FW macro trigger 0 - bit 21  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="21" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_22 : 1;
    ///< FW macro trigger 0 - bit 22  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="22" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_23 : 1;
    ///< FW macro trigger 0 - bit 23  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="23" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_24 : 1;
    ///< FW macro trigger 0 - bit 24  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_25 : 1;
    ///< FW macro trigger 0 - bit 25  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="25" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_26 : 1;
    ///< FW macro trigger 0 - bit 26  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="26" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_27 : 1;
    ///< FW macro trigger 0 - bit 27  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="27" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_28 : 1;
    ///< FW macro trigger 0 - bit 28  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="28" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_29 : 1;
    ///< FW macro trigger 0 - bit 29  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="29" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_30 : 1;
    ///< FW macro trigger 0 - bit 30  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="30" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_0_31 : 1;
    ///< FW macro trigger 0 - bit 31  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_macro_trig_ctrl_0_reg_t;

#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_WR_MASK (0xffffffffU)


///< FW macro trigger 0 - bit 0  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_BF_MSK (0x00000001)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 1  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_1_BF_OFF ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_1_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_1_BF_MSK (0x00000002)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_1_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 2  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_2_BF_OFF ( 2)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_2_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_2_BF_MSK (0x00000004)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_2_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 3  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_3_BF_OFF ( 3)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_3_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_3_BF_MSK (0x00000008)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_3_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 4  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_4_BF_OFF ( 4)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_4_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_4_BF_MSK (0x00000010)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_4_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 5  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_5_BF_OFF ( 5)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_5_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_5_BF_MSK (0x00000020)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_5_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 6  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_6_BF_OFF ( 6)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_6_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_6_BF_MSK (0x00000040)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_6_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 7  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_7_BF_OFF ( 7)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_7_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_7_BF_MSK (0x00000080)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_7_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 8  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_8_BF_OFF ( 8)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_8_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_8_BF_MSK (0x00000100)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_8_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 9  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_9_BF_OFF ( 9)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_9_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_9_BF_MSK (0x00000200)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_9_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 10  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_10_BF_OFF (10)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_10_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_10_BF_MSK (0x00000400)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_10_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 11  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_11_BF_OFF (11)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_11_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_11_BF_MSK (0x00000800)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_11_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 12  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_12_BF_OFF (12)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_12_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_12_BF_MSK (0x00001000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_12_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 13  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_13_BF_OFF (13)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_13_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_13_BF_MSK (0x00002000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_13_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 14  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_14_BF_OFF (14)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_14_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_14_BF_MSK (0x00004000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_14_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 15  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_15_BF_OFF (15)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_15_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_15_BF_MSK (0x00008000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_15_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 16  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_16_BF_OFF (16)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_16_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_16_BF_MSK (0x00010000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_16_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 17  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_17_BF_OFF (17)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_17_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_17_BF_MSK (0x00020000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_17_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 18  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_18_BF_OFF (18)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_18_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_18_BF_MSK (0x00040000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_18_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 19  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_19_BF_OFF (19)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_19_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_19_BF_MSK (0x00080000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_19_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 20  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_20_BF_OFF (20)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_20_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_20_BF_MSK (0x00100000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_20_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 21  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_21_BF_OFF (21)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_21_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_21_BF_MSK (0x00200000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_21_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 22  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_22_BF_OFF (22)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_22_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_22_BF_MSK (0x00400000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_22_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 23  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_23_BF_OFF (23)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_23_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_23_BF_MSK (0x00800000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_23_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 24  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_24_BF_OFF (24)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_24_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_24_BF_MSK (0x01000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_24_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 25  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_25_BF_OFF (25)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_25_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_25_BF_MSK (0x02000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_25_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 26  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_26_BF_OFF (26)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_26_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_26_BF_MSK (0x04000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_26_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 27  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_27_BF_OFF (27)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_27_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_27_BF_MSK (0x08000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_27_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 28  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_28_BF_OFF (28)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_28_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_28_BF_MSK (0x10000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_28_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 29  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_29_BF_OFF (29)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_29_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_29_BF_MSK (0x20000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_29_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 30  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_30_BF_OFF (30)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_30_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_30_BF_MSK (0x40000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_30_BF_DEF (0x00000000)

///< FW macro trigger 0 - bit 31  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_31_BF_OFF (31)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_31_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_31_BF_MSK (0x80000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_FW_MACRO_TRIG_0_31_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_MACRO_TRIGGER_CTRL_1 register description at address offset 0x108
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_macro_trigger_ctrl_1
  * FW Macro Trigger
  */

typedef union {
  struct {
    uint32_t FW_MACRO_TRIGGER_1_0 : 1;
    ///< FW macro trigger 1 - bit 0  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_1 : 1;
    ///< FW macro trigger 1 - bit 1  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="1" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_2 : 1;
    ///< FW macro trigger 1 - bit 2  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="2" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_3 : 1;
    ///< FW macro trigger 1 - bit 3  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="3" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_4 : 1;
    ///< FW macro trigger 1 - bit 4  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="4" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_5 : 1;
    ///< FW macro trigger 1 - bit 5  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="5" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_6 : 1;
    ///< FW macro trigger 1 - bit 6  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="6" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_7 : 1;
    ///< FW macro trigger 1 - bit 7  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="7" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_8 : 1;
    ///< FW macro trigger 1 - bit 8  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_9 : 1;
    ///< FW macro trigger 1 - bit 9  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="9" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_10 : 1;
    ///< FW macro trigger 1 - bit 10  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="10" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_11 : 1;
    ///< FW macro trigger 1 - bit 11  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="11" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_12 : 1;
    ///< FW macro trigger 1 - bit 12  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="12" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_13 : 1;
    ///< FW macro trigger 1 - bit 13  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="13" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_14 : 1;
    ///< FW macro trigger 1 - bit 14  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="14" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_15 : 1;
    ///< FW macro trigger 1 - bit 15  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="15" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_16 : 1;
    ///< FW macro trigger 1 - bit 16  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_17 : 1;
    ///< FW macro trigger 1 - bit 17  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="17" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_18 : 1;
    ///< FW macro trigger 1 - bit 18  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="18" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_19 : 1;
    ///< FW macro trigger 1 - bit 19  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="19" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_20 : 1;
    ///< FW macro trigger 1 - bit 20  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="20" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_21 : 1;
    ///< FW macro trigger 1 - bit 21  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="21" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_22 : 1;
    ///< FW macro trigger 1 - bit 22  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="22" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_23 : 1;
    ///< FW macro trigger 1 - bit 23  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="23" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_24 : 1;
    ///< FW macro trigger 1 - bit 24  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_25 : 1;
    ///< FW macro trigger 1 - bit 25  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="25" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_26 : 1;
    ///< FW macro trigger 1 - bit 26  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="26" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_27 : 1;
    ///< FW macro trigger 1 - bit 27  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="27" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_28 : 1;
    ///< FW macro trigger 1 - bit 28  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="28" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_29 : 1;
    ///< FW macro trigger 1 - bit 29  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="29" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_30 : 1;
    ///< FW macro trigger 1 - bit 30  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="30" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_1_31 : 1;
    ///< FW macro trigger 1 - bit 31  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_macro_trig_ctrl_1_reg_t;

#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_WR_MASK (0xffffffffU)


///< FW macro trigger 1 - bit 0  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_0_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_0_BF_MSK (0x00000001)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_0_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 1  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_BF_OFF ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_BF_MSK (0x00000002)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 2  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_2_BF_OFF ( 2)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_2_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_2_BF_MSK (0x00000004)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_2_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 3  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_3_BF_OFF ( 3)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_3_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_3_BF_MSK (0x00000008)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_3_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 4  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_4_BF_OFF ( 4)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_4_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_4_BF_MSK (0x00000010)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_4_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 5  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_5_BF_OFF ( 5)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_5_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_5_BF_MSK (0x00000020)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_5_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 6  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_6_BF_OFF ( 6)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_6_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_6_BF_MSK (0x00000040)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_6_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 7  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_7_BF_OFF ( 7)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_7_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_7_BF_MSK (0x00000080)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_7_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 8  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_8_BF_OFF ( 8)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_8_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_8_BF_MSK (0x00000100)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_8_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 9  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_9_BF_OFF ( 9)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_9_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_9_BF_MSK (0x00000200)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_9_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 10  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_10_BF_OFF (10)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_10_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_10_BF_MSK (0x00000400)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_10_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 11  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_11_BF_OFF (11)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_11_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_11_BF_MSK (0x00000800)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_11_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 12  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_12_BF_OFF (12)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_12_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_12_BF_MSK (0x00001000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_12_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 13  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_13_BF_OFF (13)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_13_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_13_BF_MSK (0x00002000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_13_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 14  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_14_BF_OFF (14)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_14_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_14_BF_MSK (0x00004000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_14_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 15  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_15_BF_OFF (15)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_15_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_15_BF_MSK (0x00008000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_15_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 16  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_16_BF_OFF (16)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_16_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_16_BF_MSK (0x00010000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_16_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 17  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_17_BF_OFF (17)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_17_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_17_BF_MSK (0x00020000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_17_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 18  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_18_BF_OFF (18)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_18_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_18_BF_MSK (0x00040000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_18_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 19  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_19_BF_OFF (19)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_19_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_19_BF_MSK (0x00080000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_19_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 20  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_20_BF_OFF (20)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_20_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_20_BF_MSK (0x00100000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_20_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 21  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_21_BF_OFF (21)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_21_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_21_BF_MSK (0x00200000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_21_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 22  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_22_BF_OFF (22)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_22_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_22_BF_MSK (0x00400000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_22_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 23  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_23_BF_OFF (23)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_23_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_23_BF_MSK (0x00800000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_23_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 24  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_24_BF_OFF (24)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_24_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_24_BF_MSK (0x01000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_24_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 25  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_25_BF_OFF (25)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_25_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_25_BF_MSK (0x02000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_25_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 26  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_26_BF_OFF (26)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_26_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_26_BF_MSK (0x04000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_26_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 27  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_27_BF_OFF (27)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_27_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_27_BF_MSK (0x08000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_27_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 28  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_28_BF_OFF (28)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_28_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_28_BF_MSK (0x10000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_28_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 29  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_29_BF_OFF (29)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_29_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_29_BF_MSK (0x20000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_29_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 30  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_30_BF_OFF (30)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_30_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_30_BF_MSK (0x40000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_30_BF_DEF (0x00000000)

///< FW macro trigger 1 - bit 31  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_31_BF_OFF (31)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_31_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_31_BF_MSK (0x80000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_FW_MACRO_TRIG_1_31_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_MACRO_TRIGGER_CTRL_2 register description at address offset 0x10c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_macro_trigger_ctrl_2
  * FW Macro Trigger
  */

typedef union {
  struct {
    uint32_t FW_MACRO_TRIGGER_2_0 : 1;
    ///< FW macro trigger 2 - bit 0  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_1 : 1;
    ///< FW macro trigger 2 - bit 1  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="1" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_2 : 1;
    ///< FW macro trigger 2 - bit 2  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="2" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_3 : 1;
    ///< FW macro trigger 2 - bit 3  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="3" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_4 : 1;
    ///< FW macro trigger 2 - bit 4  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="4" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_5 : 1;
    ///< FW macro trigger 2 - bit 5  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="5" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_6 : 1;
    ///< FW macro trigger 2 - bit 6  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="6" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_7 : 1;
    ///< FW macro trigger 2 - bit 7  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="7" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_8 : 1;
    ///< FW macro trigger 2 - bit 8  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_9 : 1;
    ///< FW macro trigger 2 - bit 9  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="9" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_10 : 1;
    ///< FW macro trigger 2 - bit 10  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="10" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_11 : 1;
    ///< FW macro trigger 2 - bit 11  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="11" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_12 : 1;
    ///< FW macro trigger 2 - bit 12  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="12" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_13 : 1;
    ///< FW macro trigger 2 - bit 13  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="13" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_14 : 1;
    ///< FW macro trigger 2 - bit 14  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="14" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_15 : 1;
    ///< FW macro trigger 2 - bit 15  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="15" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_16 : 1;
    ///< FW macro trigger 2 - bit 16  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_17 : 1;
    ///< FW macro trigger 2 - bit 17  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="17" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_18 : 1;
    ///< FW macro trigger 2 - bit 18  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="18" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_19 : 1;
    ///< FW macro trigger 2 - bit 19  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="19" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_20 : 1;
    ///< FW macro trigger 2 - bit 20  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="20" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_21 : 1;
    ///< FW macro trigger 2 - bit 21  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="21" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_22 : 1;
    ///< FW macro trigger 2 - bit 22  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="22" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_23 : 1;
    ///< FW macro trigger 2 - bit 23  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="23" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_24 : 1;
    ///< FW macro trigger 2 - bit 24  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_25 : 1;
    ///< FW macro trigger 2 - bit 25  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="25" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_26 : 1;
    ///< FW macro trigger 2 - bit 26  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="26" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_27 : 1;
    ///< FW macro trigger 2 - bit 27  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="27" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_28 : 1;
    ///< FW macro trigger 2 - bit 28  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="28" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_29 : 1;
    ///< FW macro trigger 2 - bit 29  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="29" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_30 : 1;
    ///< FW macro trigger 2 - bit 30  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="30" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_2_31 : 1;
    ///< FW macro trigger 2 - bit 31  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_macro_trig_ctrl_2_reg_t;

#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_WR_MASK (0xffffffffU)


///< FW macro trigger 2 - bit 0  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_0_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_0_BF_MSK (0x00000001)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_0_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 1  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_1_BF_OFF ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_1_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_1_BF_MSK (0x00000002)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_1_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 2  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_BF_OFF ( 2)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_BF_MSK (0x00000004)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 3  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_3_BF_OFF ( 3)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_3_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_3_BF_MSK (0x00000008)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_3_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 4  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_4_BF_OFF ( 4)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_4_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_4_BF_MSK (0x00000010)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_4_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 5  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_5_BF_OFF ( 5)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_5_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_5_BF_MSK (0x00000020)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_5_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 6  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_6_BF_OFF ( 6)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_6_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_6_BF_MSK (0x00000040)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_6_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 7  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_7_BF_OFF ( 7)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_7_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_7_BF_MSK (0x00000080)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_7_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 8  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_8_BF_OFF ( 8)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_8_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_8_BF_MSK (0x00000100)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_8_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 9  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_9_BF_OFF ( 9)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_9_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_9_BF_MSK (0x00000200)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_9_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 10  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_10_BF_OFF (10)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_10_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_10_BF_MSK (0x00000400)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_10_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 11  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_11_BF_OFF (11)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_11_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_11_BF_MSK (0x00000800)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_11_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 12  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_12_BF_OFF (12)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_12_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_12_BF_MSK (0x00001000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_12_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 13  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_13_BF_OFF (13)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_13_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_13_BF_MSK (0x00002000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_13_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 14  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_14_BF_OFF (14)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_14_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_14_BF_MSK (0x00004000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_14_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 15  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_15_BF_OFF (15)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_15_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_15_BF_MSK (0x00008000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_15_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 16  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_16_BF_OFF (16)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_16_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_16_BF_MSK (0x00010000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_16_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 17  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_17_BF_OFF (17)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_17_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_17_BF_MSK (0x00020000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_17_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 18  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_18_BF_OFF (18)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_18_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_18_BF_MSK (0x00040000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_18_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 19  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_19_BF_OFF (19)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_19_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_19_BF_MSK (0x00080000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_19_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 20  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_20_BF_OFF (20)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_20_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_20_BF_MSK (0x00100000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_20_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 21  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_21_BF_OFF (21)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_21_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_21_BF_MSK (0x00200000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_21_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 22  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_22_BF_OFF (22)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_22_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_22_BF_MSK (0x00400000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_22_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 23  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_23_BF_OFF (23)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_23_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_23_BF_MSK (0x00800000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_23_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 24  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_24_BF_OFF (24)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_24_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_24_BF_MSK (0x01000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_24_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 25  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_25_BF_OFF (25)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_25_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_25_BF_MSK (0x02000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_25_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 26  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_26_BF_OFF (26)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_26_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_26_BF_MSK (0x04000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_26_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 27  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_27_BF_OFF (27)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_27_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_27_BF_MSK (0x08000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_27_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 28  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_28_BF_OFF (28)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_28_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_28_BF_MSK (0x10000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_28_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 29  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_29_BF_OFF (29)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_29_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_29_BF_MSK (0x20000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_29_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 30  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_30_BF_OFF (30)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_30_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_30_BF_MSK (0x40000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_30_BF_DEF (0x00000000)

///< FW macro trigger 2 - bit 31  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_31_BF_OFF (31)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_31_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_31_BF_MSK (0x80000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_FW_MACRO_TRIG_2_31_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_MACRO_TRIGGER_CTRL_3 register description at address offset 0x110
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_macro_trigger_ctrl_3
  * FW Macro Trigger
  */

typedef union {
  struct {
    uint32_t FW_MACRO_TRIGGER_3_0 : 1;
    ///< FW macro trigger 3 - bit 0  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_1 : 1;
    ///< FW macro trigger 3 - bit 1  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="1" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_2 : 1;
    ///< FW macro trigger 3 - bit 2  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="2" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_3 : 1;
    ///< FW macro trigger 3 - bit 3  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="3" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_4 : 1;
    ///< FW macro trigger 3 - bit 4  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="4" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_5 : 1;
    ///< FW macro trigger 3 - bit 5  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="5" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_6 : 1;
    ///< FW macro trigger 3 - bit 6  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="6" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_7 : 1;
    ///< FW macro trigger 3 - bit 7  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="7" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_8 : 1;
    ///< FW macro trigger 3 - bit 8  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_9 : 1;
    ///< FW macro trigger 3 - bit 9  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="9" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_10 : 1;
    ///< FW macro trigger 3 - bit 10  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="10" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_11 : 1;
    ///< FW macro trigger 3 - bit 11  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="11" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_12 : 1;
    ///< FW macro trigger 3 - bit 12  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="12" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_13 : 1;
    ///< FW macro trigger 3 - bit 13  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="13" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_14 : 1;
    ///< FW macro trigger 3 - bit 14  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="14" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_15 : 1;
    ///< FW macro trigger 3 - bit 15  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="15" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_16 : 1;
    ///< FW macro trigger 3 - bit 16  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_17 : 1;
    ///< FW macro trigger 3 - bit 17  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="17" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_18 : 1;
    ///< FW macro trigger 3 - bit 18  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="18" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_19 : 1;
    ///< FW macro trigger 3 - bit 19  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="19" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_20 : 1;
    ///< FW macro trigger 3 - bit 20  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="20" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_21 : 1;
    ///< FW macro trigger 3 - bit 21  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="21" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_22 : 1;
    ///< FW macro trigger 3 - bit 22  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="22" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_23 : 1;
    ///< FW macro trigger 3 - bit 23  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="23" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_24 : 1;
    ///< FW macro trigger 3 - bit 24  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_25 : 1;
    ///< FW macro trigger 3 - bit 25  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="25" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_26 : 1;
    ///< FW macro trigger 3 - bit 26  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="26" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_27 : 1;
    ///< FW macro trigger 3 - bit 27  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="27" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_28 : 1;
    ///< FW macro trigger 3 - bit 28  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="28" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_29 : 1;
    ///< FW macro trigger 3 - bit 29  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="29" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_30 : 1;
    ///< FW macro trigger 3 - bit 30  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="30" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_3_31 : 1;
    ///< FW macro trigger 3 - bit 31  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_macro_trig_ctrl_3_reg_t;

#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_WR_MASK (0xffffffffU)


///< FW macro trigger 3 - bit 0  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_0_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_0_BF_MSK (0x00000001)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_0_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 1  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_1_BF_OFF ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_1_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_1_BF_MSK (0x00000002)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_1_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 2  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_2_BF_OFF ( 2)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_2_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_2_BF_MSK (0x00000004)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_2_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 3  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_BF_OFF ( 3)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_BF_MSK (0x00000008)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 4  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_4_BF_OFF ( 4)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_4_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_4_BF_MSK (0x00000010)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_4_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 5  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_5_BF_OFF ( 5)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_5_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_5_BF_MSK (0x00000020)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_5_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 6  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_6_BF_OFF ( 6)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_6_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_6_BF_MSK (0x00000040)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_6_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 7  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_7_BF_OFF ( 7)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_7_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_7_BF_MSK (0x00000080)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_7_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 8  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_8_BF_OFF ( 8)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_8_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_8_BF_MSK (0x00000100)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_8_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 9  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_9_BF_OFF ( 9)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_9_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_9_BF_MSK (0x00000200)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_9_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 10  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_10_BF_OFF (10)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_10_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_10_BF_MSK (0x00000400)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_10_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 11  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_11_BF_OFF (11)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_11_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_11_BF_MSK (0x00000800)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_11_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 12  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_12_BF_OFF (12)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_12_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_12_BF_MSK (0x00001000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_12_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 13  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_13_BF_OFF (13)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_13_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_13_BF_MSK (0x00002000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_13_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 14  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_14_BF_OFF (14)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_14_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_14_BF_MSK (0x00004000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_14_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 15  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_15_BF_OFF (15)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_15_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_15_BF_MSK (0x00008000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_15_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 16  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_16_BF_OFF (16)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_16_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_16_BF_MSK (0x00010000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_16_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 17  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_17_BF_OFF (17)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_17_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_17_BF_MSK (0x00020000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_17_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 18  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_18_BF_OFF (18)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_18_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_18_BF_MSK (0x00040000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_18_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 19  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_19_BF_OFF (19)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_19_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_19_BF_MSK (0x00080000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_19_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 20  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_20_BF_OFF (20)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_20_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_20_BF_MSK (0x00100000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_20_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 21  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_21_BF_OFF (21)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_21_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_21_BF_MSK (0x00200000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_21_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 22  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_22_BF_OFF (22)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_22_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_22_BF_MSK (0x00400000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_22_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 23  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_23_BF_OFF (23)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_23_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_23_BF_MSK (0x00800000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_23_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 24  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_24_BF_OFF (24)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_24_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_24_BF_MSK (0x01000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_24_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 25  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_25_BF_OFF (25)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_25_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_25_BF_MSK (0x02000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_25_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 26  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_26_BF_OFF (26)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_26_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_26_BF_MSK (0x04000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_26_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 27  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_27_BF_OFF (27)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_27_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_27_BF_MSK (0x08000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_27_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 28  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_28_BF_OFF (28)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_28_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_28_BF_MSK (0x10000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_28_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 29  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_29_BF_OFF (29)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_29_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_29_BF_MSK (0x20000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_29_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 30  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_30_BF_OFF (30)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_30_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_30_BF_MSK (0x40000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_30_BF_DEF (0x00000000)

///< FW macro trigger 3 - bit 31  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_31_BF_OFF (31)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_31_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_31_BF_MSK (0x80000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_FW_MACRO_TRIG_3_31_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_MACRO_TRIGGER_CTRL_4 register description at address offset 0x114
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_macro_trigger_ctrl_4
  * FW Macro Trigger
  */

typedef union {
  struct {
    uint32_t FW_MACRO_TRIGGER_4_0 : 1;
    ///< FW macro trigger 4 - bit 0  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_1 : 1;
    ///< FW macro trigger 4 - bit 1  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="1" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_2 : 1;
    ///< FW macro trigger 4 - bit 2  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="2" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_3 : 1;
    ///< FW macro trigger 4 - bit 3  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="3" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_4 : 1;
    ///< FW macro trigger 4 - bit 4  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="4" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_5 : 1;
    ///< FW macro trigger 4 - bit 5  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="5" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_6 : 1;
    ///< FW macro trigger 4 - bit 6  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="6" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_7 : 1;
    ///< FW macro trigger 4 - bit 7  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="7" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_8 : 1;
    ///< FW macro trigger 4 - bit 8  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_9 : 1;
    ///< FW macro trigger 4 - bit 9  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="9" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_10 : 1;
    ///< FW macro trigger 4 - bit 10  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="10" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_11 : 1;
    ///< FW macro trigger 4 - bit 11  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="11" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_12 : 1;
    ///< FW macro trigger 4 - bit 12  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="12" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_13 : 1;
    ///< FW macro trigger 4 - bit 13  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="13" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_14 : 1;
    ///< FW macro trigger 4 - bit 14  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="14" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_15 : 1;
    ///< FW macro trigger 4 - bit 15  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="15" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_16 : 1;
    ///< FW macro trigger 4 - bit 16  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_17 : 1;
    ///< FW macro trigger 4 - bit 17  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="17" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_18 : 1;
    ///< FW macro trigger 4 - bit 18  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="18" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_19 : 1;
    ///< FW macro trigger 4 - bit 19  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="19" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_20 : 1;
    ///< FW macro trigger 4 - bit 20  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="20" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_21 : 1;
    ///< FW macro trigger 4 - bit 21  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="21" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_22 : 1;
    ///< FW macro trigger 4 - bit 22  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="22" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_23 : 1;
    ///< FW macro trigger 4 - bit 23  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="23" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_24 : 1;
    ///< FW macro trigger 4 - bit 24  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_25 : 1;
    ///< FW macro trigger 4 - bit 25  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="25" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_26 : 1;
    ///< FW macro trigger 4 - bit 26  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="26" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_27 : 1;
    ///< FW macro trigger 4 - bit 27  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="27" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_28 : 1;
    ///< FW macro trigger 4 - bit 28  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="28" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_29 : 1;
    ///< FW macro trigger 4 - bit 29  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="29" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_30 : 1;
    ///< FW macro trigger 4 - bit 30  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="30" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_4_31 : 1;
    ///< FW macro trigger 4 - bit 31  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_macro_trig_ctrl_4_reg_t;

#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_WR_MASK (0xffffffffU)


///< FW macro trigger 4 - bit 0  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_0_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_0_BF_MSK (0x00000001)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_0_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 1  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_1_BF_OFF ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_1_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_1_BF_MSK (0x00000002)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_1_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 2  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_2_BF_OFF ( 2)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_2_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_2_BF_MSK (0x00000004)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_2_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 3  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_3_BF_OFF ( 3)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_3_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_3_BF_MSK (0x00000008)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_3_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 4  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_BF_OFF ( 4)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_BF_MSK (0x00000010)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 5  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_5_BF_OFF ( 5)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_5_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_5_BF_MSK (0x00000020)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_5_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 6  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_6_BF_OFF ( 6)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_6_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_6_BF_MSK (0x00000040)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_6_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 7  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_7_BF_OFF ( 7)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_7_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_7_BF_MSK (0x00000080)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_7_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 8  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_8_BF_OFF ( 8)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_8_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_8_BF_MSK (0x00000100)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_8_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 9  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_9_BF_OFF ( 9)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_9_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_9_BF_MSK (0x00000200)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_9_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 10  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_10_BF_OFF (10)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_10_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_10_BF_MSK (0x00000400)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_10_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 11  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_11_BF_OFF (11)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_11_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_11_BF_MSK (0x00000800)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_11_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 12  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_12_BF_OFF (12)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_12_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_12_BF_MSK (0x00001000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_12_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 13  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_13_BF_OFF (13)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_13_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_13_BF_MSK (0x00002000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_13_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 14  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_14_BF_OFF (14)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_14_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_14_BF_MSK (0x00004000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_14_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 15  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_15_BF_OFF (15)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_15_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_15_BF_MSK (0x00008000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_15_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 16  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_16_BF_OFF (16)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_16_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_16_BF_MSK (0x00010000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_16_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 17  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_17_BF_OFF (17)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_17_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_17_BF_MSK (0x00020000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_17_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 18  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_18_BF_OFF (18)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_18_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_18_BF_MSK (0x00040000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_18_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 19  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_19_BF_OFF (19)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_19_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_19_BF_MSK (0x00080000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_19_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 20  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_20_BF_OFF (20)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_20_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_20_BF_MSK (0x00100000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_20_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 21  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_21_BF_OFF (21)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_21_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_21_BF_MSK (0x00200000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_21_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 22  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_22_BF_OFF (22)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_22_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_22_BF_MSK (0x00400000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_22_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 23  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_23_BF_OFF (23)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_23_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_23_BF_MSK (0x00800000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_23_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 24  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_24_BF_OFF (24)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_24_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_24_BF_MSK (0x01000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_24_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 25  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_25_BF_OFF (25)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_25_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_25_BF_MSK (0x02000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_25_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 26  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_26_BF_OFF (26)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_26_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_26_BF_MSK (0x04000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_26_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 27  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_27_BF_OFF (27)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_27_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_27_BF_MSK (0x08000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_27_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 28  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_28_BF_OFF (28)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_28_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_28_BF_MSK (0x10000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_28_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 29  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_29_BF_OFF (29)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_29_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_29_BF_MSK (0x20000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_29_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 30  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_30_BF_OFF (30)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_30_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_30_BF_MSK (0x40000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_30_BF_DEF (0x00000000)

///< FW macro trigger 4 - bit 31  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_31_BF_OFF (31)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_31_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_31_BF_MSK (0x80000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_FW_MACRO_TRIG_4_31_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_MACRO_TRIGGER_CTRL_5 register description at address offset 0x118
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_macro_trigger_ctrl_5
  * FW Macro Trigger
  */

typedef union {
  struct {
    uint32_t FW_MACRO_TRIGGER_5_0 : 1;
    ///< FW macro trigger 5 - bit 0  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_1 : 1;
    ///< FW macro trigger 5 - bit 1  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="1" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_2 : 1;
    ///< FW macro trigger 5 - bit 2  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="2" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_3 : 1;
    ///< FW macro trigger 5 - bit 3  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="3" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_4 : 1;
    ///< FW macro trigger 5 - bit 4  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="4" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_5 : 1;
    ///< FW macro trigger 5 - bit 5  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="5" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_6 : 1;
    ///< FW macro trigger 5 - bit 6  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="6" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_7 : 1;
    ///< FW macro trigger 5 - bit 7  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="7" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_8 : 1;
    ///< FW macro trigger 5 - bit 8  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_9 : 1;
    ///< FW macro trigger 5 - bit 9  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="9" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_10 : 1;
    ///< FW macro trigger 5 - bit 10  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="10" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_11 : 1;
    ///< FW macro trigger 5 - bit 11  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="11" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_12 : 1;
    ///< FW macro trigger 5 - bit 12  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="12" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_13 : 1;
    ///< FW macro trigger 5 - bit 13  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="13" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_14 : 1;
    ///< FW macro trigger 5 - bit 14  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="14" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_15 : 1;
    ///< FW macro trigger 5 - bit 15  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="15" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_16 : 1;
    ///< FW macro trigger 5 - bit 16  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_17 : 1;
    ///< FW macro trigger 5 - bit 17  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="17" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_18 : 1;
    ///< FW macro trigger 5 - bit 18  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="18" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_19 : 1;
    ///< FW macro trigger 5 - bit 19  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="19" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_20 : 1;
    ///< FW macro trigger 5 - bit 20  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="20" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_21 : 1;
    ///< FW macro trigger 5 - bit 21  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="21" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_22 : 1;
    ///< FW macro trigger 5 - bit 22  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="22" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_23 : 1;
    ///< FW macro trigger 5 - bit 23  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="23" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_24 : 1;
    ///< FW macro trigger 5 - bit 24  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_25 : 1;
    ///< FW macro trigger 5 - bit 25  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="25" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_26 : 1;
    ///< FW macro trigger 5 - bit 26  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="26" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_27 : 1;
    ///< FW macro trigger 5 - bit 27  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="27" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_28 : 1;
    ///< FW macro trigger 5 - bit 28  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="28" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_29 : 1;
    ///< FW macro trigger 5 - bit 29  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="29" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_30 : 1;
    ///< FW macro trigger 5 - bit 30  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="30" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_5_31 : 1;
    ///< FW macro trigger 5 - bit 31  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_macro_trig_ctrl_5_reg_t;

#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_WR_MASK (0xffffffffU)


///< FW macro trigger 5 - bit 0  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_0_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_0_BF_MSK (0x00000001)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_0_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 1  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_1_BF_OFF ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_1_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_1_BF_MSK (0x00000002)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_1_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 2  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_2_BF_OFF ( 2)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_2_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_2_BF_MSK (0x00000004)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_2_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 3  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_3_BF_OFF ( 3)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_3_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_3_BF_MSK (0x00000008)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_3_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 4  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_4_BF_OFF ( 4)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_4_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_4_BF_MSK (0x00000010)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_4_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 5  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_BF_OFF ( 5)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_BF_MSK (0x00000020)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 6  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_6_BF_OFF ( 6)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_6_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_6_BF_MSK (0x00000040)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_6_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 7  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_7_BF_OFF ( 7)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_7_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_7_BF_MSK (0x00000080)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_7_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 8  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_8_BF_OFF ( 8)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_8_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_8_BF_MSK (0x00000100)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_8_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 9  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_9_BF_OFF ( 9)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_9_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_9_BF_MSK (0x00000200)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_9_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 10  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_10_BF_OFF (10)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_10_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_10_BF_MSK (0x00000400)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_10_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 11  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_11_BF_OFF (11)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_11_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_11_BF_MSK (0x00000800)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_11_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 12  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_12_BF_OFF (12)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_12_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_12_BF_MSK (0x00001000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_12_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 13  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_13_BF_OFF (13)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_13_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_13_BF_MSK (0x00002000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_13_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 14  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_14_BF_OFF (14)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_14_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_14_BF_MSK (0x00004000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_14_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 15  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_15_BF_OFF (15)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_15_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_15_BF_MSK (0x00008000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_15_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 16  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_16_BF_OFF (16)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_16_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_16_BF_MSK (0x00010000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_16_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 17  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_17_BF_OFF (17)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_17_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_17_BF_MSK (0x00020000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_17_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 18  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_18_BF_OFF (18)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_18_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_18_BF_MSK (0x00040000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_18_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 19  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_19_BF_OFF (19)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_19_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_19_BF_MSK (0x00080000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_19_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 20  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_20_BF_OFF (20)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_20_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_20_BF_MSK (0x00100000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_20_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 21  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_21_BF_OFF (21)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_21_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_21_BF_MSK (0x00200000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_21_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 22  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_22_BF_OFF (22)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_22_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_22_BF_MSK (0x00400000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_22_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 23  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_23_BF_OFF (23)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_23_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_23_BF_MSK (0x00800000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_23_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 24  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_24_BF_OFF (24)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_24_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_24_BF_MSK (0x01000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_24_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 25  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_25_BF_OFF (25)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_25_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_25_BF_MSK (0x02000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_25_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 26  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_26_BF_OFF (26)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_26_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_26_BF_MSK (0x04000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_26_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 27  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_27_BF_OFF (27)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_27_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_27_BF_MSK (0x08000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_27_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 28  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_28_BF_OFF (28)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_28_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_28_BF_MSK (0x10000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_28_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 29  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_29_BF_OFF (29)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_29_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_29_BF_MSK (0x20000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_29_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 30  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_30_BF_OFF (30)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_30_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_30_BF_MSK (0x40000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_30_BF_DEF (0x00000000)

///< FW macro trigger 5 - bit 31  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_31_BF_OFF (31)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_31_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_31_BF_MSK (0x80000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_FW_MACRO_TRIG_5_31_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_MACRO_TRIGGER_CTRL_6 register description at address offset 0x11c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_macro_trigger_ctrl_6
  * FW Macro Trigger
  */

typedef union {
  struct {
    uint32_t FW_MACRO_TRIGGER_6_0 : 1;
    ///< FW macro trigger 6 - bit 0  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_1 : 1;
    ///< FW macro trigger 6 - bit 1  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="1" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_2 : 1;
    ///< FW macro trigger 6 - bit 2  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="2" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_3 : 1;
    ///< FW macro trigger 6 - bit 3  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="3" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_4 : 1;
    ///< FW macro trigger 6 - bit 4  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="4" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_5 : 1;
    ///< FW macro trigger 6 - bit 5  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="5" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_6 : 1;
    ///< FW macro trigger 6 - bit 6  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="6" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_7 : 1;
    ///< FW macro trigger 6 - bit 7  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="7" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_8 : 1;
    ///< FW macro trigger 6 - bit 8  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_9 : 1;
    ///< FW macro trigger 6 - bit 9  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="9" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_10 : 1;
    ///< FW macro trigger 6 - bit 10  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="10" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_11 : 1;
    ///< FW macro trigger 6 - bit 11  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="11" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_12 : 1;
    ///< FW macro trigger 6 - bit 12  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="12" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_13 : 1;
    ///< FW macro trigger 6 - bit 13  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="13" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_14 : 1;
    ///< FW macro trigger 6 - bit 14  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="14" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_15 : 1;
    ///< FW macro trigger 6 - bit 15  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="15" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_16 : 1;
    ///< FW macro trigger 6 - bit 16  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_17 : 1;
    ///< FW macro trigger 6 - bit 17  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="17" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_18 : 1;
    ///< FW macro trigger 6 - bit 18  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="18" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_19 : 1;
    ///< FW macro trigger 6 - bit 19  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="19" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_20 : 1;
    ///< FW macro trigger 6 - bit 20  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="20" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_21 : 1;
    ///< FW macro trigger 6 - bit 21  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="21" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_22 : 1;
    ///< FW macro trigger 6 - bit 22  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="22" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_23 : 1;
    ///< FW macro trigger 6 - bit 23  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="23" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_24 : 1;
    ///< FW macro trigger 6 - bit 24  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_25 : 1;
    ///< FW macro trigger 6 - bit 25  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="25" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_26 : 1;
    ///< FW macro trigger 6 - bit 26  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="26" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_27 : 1;
    ///< FW macro trigger 6 - bit 27  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="27" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_28 : 1;
    ///< FW macro trigger 6 - bit 28  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="28" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_29 : 1;
    ///< FW macro trigger 6 - bit 29  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="29" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_30 : 1;
    ///< FW macro trigger 6 - bit 30  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="30" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_6_31 : 1;
    ///< FW macro trigger 6 - bit 31  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_macro_trig_ctrl_6_reg_t;

#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_WR_MASK (0xffffffffU)


///< FW macro trigger 6 - bit 0  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_0_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_0_BF_MSK (0x00000001)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_0_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 1  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_1_BF_OFF ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_1_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_1_BF_MSK (0x00000002)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_1_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 2  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_2_BF_OFF ( 2)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_2_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_2_BF_MSK (0x00000004)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_2_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 3  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_3_BF_OFF ( 3)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_3_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_3_BF_MSK (0x00000008)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_3_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 4  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_4_BF_OFF ( 4)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_4_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_4_BF_MSK (0x00000010)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_4_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 5  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_5_BF_OFF ( 5)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_5_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_5_BF_MSK (0x00000020)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_5_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 6  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_BF_OFF ( 6)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_BF_MSK (0x00000040)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 7  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_7_BF_OFF ( 7)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_7_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_7_BF_MSK (0x00000080)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_7_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 8  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_8_BF_OFF ( 8)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_8_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_8_BF_MSK (0x00000100)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_8_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 9  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_9_BF_OFF ( 9)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_9_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_9_BF_MSK (0x00000200)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_9_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 10  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_10_BF_OFF (10)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_10_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_10_BF_MSK (0x00000400)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_10_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 11  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_11_BF_OFF (11)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_11_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_11_BF_MSK (0x00000800)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_11_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 12  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_12_BF_OFF (12)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_12_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_12_BF_MSK (0x00001000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_12_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 13  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_13_BF_OFF (13)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_13_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_13_BF_MSK (0x00002000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_13_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 14  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_14_BF_OFF (14)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_14_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_14_BF_MSK (0x00004000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_14_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 15  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_15_BF_OFF (15)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_15_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_15_BF_MSK (0x00008000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_15_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 16  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_16_BF_OFF (16)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_16_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_16_BF_MSK (0x00010000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_16_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 17  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_17_BF_OFF (17)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_17_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_17_BF_MSK (0x00020000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_17_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 18  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_18_BF_OFF (18)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_18_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_18_BF_MSK (0x00040000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_18_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 19  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_19_BF_OFF (19)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_19_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_19_BF_MSK (0x00080000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_19_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 20  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_20_BF_OFF (20)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_20_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_20_BF_MSK (0x00100000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_20_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 21  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_21_BF_OFF (21)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_21_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_21_BF_MSK (0x00200000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_21_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 22  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_22_BF_OFF (22)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_22_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_22_BF_MSK (0x00400000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_22_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 23  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_23_BF_OFF (23)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_23_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_23_BF_MSK (0x00800000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_23_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 24  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_24_BF_OFF (24)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_24_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_24_BF_MSK (0x01000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_24_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 25  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_25_BF_OFF (25)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_25_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_25_BF_MSK (0x02000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_25_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 26  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_26_BF_OFF (26)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_26_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_26_BF_MSK (0x04000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_26_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 27  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_27_BF_OFF (27)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_27_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_27_BF_MSK (0x08000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_27_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 28  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_28_BF_OFF (28)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_28_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_28_BF_MSK (0x10000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_28_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 29  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_29_BF_OFF (29)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_29_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_29_BF_MSK (0x20000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_29_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 30  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_30_BF_OFF (30)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_30_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_30_BF_MSK (0x40000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_30_BF_DEF (0x00000000)

///< FW macro trigger 6 - bit 31  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_31_BF_OFF (31)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_31_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_31_BF_MSK (0x80000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_FW_MACRO_TRIG_6_31_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_MACRO_TRIGGER_CTRL_7 register description at address offset 0x120
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_macro_trigger_ctrl_7
  * FW Macro Trigger
  */

typedef union {
  struct {
    uint32_t FW_MACRO_TRIGGER_7_0 : 1;
    ///< FW macro trigger 7 - bit 0  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_1 : 1;
    ///< FW macro trigger 7 - bit 1  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="1" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_2 : 1;
    ///< FW macro trigger 7 - bit 2  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="2" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_3 : 1;
    ///< FW macro trigger 7 - bit 3  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="3" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_4 : 1;
    ///< FW macro trigger 7 - bit 4  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="4" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_5 : 1;
    ///< FW macro trigger 7 - bit 5  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="5" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_6 : 1;
    ///< FW macro trigger 7 - bit 6  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="6" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_7 : 1;
    ///< FW macro trigger 7 - bit 7  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="7" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_8 : 1;
    ///< FW macro trigger 7 - bit 8  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="8" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_9 : 1;
    ///< FW macro trigger 7 - bit 9  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="9" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_10 : 1;
    ///< FW macro trigger 7 - bit 10  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="10" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_11 : 1;
    ///< FW macro trigger 7 - bit 11  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="11" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_12 : 1;
    ///< FW macro trigger 7 - bit 12  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="12" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_13 : 1;
    ///< FW macro trigger 7 - bit 13  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="13" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_14 : 1;
    ///< FW macro trigger 7 - bit 14  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="14" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_15 : 1;
    ///< FW macro trigger 7 - bit 15  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="15" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_16 : 1;
    ///< FW macro trigger 7 - bit 16  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="16" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_17 : 1;
    ///< FW macro trigger 7 - bit 17  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="17" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_18 : 1;
    ///< FW macro trigger 7 - bit 18  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="18" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_19 : 1;
    ///< FW macro trigger 7 - bit 19  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="19" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_20 : 1;
    ///< FW macro trigger 7 - bit 20  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="20" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_21 : 1;
    ///< FW macro trigger 7 - bit 21  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="21" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_22 : 1;
    ///< FW macro trigger 7 - bit 22  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="22" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_23 : 1;
    ///< FW macro trigger 7 - bit 23  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="23" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_24 : 1;
    ///< FW macro trigger 7 - bit 24  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="24" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_25 : 1;
    ///< FW macro trigger 7 - bit 25  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="25" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_26 : 1;
    ///< FW macro trigger 7 - bit 26  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="26" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_27 : 1;
    ///< FW macro trigger 7 - bit 27  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="27" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_28 : 1;
    ///< FW macro trigger 7 - bit 28  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="28" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_29 : 1;
    ///< FW macro trigger 7 - bit 29  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="29" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_30 : 1;
    ///< FW macro trigger 7 - bit 30  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="30" ResetValue="0x0"
    uint32_t FW_MACRO_TRIGGER_7_31 : 1;
    ///< FW macro trigger 7 - bit 31  - SoC/Clients use these to trigger FW
    ///< functions with a HW interface
    ///< AccessType="RW/V" BitOffset="31" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_macro_trig_ctrl_7_reg_t;

#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_WR_MASK (0xffffffffU)


///< FW macro trigger 7 - bit 0  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_0_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_0_BF_MSK (0x00000001)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_0_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 1  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_1_BF_OFF ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_1_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_1_BF_MSK (0x00000002)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_1_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 2  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_2_BF_OFF ( 2)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_2_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_2_BF_MSK (0x00000004)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_2_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 3  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_3_BF_OFF ( 3)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_3_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_3_BF_MSK (0x00000008)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_3_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 4  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_4_BF_OFF ( 4)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_4_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_4_BF_MSK (0x00000010)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_4_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 5  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_5_BF_OFF ( 5)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_5_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_5_BF_MSK (0x00000020)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_5_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 6  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_6_BF_OFF ( 6)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_6_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_6_BF_MSK (0x00000040)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_6_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 7  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_BF_OFF ( 7)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_BF_MSK (0x00000080)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 8  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_8_BF_OFF ( 8)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_8_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_8_BF_MSK (0x00000100)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_8_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 9  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_9_BF_OFF ( 9)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_9_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_9_BF_MSK (0x00000200)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_9_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 10  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_10_BF_OFF (10)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_10_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_10_BF_MSK (0x00000400)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_10_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 11  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_11_BF_OFF (11)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_11_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_11_BF_MSK (0x00000800)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_11_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 12  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_12_BF_OFF (12)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_12_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_12_BF_MSK (0x00001000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_12_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 13  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_13_BF_OFF (13)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_13_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_13_BF_MSK (0x00002000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_13_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 14  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_14_BF_OFF (14)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_14_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_14_BF_MSK (0x00004000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_14_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 15  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_15_BF_OFF (15)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_15_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_15_BF_MSK (0x00008000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_15_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 16  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_16_BF_OFF (16)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_16_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_16_BF_MSK (0x00010000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_16_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 17  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_17_BF_OFF (17)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_17_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_17_BF_MSK (0x00020000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_17_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 18  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_18_BF_OFF (18)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_18_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_18_BF_MSK (0x00040000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_18_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 19  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_19_BF_OFF (19)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_19_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_19_BF_MSK (0x00080000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_19_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 20  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_20_BF_OFF (20)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_20_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_20_BF_MSK (0x00100000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_20_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 21  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_21_BF_OFF (21)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_21_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_21_BF_MSK (0x00200000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_21_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 22  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_22_BF_OFF (22)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_22_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_22_BF_MSK (0x00400000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_22_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 23  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_23_BF_OFF (23)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_23_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_23_BF_MSK (0x00800000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_23_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 24  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_24_BF_OFF (24)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_24_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_24_BF_MSK (0x01000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_24_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 25  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_25_BF_OFF (25)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_25_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_25_BF_MSK (0x02000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_25_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 26  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_26_BF_OFF (26)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_26_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_26_BF_MSK (0x04000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_26_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 27  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_27_BF_OFF (27)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_27_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_27_BF_MSK (0x08000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_27_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 28  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_28_BF_OFF (28)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_28_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_28_BF_MSK (0x10000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_28_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 29  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_29_BF_OFF (29)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_29_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_29_BF_MSK (0x20000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_29_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 30  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_30_BF_OFF (30)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_30_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_30_BF_MSK (0x40000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_30_BF_DEF (0x00000000)

///< FW macro trigger 7 - bit 31  - SoC/Clients use these to trigger FW
///< functions with a HW interface
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_31_BF_OFF (31)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_31_BF_WID ( 1)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_31_BF_MSK (0x80000000)
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_FW_MACRO_TRIG_7_31_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_TEMP_SENSE register description at address offset 0x124
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/temp_sense
  * Temperature
  */

typedef union {
  struct {
    uint32_t TEMP_SENSE : 32;
    ///< Temperature.  SoC writes the current junction temperature to this
    ///< register periodlcally
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_temp_sense_reg_t;

#define UC_TOP_MSG_TEMP_SENSE_DEFAULT (0x00000000U)
#define UC_TOP_MSG_TEMP_SENSE_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_TEMP_SENSE_WR_MASK (0xffffffffU)


///< Temperature.  SoC writes the current junction temperature to this
///< register periodlcally
#define UC_TOP_MSG_TEMP_SENSE_TEMP_SENSE_BF_OFF ( 0)
#define UC_TOP_MSG_TEMP_SENSE_TEMP_SENSE_BF_WID (32)
#define UC_TOP_MSG_TEMP_SENSE_TEMP_SENSE_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_TEMP_SENSE_TEMP_SENSE_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_AUTONEG_0 register description at address offset 0x128
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/autoneg_0
  * AutoNeg
  */

typedef union {
  struct {
    uint32_t AUTONEG_0 : 32;
    ///< Reserved for autoneg.  Not used in TC1
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_autoneg_0_reg_t;

#define UC_TOP_MSG_AUTONEG_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_AUTONEG_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_AUTONEG_0_WR_MASK (0xffffffffU)


///< Reserved for autoneg.  Not used in TC1
#define UC_TOP_MSG_AUTONEG_0_AUTONEG_0_BF_OFF ( 0)
#define UC_TOP_MSG_AUTONEG_0_AUTONEG_0_BF_WID (32)
#define UC_TOP_MSG_AUTONEG_0_AUTONEG_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_AUTONEG_0_AUTONEG_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_AUTONEG_1 register description at address offset 0x12c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/autoneg_1
  * AutoNeg
  */

typedef union {
  struct {
    uint32_t AUTONEG_1 : 32;
    ///< Reserved for autoneg.  Not used in TC1
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_autoneg_1_reg_t;

#define UC_TOP_MSG_AUTONEG_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_AUTONEG_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_AUTONEG_1_WR_MASK (0xffffffffU)


///< Reserved for autoneg.  Not used in TC1
#define UC_TOP_MSG_AUTONEG_1_AUTONEG_1_BF_OFF ( 0)
#define UC_TOP_MSG_AUTONEG_1_AUTONEG_1_BF_WID (32)
#define UC_TOP_MSG_AUTONEG_1_AUTONEG_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_AUTONEG_1_AUTONEG_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_VER_0 register description at address offset 0x130
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_ver_0
  * FW Version 0
  */

typedef union {
  struct {
    uint32_t FW_VER_0 : 32;
    ///< FW Version 0 - Registers for storing version information of the installed
    ///< FW. FW writes its version number to these registers when FW initializes
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_ver_0_reg_t;

#define UC_TOP_MSG_FW_VER_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_VER_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_VER_0_WR_MASK (0xffffffffU)


///< FW Version 0 - Registers for storing version information of the installed
///< FW. FW writes its version number to these registers when FW initializes
#define UC_TOP_MSG_FW_VER_0_FW_VER_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_VER_0_FW_VER_0_BF_WID (32)
#define UC_TOP_MSG_FW_VER_0_FW_VER_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_VER_0_FW_VER_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_VER_1 register description at address offset 0x134
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_ver_1
  * FW Version 1
  */

typedef union {
  struct {
    uint32_t FW_VER_1 : 32;
    ///< FW Version 1 - Registers for storing version information of the installed
    ///< FW. FW writes its version number to these registers when FW initializes
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_ver_1_reg_t;

#define UC_TOP_MSG_FW_VER_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_VER_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_VER_1_WR_MASK (0xffffffffU)


///< FW Version 1 - Registers for storing version information of the installed
///< FW. FW writes its version number to these registers when FW initializes
#define UC_TOP_MSG_FW_VER_1_FW_VER_1_BF_OFF ( 0)
#define UC_TOP_MSG_FW_VER_1_FW_VER_1_BF_WID (32)
#define UC_TOP_MSG_FW_VER_1_FW_VER_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_VER_1_FW_VER_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_VER_2 register description at address offset 0x138
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_ver_2
  * FW Version 2
  */

typedef union {
  struct {
    uint32_t FW_VER_2 : 32;
    ///< FW Version 2 - Registers for storing version information of the installed
    ///< FW. FW writes its version number to these registers when FW initializes
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_ver_2_reg_t;

#define UC_TOP_MSG_FW_VER_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_VER_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_VER_2_WR_MASK (0xffffffffU)


///< FW Version 2 - Registers for storing version information of the installed
///< FW. FW writes its version number to these registers when FW initializes
#define UC_TOP_MSG_FW_VER_2_FW_VER_2_BF_OFF ( 0)
#define UC_TOP_MSG_FW_VER_2_FW_VER_2_BF_WID (32)
#define UC_TOP_MSG_FW_VER_2_FW_VER_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_VER_2_FW_VER_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_VER_3 register description at address offset 0x13c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_ver_3
  * FW Version 3
  */

typedef union {
  struct {
    uint32_t FW_VER_3 : 32;
    ///< FW Version 3 - Registers for storing version information of the installed
    ///< FW. FW writes its version number to these registers when FW initializes
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_ver_3_reg_t;

#define UC_TOP_MSG_FW_VER_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_VER_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_VER_3_WR_MASK (0xffffffffU)


///< FW Version 3 - Registers for storing version information of the installed
///< FW. FW writes its version number to these registers when FW initializes
#define UC_TOP_MSG_FW_VER_3_FW_VER_3_BF_OFF ( 0)
#define UC_TOP_MSG_FW_VER_3_FW_VER_3_BF_WID (32)
#define UC_TOP_MSG_FW_VER_3_FW_VER_3_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_VER_3_FW_VER_3_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_TIMEBASE register description at address offset 0x140
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_timebase
  * FW Time Base
  */

typedef union {
  struct {
    uint32_t FW_TIMEBASE : 32;
    ///< Register contains the period of the current source clock for the uC
    ///< core.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_timebase_reg_t;

#define UC_TOP_MSG_FW_TIMEBASE_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_TIMEBASE_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_TIMEBASE_WR_MASK (0xffffffffU)


///< Register contains the period of the current source clock for the uC
///< core.
#define UC_TOP_MSG_FW_TIMEBASE_FW_TIMEBASE_BF_OFF ( 0)
#define UC_TOP_MSG_FW_TIMEBASE_FW_TIMEBASE_BF_WID (32)
#define UC_TOP_MSG_FW_TIMEBASE_FW_TIMEBASE_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_TIMEBASE_FW_TIMEBASE_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_RATE_LIMIT_LANE_0 register description at address offset 0x144
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_rate_limit_lane_0
  * Rate Limit Lane 0
  */

typedef union {
  struct {
    uint32_t FW_RATE_LIMIT_LANE_0 : 32;
    ///< Rate Limit Lane 0 - 8b for each TX and RX, 2 lanes per register. See
    ///< ?SerDes Capability Control?. Can also be programmed by SoC with the
    ///< Fuse Controller.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_rate_limit_lane_0_reg_t;

#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_WR_MASK (0xffffffffU)


///< Rate Limit Lane 0 - 8b for each TX and RX, 2 lanes per register. See
///< ?SerDes Capability Control?. Can also be programmed by SoC with the
///< Fuse Controller.
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_FW_RATE_LIMIT_LANE_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_FW_RATE_LIMIT_LANE_0_BF_WID (32)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_FW_RATE_LIMIT_LANE_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_FW_RATE_LIMIT_LANE_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_RATE_LIMIT_LANE_1 register description at address offset 0x148
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_rate_limit_lane_1
  * Rate Limit Lane 1
  */

typedef union {
  struct {
    uint32_t FW_RATE_LIMIT_LANE_1 : 32;
    ///< Rate Limit Lane 1 - 8b for each TX and RX, 2 lanes per register. See
    ///< ?SerDes Capability Control?. Can also be programmed by SoC with the
    ///< Fuse Controller.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_rate_limit_lane_1_reg_t;

#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_WR_MASK (0xffffffffU)


///< Rate Limit Lane 1 - 8b for each TX and RX, 2 lanes per register. See
///< ?SerDes Capability Control?. Can also be programmed by SoC with the
///< Fuse Controller.
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_FW_RATE_LIMIT_LANE_1_BF_OFF ( 0)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_FW_RATE_LIMIT_LANE_1_BF_WID (32)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_FW_RATE_LIMIT_LANE_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_FW_RATE_LIMIT_LANE_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_RATE_LIMIT_LANE_2 register description at address offset 0x14c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_rate_limit_lane_2
  * Rate Limit Lane 2
  */

typedef union {
  struct {
    uint32_t FW_RATE_LIMIT_LANE_2 : 32;
    ///< Rate Limit Lane 2 - 8b for each TX and RX, 2 lanes per register. See
    ///< ?SerDes Capability Control?. Can also be programmed by SoC with the
    ///< Fuse Controller.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_rate_limit_lane_2_reg_t;

#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_WR_MASK (0xffffffffU)


///< Rate Limit Lane 2 - 8b for each TX and RX, 2 lanes per register. See
///< ?SerDes Capability Control?. Can also be programmed by SoC with the
///< Fuse Controller.
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_FW_RATE_LIMIT_LANE_2_BF_OFF ( 0)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_FW_RATE_LIMIT_LANE_2_BF_WID (32)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_FW_RATE_LIMIT_LANE_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_FW_RATE_LIMIT_LANE_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_RATE_LIMIT_LANE_3 register description at address offset 0x150
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_rate_limit_lane_3
  * Rate Limit Lane 3
  */

typedef union {
  struct {
    uint32_t FW_RATE_LIMIT_LANE_3 : 32;
    ///< Rate Limit Lane 3 - 8b for each TX and RX, 2 lanes per register. See
    ///< ?SerDes Capability Control?. Can also be programmed by SoC with the
    ///< Fuse Controller.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_rate_limit_lane_3_reg_t;

#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_WR_MASK (0xffffffffU)


///< Rate Limit Lane 3 - 8b for each TX and RX, 2 lanes per register. See
///< ?SerDes Capability Control?. Can also be programmed by SoC with the
///< Fuse Controller.
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_FW_RATE_LIMIT_LANE_3_BF_OFF ( 0)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_FW_RATE_LIMIT_LANE_3_BF_WID (32)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_FW_RATE_LIMIT_LANE_3_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_FW_RATE_LIMIT_LANE_3_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_REF_CLK_FREQ_0 register description at address offset 0x154
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_ref_clk_freq_0
  * FW Reference Clock 0
  */

typedef union {
  struct {
    uint32_t FW_REF_CLK_FREQ_0 : 32;
    ///< FW Reference Clock 0 - Reference clock frequency for each of the 4
    ///< reference clock frequency sources to XMP. The 32b value for each register
    ///< contains the reference clock frequency exactly in Hz.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_ref_clk_freq_0_reg_t;

#define UC_TOP_MSG_FW_REF_CLK_FREQ_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_0_WR_MASK (0xffffffffU)


///< FW Reference Clock 0 - Reference clock frequency for each of the 4
///< reference clock frequency sources to XMP. The 32b value for each register
///< contains the reference clock frequency exactly in Hz.
#define UC_TOP_MSG_FW_REF_CLK_FREQ_0_FW_REF_CLK_FREQ_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_0_FW_REF_CLK_FREQ_0_BF_WID (32)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_0_FW_REF_CLK_FREQ_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_0_FW_REF_CLK_FREQ_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_REF_CLK_FREQ_1 register description at address offset 0x158
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_ref_clk_freq_1
  * FW Reference Clock 1
  */

typedef union {
  struct {
    uint32_t FW_REF_CLK_FREQ_1 : 32;
    ///< FW Reference Clock 1 - Reference clock frequency for each of the 4
    ///< reference clock frequency sources to XMP. The 32b value for each register
    ///< contains the reference clock frequency exactly in Hz.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_ref_clk_freq_1_reg_t;

#define UC_TOP_MSG_FW_REF_CLK_FREQ_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_1_WR_MASK (0xffffffffU)


///< FW Reference Clock 1 - Reference clock frequency for each of the 4
///< reference clock frequency sources to XMP. The 32b value for each register
///< contains the reference clock frequency exactly in Hz.
#define UC_TOP_MSG_FW_REF_CLK_FREQ_1_FW_REF_CLK_FREQ_1_BF_OFF ( 0)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_1_FW_REF_CLK_FREQ_1_BF_WID (32)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_1_FW_REF_CLK_FREQ_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_1_FW_REF_CLK_FREQ_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_REF_CLK_FREQ_2 register description at address offset 0x15c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_ref_clk_freq_2
  * FW Reference Clock 2
  */

typedef union {
  struct {
    uint32_t FW_REF_CLK_FREQ_2 : 32;
    ///< FW Reference Clock 2 - Reference clock frequency for each of the 4
    ///< reference clock frequency sources to XMP. The 32b value for each register
    ///< contains the reference clock frequency exactly in Hz.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_ref_clk_freq_2_reg_t;

#define UC_TOP_MSG_FW_REF_CLK_FREQ_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_2_WR_MASK (0xffffffffU)


///< FW Reference Clock 2 - Reference clock frequency for each of the 4
///< reference clock frequency sources to XMP. The 32b value for each register
///< contains the reference clock frequency exactly in Hz.
#define UC_TOP_MSG_FW_REF_CLK_FREQ_2_FW_REF_CLK_FREQ_2_BF_OFF ( 0)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_2_FW_REF_CLK_FREQ_2_BF_WID (32)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_2_FW_REF_CLK_FREQ_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_2_FW_REF_CLK_FREQ_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_REF_CLK_FREQ_3 register description at address offset 0x160
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_ref_clk_freq_3
  * FW Reference Clock 3
  */

typedef union {
  struct {
    uint32_t FW_REF_CLK_FREQ_3 : 32;
    ///< FW Reference Clock 3 - Reference clock frequency for each of the 4
    ///< reference clock frequency sources to XMP. The 32b value for each register
    ///< contains the reference clock frequency exactly in Hz.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_ref_clk_freq_3_reg_t;

#define UC_TOP_MSG_FW_REF_CLK_FREQ_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_3_WR_MASK (0xffffffffU)


///< FW Reference Clock 3 - Reference clock frequency for each of the 4
///< reference clock frequency sources to XMP. The 32b value for each register
///< contains the reference clock frequency exactly in Hz.
#define UC_TOP_MSG_FW_REF_CLK_FREQ_3_FW_REF_CLK_FREQ_3_BF_OFF ( 0)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_3_FW_REF_CLK_FREQ_3_BF_WID (32)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_3_FW_REF_CLK_FREQ_3_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_REF_CLK_FREQ_3_FW_REF_CLK_FREQ_3_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_FUSE_0 register description at address offset 0x164
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_fuse_0
  * Fuse Values 0
  */

typedef union {
  struct {
    uint32_t FW_FUSE_0 : 32;
    ///< Fuse Values 0 - Registers reserved for use by SoC Fuse Controller
    ///< to pass information to XMP. To be used for XMP capability control
    ///< (lane?s enabled, PLL?s enabled, etc.). FW defines the use of these
    ///< bits.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_fuse_0_reg_t;

#define UC_TOP_MSG_FW_FUSE_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_FUSE_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_FUSE_0_WR_MASK (0xffffffffU)


///< Fuse Values 0 - Registers reserved for use by SoC Fuse Controller
///< to pass information to XMP. To be used for XMP capability control
///< (lane?s enabled, PLL?s enabled, etc.). FW defines the use of these
///< bits.
#define UC_TOP_MSG_FW_FUSE_0_FW_FUSE_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_FUSE_0_FW_FUSE_0_BF_WID (32)
#define UC_TOP_MSG_FW_FUSE_0_FW_FUSE_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_FUSE_0_FW_FUSE_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_FUSE_1 register description at address offset 0x168
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_fuse_1
  * Fuse Values 1
  */

typedef union {
  struct {
    uint32_t FW_FUSE_1 : 32;
    ///< Fuse Values 1 - Registers reserved for use by SoC Fuse Controller
    ///< to pass information to XMP. To be used for XMP capability control
    ///< (lane?s enabled, PLL?s enabled, etc.). FW defines the use of these
    ///< bits.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_fuse_1_reg_t;

#define UC_TOP_MSG_FW_FUSE_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_FUSE_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_FUSE_1_WR_MASK (0xffffffffU)


///< Fuse Values 1 - Registers reserved for use by SoC Fuse Controller
///< to pass information to XMP. To be used for XMP capability control
///< (lane?s enabled, PLL?s enabled, etc.). FW defines the use of these
///< bits.
#define UC_TOP_MSG_FW_FUSE_1_FW_FUSE_1_BF_OFF ( 0)
#define UC_TOP_MSG_FW_FUSE_1_FW_FUSE_1_BF_WID (32)
#define UC_TOP_MSG_FW_FUSE_1_FW_FUSE_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_FUSE_1_FW_FUSE_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_FUSE_2 register description at address offset 0x16c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_fuse_2
  * Fuse Values 2
  */

typedef union {
  struct {
    uint32_t FW_FUSE_2 : 32;
    ///< Fuse Values 2 - Registers reserved for use by SoC Fuse Controller
    ///< to pass information to XMP. To be used for XMP capability control
    ///< (lane?s enabled, PLL?s enabled, etc.). FW defines the use of these
    ///< bits.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_fuse_2_reg_t;

#define UC_TOP_MSG_FW_FUSE_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_FUSE_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_FUSE_2_WR_MASK (0xffffffffU)


///< Fuse Values 2 - Registers reserved for use by SoC Fuse Controller
///< to pass information to XMP. To be used for XMP capability control
///< (lane?s enabled, PLL?s enabled, etc.). FW defines the use of these
///< bits.
#define UC_TOP_MSG_FW_FUSE_2_FW_FUSE_2_BF_OFF ( 0)
#define UC_TOP_MSG_FW_FUSE_2_FW_FUSE_2_BF_WID (32)
#define UC_TOP_MSG_FW_FUSE_2_FW_FUSE_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_FUSE_2_FW_FUSE_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_FUSE_3 register description at address offset 0x170
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_fuse_3
  * Fuse Values 3
  */

typedef union {
  struct {
    uint32_t FW_FUSE_3 : 32;
    ///< Fuse Values 3 - Registers reserved for use by SoC Fuse Controller
    ///< to pass information to XMP. To be used for XMP capability control
    ///< (lane?s enabled, PLL?s enabled, etc.). FW defines the use of these
    ///< bits.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_fuse_3_reg_t;

#define UC_TOP_MSG_FW_FUSE_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_FUSE_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_FUSE_3_WR_MASK (0xffffffffU)


///< Fuse Values 3 - Registers reserved for use by SoC Fuse Controller
///< to pass information to XMP. To be used for XMP capability control
///< (lane?s enabled, PLL?s enabled, etc.). FW defines the use of these
///< bits.
#define UC_TOP_MSG_FW_FUSE_3_FW_FUSE_3_BF_OFF ( 0)
#define UC_TOP_MSG_FW_FUSE_3_FW_FUSE_3_BF_WID (32)
#define UC_TOP_MSG_FW_FUSE_3_FW_FUSE_3_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_FUSE_3_FW_FUSE_3_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_CORE_STATUS_0 register description at address offset 0x174
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_core_status_0
  * CPU Status 0
  */

typedef union {
  struct {
    uint32_t FW_CORE_STATUS_0 : 32;
    ///< CPU Status 0 - Registers show the current state of the uC CPU
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_core_stat_0_reg_t;

#define UC_TOP_MSG_FW_CORE_STAT_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_CORE_STAT_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_CORE_STAT_0_WR_MASK (0xffffffffU)


///< CPU Status 0 - Registers show the current state of the uC CPU
#define UC_TOP_MSG_FW_CORE_STAT_0_FW_CORE_STAT_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_CORE_STAT_0_FW_CORE_STAT_0_BF_WID (32)
#define UC_TOP_MSG_FW_CORE_STAT_0_FW_CORE_STAT_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_CORE_STAT_0_FW_CORE_STAT_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_CORE_STATUS_1 register description at address offset 0x178
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_core_status_1
  * CPU Status 1
  */

typedef union {
  struct {
    uint32_t FW_CORE_STATUS_1 : 32;
    ///< CPU Status 1 - Registers show the current state of the uC CPU
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_core_stat_1_reg_t;

#define UC_TOP_MSG_FW_CORE_STAT_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_CORE_STAT_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_CORE_STAT_1_WR_MASK (0xffffffffU)


///< CPU Status 1 - Registers show the current state of the uC CPU
#define UC_TOP_MSG_FW_CORE_STAT_1_FW_CORE_STAT_1_BF_OFF ( 0)
#define UC_TOP_MSG_FW_CORE_STAT_1_FW_CORE_STAT_1_BF_WID (32)
#define UC_TOP_MSG_FW_CORE_STAT_1_FW_CORE_STAT_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_CORE_STAT_1_FW_CORE_STAT_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_CORE_STATUS_2 register description at address offset 0x17c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_core_status_2
  * CPU Status 2
  */

typedef union {
  struct {
    uint32_t FW_CORE_STATUS_2 : 32;
    ///< CPU Status 2 - Registers show the current state of the uC CPU
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_core_stat_2_reg_t;

#define UC_TOP_MSG_FW_CORE_STAT_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_CORE_STAT_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_CORE_STAT_2_WR_MASK (0xffffffffU)


///< CPU Status 2 - Registers show the current state of the uC CPU
#define UC_TOP_MSG_FW_CORE_STAT_2_FW_CORE_STAT_2_BF_OFF ( 0)
#define UC_TOP_MSG_FW_CORE_STAT_2_FW_CORE_STAT_2_BF_WID (32)
#define UC_TOP_MSG_FW_CORE_STAT_2_FW_CORE_STAT_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_CORE_STAT_2_FW_CORE_STAT_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_SPARE_0 register description at address offset 0x180
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_spare_0
  * FW Spare 0
  */

typedef union {
  struct {
    uint32_t FW_SPARE_0 : 32;
    ///< FW Spare Registers
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_spare_0_reg_t;

#define UC_TOP_MSG_FW_SPARE_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_SPARE_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_SPARE_0_WR_MASK (0xffffffffU)


///< FW Spare Registers
#define UC_TOP_MSG_FW_SPARE_0_FW_SPARE_0_BF_OFF ( 0)
#define UC_TOP_MSG_FW_SPARE_0_FW_SPARE_0_BF_WID (32)
#define UC_TOP_MSG_FW_SPARE_0_FW_SPARE_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_SPARE_0_FW_SPARE_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_SPARE_1 register description at address offset 0x184
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_spare_1
  * FW Spare 1
  */

typedef union {
  struct {
    uint32_t FW_SPARE_1 : 32;
    ///< FW Spare Registers
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_spare_1_reg_t;

#define UC_TOP_MSG_FW_SPARE_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_SPARE_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_SPARE_1_WR_MASK (0xffffffffU)


///< FW Spare Registers
#define UC_TOP_MSG_FW_SPARE_1_FW_SPARE_1_BF_OFF ( 0)
#define UC_TOP_MSG_FW_SPARE_1_FW_SPARE_1_BF_WID (32)
#define UC_TOP_MSG_FW_SPARE_1_FW_SPARE_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_SPARE_1_FW_SPARE_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_SPARE_2 register description at address offset 0x188
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_spare_2
  * FW Spare 2
  */

typedef union {
  struct {
    uint32_t FW_SPARE_2 : 32;
    ///< FW Spare Registers
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_spare_2_reg_t;

#define UC_TOP_MSG_FW_SPARE_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_SPARE_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_SPARE_2_WR_MASK (0xffffffffU)


///< FW Spare Registers
#define UC_TOP_MSG_FW_SPARE_2_FW_SPARE_2_BF_OFF ( 0)
#define UC_TOP_MSG_FW_SPARE_2_FW_SPARE_2_BF_WID (32)
#define UC_TOP_MSG_FW_SPARE_2_FW_SPARE_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_SPARE_2_FW_SPARE_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_SPARE_3 register description at address offset 0x18c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_spare_3
  * FW Spare 3
  */

typedef union {
  struct {
    uint32_t FW_SPARE_3 : 32;
    ///< FW Spare Registers
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_spare_3_reg_t;

#define UC_TOP_MSG_FW_SPARE_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_SPARE_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_SPARE_3_WR_MASK (0xffffffffU)


///< FW Spare Registers
#define UC_TOP_MSG_FW_SPARE_3_FW_SPARE_3_BF_OFF ( 0)
#define UC_TOP_MSG_FW_SPARE_3_FW_SPARE_3_BF_WID (32)
#define UC_TOP_MSG_FW_SPARE_3_FW_SPARE_3_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_SPARE_3_FW_SPARE_3_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_SPARE_4 register description at address offset 0x190
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_spare_4
  * FW Spare 4
  */

typedef union {
  struct {
    uint32_t FW_SPARE_4 : 32;
    ///< FW Spare Registers
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_spare_4_reg_t;

#define UC_TOP_MSG_FW_SPARE_4_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_SPARE_4_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_SPARE_4_WR_MASK (0xffffffffU)


///< FW Spare Registers
#define UC_TOP_MSG_FW_SPARE_4_FW_SPARE_4_BF_OFF ( 0)
#define UC_TOP_MSG_FW_SPARE_4_FW_SPARE_4_BF_WID (32)
#define UC_TOP_MSG_FW_SPARE_4_FW_SPARE_4_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_SPARE_4_FW_SPARE_4_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_SPARE_5 register description at address offset 0x194
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_spare_5
  * FW Spare 5
  */

typedef union {
  struct {
    uint32_t FW_SPARE_5 : 32;
    ///< FW Spare Registers
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_spare_5_reg_t;

#define UC_TOP_MSG_FW_SPARE_5_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_SPARE_5_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_SPARE_5_WR_MASK (0xffffffffU)


///< FW Spare Registers
#define UC_TOP_MSG_FW_SPARE_5_FW_SPARE_5_BF_OFF ( 0)
#define UC_TOP_MSG_FW_SPARE_5_FW_SPARE_5_BF_WID (32)
#define UC_TOP_MSG_FW_SPARE_5_FW_SPARE_5_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_SPARE_5_FW_SPARE_5_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_SPARE_6 register description at address offset 0x198
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_spare_6
  * FW Spare 6
  */

typedef union {
  struct {
    uint32_t FW_SPARE_6 : 32;
    ///< FW Spare Registers
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_spare_6_reg_t;

#define UC_TOP_MSG_FW_SPARE_6_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_SPARE_6_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_SPARE_6_WR_MASK (0xffffffffU)


///< FW Spare Registers
#define UC_TOP_MSG_FW_SPARE_6_FW_SPARE_6_BF_OFF ( 0)
#define UC_TOP_MSG_FW_SPARE_6_FW_SPARE_6_BF_WID (32)
#define UC_TOP_MSG_FW_SPARE_6_FW_SPARE_6_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_SPARE_6_FW_SPARE_6_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_FW_SPARE_7 register description at address offset 0x19c
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/fw_spare_7
  * FW Spare 7
  */

typedef union {
  struct {
    uint32_t FW_SPARE_7 : 32;
    ///< FW Spare Registers
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_fw_spare_7_reg_t;

#define UC_TOP_MSG_FW_SPARE_7_DEFAULT (0x00000000U)
#define UC_TOP_MSG_FW_SPARE_7_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_FW_SPARE_7_WR_MASK (0xffffffffU)


///< FW Spare Registers
#define UC_TOP_MSG_FW_SPARE_7_FW_SPARE_7_BF_OFF ( 0)
#define UC_TOP_MSG_FW_SPARE_7_FW_SPARE_7_BF_WID (32)
#define UC_TOP_MSG_FW_SPARE_7_FW_SPARE_7_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_FW_SPARE_7_FW_SPARE_7_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_SPARE_PORT_OVERRIDE_CTRL register description at address offset 0x1a0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/spare_port_override_ctrl
  * Spare Port Overide
  */

typedef union {
  struct {
    uint32_t SPAREINPORT_LOCOVREN : 1;
    ///< Spare Input Port override enable
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t SPAREOUTPORT_LOCOVREN : 1;
    ///< Spare Output Port override enable
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_spare_port_ovrd_ctrl_reg_t;

#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_DEFAULT (0x00000000U)
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_RD_MASK (0x00000003U)
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_WR_MASK (0x00000003U)


///< Spare Input Port override enable
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_SPAREINPORT_LOCOVREN_BF_OFF ( 0)
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_SPAREINPORT_LOCOVREN_BF_WID ( 1)
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_SPAREINPORT_LOCOVREN_BF_MSK (0x00000001)
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_SPAREINPORT_LOCOVREN_BF_DEF (0x00000000)

///< Spare Output Port override enable
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_SPAREOUTPORT_LOCOVREN_BF_OFF ( 1)
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_SPAREOUTPORT_LOCOVREN_BF_WID ( 1)
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_SPAREOUTPORT_LOCOVREN_BF_MSK (0x00000002)
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_SPAREOUTPORT_LOCOVREN_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_SPARE_PORT_OVERRIDE_0 register description at address offset 0x1a4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/spare_port_override_0
  * Spare Port Overide
  */

typedef union {
  struct {
    uint32_t SPAREINPORT_LOCOVR : 32;
    ///< Spare Input Port override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_spare_port_ovrd_0_reg_t;

#define UC_TOP_MSG_SPARE_PORT_OVRD_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_SPARE_PORT_OVRD_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_SPARE_PORT_OVRD_0_WR_MASK (0xffffffffU)


///< Spare Input Port override
#define UC_TOP_MSG_SPARE_PORT_OVRD_0_SPAREINPORT_LOCOVR_BF_OFF ( 0)
#define UC_TOP_MSG_SPARE_PORT_OVRD_0_SPAREINPORT_LOCOVR_BF_WID (32)
#define UC_TOP_MSG_SPARE_PORT_OVRD_0_SPAREINPORT_LOCOVR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_SPARE_PORT_OVRD_0_SPAREINPORT_LOCOVR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_SPARE_PORT_OVERRIDE_1 register description at address offset 0x1a8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/spare_port_override_1
  * Spare Port Overide
  */

typedef union {
  struct {
    uint32_t SPAREOUTPORT_LOCOVR : 32;
    ///< Spare Output Port override
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_spare_port_ovrd_1_reg_t;

#define UC_TOP_MSG_SPARE_PORT_OVRD_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_SPARE_PORT_OVRD_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_SPARE_PORT_OVRD_1_WR_MASK (0xffffffffU)


///< Spare Output Port override
#define UC_TOP_MSG_SPARE_PORT_OVRD_1_SPAREOUTPORT_LOCOVR_BF_OFF ( 0)
#define UC_TOP_MSG_SPARE_PORT_OVRD_1_SPAREOUTPORT_LOCOVR_BF_WID (32)
#define UC_TOP_MSG_SPARE_PORT_OVRD_1_SPAREOUTPORT_LOCOVR_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_SPARE_PORT_OVRD_1_SPAREOUTPORT_LOCOVR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_SPARE_PORT_PREOVERRIDE_0 register description at address offset 0x1ac
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/spare_port_preoverride_0
  * Spare Port Overide
  */

typedef union {
  struct {
    uint32_t SPAREINPORT_LOC : 32;
    ///< Spare Input Port pre-override
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_spare_port_preovrd_0_reg_t;

#define UC_TOP_MSG_SPARE_PORT_PREOVRD_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_0_WR_MASK (0x00000000U)


///< Spare Input Port pre-override
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_0_SPAREINPORT_LOC_BF_OFF ( 0)
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_0_SPAREINPORT_LOC_BF_WID (32)
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_0_SPAREINPORT_LOC_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_0_SPAREINPORT_LOC_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_SPARE_PORT_PREOVERRIDE_1 register description at address offset 0x1b0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/spare_port_preoverride_1
  * Spare Port Overide
  */

typedef union {
  struct {
    uint32_t SPAREOUTPORT_LOC : 32;
    ///< Spare Output Port pre-override
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_spare_port_preovrd_1_reg_t;

#define UC_TOP_MSG_SPARE_PORT_PREOVRD_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_1_WR_MASK (0x00000000U)


///< Spare Output Port pre-override
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_1_SPAREOUTPORT_LOC_BF_OFF ( 0)
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_1_SPAREOUTPORT_LOC_BF_WID (32)
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_1_SPAREOUTPORT_LOC_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_1_SPAREOUTPORT_LOC_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_TESTBUS_CFG_0 register description at address offset 0x1b4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_testbus_cfg_0
  * Cmn-Synth testbus configuration
  */

typedef union {
  struct {
    uint32_t UC_TSTBUS_RST_OVREN : 1;
    ///< UC testbus reset override enable
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t UC_TSTBUS_RST_OVR_B : 1;
    ///< UC testbus reset override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
    uint32_t UC_PERFMON_EN : 1;
    ///< UC performance monitor enable
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
    uint32_t UC_PERFMON_COMPARE_VAL_START : 8;
    ///< UC performance monitor compare value stop  Set 1 to stop the monitor
    ///< comparsion
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t UC_PERFMON_COMPARE_VAL_STOP : 8;
    ///< UC performance monitor compare value start.  Set 1 to start the monitor
    ///< comparsion
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t UC_PERFMON_MASK : 8;
    ///< UC performance monitor mask
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_testbus_cfg_0_reg_t;

#define UC_TOP_MSG_UC_TESTBUS_CFG_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_RD_MASK (0xffffff13U)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_WR_MASK (0xffffff13U)


///< UC testbus reset override enable
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_TSTBUS_RST_OVREN_BF_OFF ( 0)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_TSTBUS_RST_OVREN_BF_WID ( 1)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_TSTBUS_RST_OVREN_BF_MSK (0x00000001)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_TSTBUS_RST_OVREN_BF_DEF (0x00000000)

///< UC testbus reset override
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_TSTBUS_RST_OVR_B_BF_OFF ( 1)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_TSTBUS_RST_OVR_B_BF_WID ( 1)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_TSTBUS_RST_OVR_B_BF_MSK (0x00000002)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_TSTBUS_RST_OVR_B_BF_DEF (0x00000000)

///< UC performance monitor enable
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_EN_BF_OFF ( 4)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_EN_BF_WID ( 1)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_EN_BF_MSK (0x00000010)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_EN_BF_DEF (0x00000000)

///< UC performance monitor compare value stop  Set 1 to stop the monitor
///< comparsion
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_CMP_VAL_START_BF_OFF ( 8)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_CMP_VAL_START_BF_WID ( 8)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_CMP_VAL_START_BF_MSK (0x0000FF00)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_CMP_VAL_START_BF_DEF (0x00000000)

///< UC performance monitor compare value start.  Set 1 to start the monitor
///< comparsion
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_CMP_VAL_STOP_BF_OFF (16)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_CMP_VAL_STOP_BF_WID ( 8)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_CMP_VAL_STOP_BF_MSK (0x00FF0000)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_CMP_VAL_STOP_BF_DEF (0x00000000)

///< UC performance monitor mask
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_MASK_BF_OFF (24)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_MASK_BF_WID ( 8)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_MASK_BF_MSK (0xFF000000)
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_UC_PERFMON_MASK_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_TESTBUS_CFG_1 register description at address offset 0x1b8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_testbus_cfg_1
  * Cmn-Synth testbus configuration
  */

typedef union {
  struct {
    uint32_t UC_TSTBUS_ADDR : 8;
    ///< UC Testbus bundle select.  Each testbus bundle is a 8bit bus
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_uc_testbus_cfg_1_reg_t;

#define UC_TOP_MSG_UC_TESTBUS_CFG_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_TESTBUS_CFG_1_RD_MASK (0x000000ffU)
#define UC_TOP_MSG_UC_TESTBUS_CFG_1_WR_MASK (0x000000ffU)


///< UC Testbus bundle select.  Each testbus bundle is a 8bit bus
#define UC_TOP_MSG_UC_TESTBUS_CFG_1_UC_TSTBUS_ADDR_BF_OFF ( 0)
#define UC_TOP_MSG_UC_TESTBUS_CFG_1_UC_TSTBUS_ADDR_BF_WID ( 8)
#define UC_TOP_MSG_UC_TESTBUS_CFG_1_UC_TSTBUS_ADDR_BF_MSK (0x000000FF)
#define UC_TOP_MSG_UC_TESTBUS_CFG_1_UC_TSTBUS_ADDR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_TESTBUS_STATUS_0 register description at address offset 0x1bc
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_testbus_status_0
  * Cmn-Synth testbus status
  */

typedef union {
  struct {
    uint32_t UC_TSTBUS_VALUE : 8;
    ///< UC testbus value
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t UC_PERFMON_DONE : 1;
    ///< This indicates the perfermance monitor has completed the comparsio
    ///< AccessType="RO/V" BitOffset="8" ResetValue="0x0"
    uint32_t  : 23;
    ///< Reserved
    ///< AccessType="RO" BitOffset="9" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_uc_testbus_stat_0_reg_t;

#define UC_TOP_MSG_UC_TESTBUS_STAT_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_RD_MASK (0x000001ffU)
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_WR_MASK (0x00000000U)


///< UC testbus value
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_UC_TSTBUS_VAL_BF_OFF ( 0)
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_UC_TSTBUS_VAL_BF_WID ( 8)
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_UC_TSTBUS_VAL_BF_MSK (0x000000FF)
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_UC_TSTBUS_VAL_BF_DEF (0x00000000)

///< This indicates the perfermance monitor has completed the comparsio
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_UC_PERFMON_DONE_BF_OFF ( 8)
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_UC_PERFMON_DONE_BF_WID ( 1)
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_UC_PERFMON_DONE_BF_MSK (0x00000100)
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_UC_PERFMON_DONE_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_TESTBUS_STATUS_1 register description at address offset 0x1c0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_testbus_status_1
  * Lane testbus status
  */

typedef union {
  struct {
    uint32_t UC_PERFMON_EVENT_TIME : 32;
    ///< UC perfermance monitor event time. Indicate how many occurances of
    ///< the observed signal(s)
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_testbus_stat_1_reg_t;

#define UC_TOP_MSG_UC_TESTBUS_STAT_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_TESTBUS_STAT_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_TESTBUS_STAT_1_WR_MASK (0x00000000U)


///< UC perfermance monitor event time. Indicate how many occurances of
///< the observed signal(s)
#define UC_TOP_MSG_UC_TESTBUS_STAT_1_UC_PERFMON_EVENT_TIME_BF_OFF ( 0)
#define UC_TOP_MSG_UC_TESTBUS_STAT_1_UC_PERFMON_EVENT_TIME_BF_WID (32)
#define UC_TOP_MSG_UC_TESTBUS_STAT_1_UC_PERFMON_EVENT_TIME_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_TESTBUS_STAT_1_UC_PERFMON_EVENT_TIME_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_APB_CTRL register description at address offset 0x1c4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/apb_ctrl
  * APB Control
  */

typedef union {
  struct {
    uint32_t APB_LATENCY_MEASURE_EN : 1;
    ///< Enable APB latency measurment
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t APB_PSTATUS_CLEAR : 1;
    ///< To clear the apb_pstatus RO register
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t BIT_MASKING_DISABLE_PCS : 1;
    ///< Bit Masking Disable for PCS Slave
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_apb_ctrl_reg_t;

#define UC_TOP_MSG_APB_CTRL_DEFAULT (0x00000000U)
#define UC_TOP_MSG_APB_CTRL_RD_MASK (0x00000007U)
#define UC_TOP_MSG_APB_CTRL_WR_MASK (0x00000007U)


///< Enable APB latency measurment
#define UC_TOP_MSG_APB_CTRL_APB_LATENCY_MEAS_EN_BF_OFF ( 0)
#define UC_TOP_MSG_APB_CTRL_APB_LATENCY_MEAS_EN_BF_WID ( 1)
#define UC_TOP_MSG_APB_CTRL_APB_LATENCY_MEAS_EN_BF_MSK (0x00000001)
#define UC_TOP_MSG_APB_CTRL_APB_LATENCY_MEAS_EN_BF_DEF (0x00000000)

///< To clear the apb_pstatus RO register
#define UC_TOP_MSG_APB_CTRL_APB_PSTAT_CLR_BF_OFF ( 1)
#define UC_TOP_MSG_APB_CTRL_APB_PSTAT_CLR_BF_WID ( 1)
#define UC_TOP_MSG_APB_CTRL_APB_PSTAT_CLR_BF_MSK (0x00000002)
#define UC_TOP_MSG_APB_CTRL_APB_PSTAT_CLR_BF_DEF (0x00000000)

///< Bit Masking Disable for PCS Slave
#define UC_TOP_MSG_APB_CTRL_BIT_MASKING_DIS_PCS_BF_OFF ( 2)
#define UC_TOP_MSG_APB_CTRL_BIT_MASKING_DIS_PCS_BF_WID ( 1)
#define UC_TOP_MSG_APB_CTRL_BIT_MASKING_DIS_PCS_BF_MSK (0x00000004)
#define UC_TOP_MSG_APB_CTRL_BIT_MASKING_DIS_PCS_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_APB_STATUS register description at address offset 0x1c8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/apb_status
  * APB Status
  */

typedef union {
  struct {
    uint32_t APB_LATENCY_MEASURE_RESULT : 15;
    ///< Report the largest latency since apb latency measurment block is enabled.
    ///< The result will be cleared when the measrument block is disabled
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t APB_WDT_RUN : 1;
    ///< To indicate is the APB watch dog timer has been turned on
    ///< AccessType="RO/V" BitOffset="15" ResetValue="0x0"
    uint32_t APB_PSTATUS : 4;
    ///< To indicate the last apb transcation status.
    ///< Bit 0: Security miss
    ///< Bit 1: Address miss
    ///< Bit 2: General AHB error
    ///< Bit 3: Timeout
    ///< AccessType="RO/V" BitOffset="16" ResetValue="0x0"
    uint32_t  : 12;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_apb_stat_reg_t;

#define UC_TOP_MSG_APB_STAT_DEFAULT (0x00000000U)
#define UC_TOP_MSG_APB_STAT_RD_MASK (0x000fffffU)
#define UC_TOP_MSG_APB_STAT_WR_MASK (0x00000000U)


///< Report the largest latency since apb latency measurment block is enabled.
///< The result will be cleared when the measrument block is disabled
#define UC_TOP_MSG_APB_STAT_APB_LATENCY_MEAS_RSLT_BF_OFF ( 0)
#define UC_TOP_MSG_APB_STAT_APB_LATENCY_MEAS_RSLT_BF_WID (15)
#define UC_TOP_MSG_APB_STAT_APB_LATENCY_MEAS_RSLT_BF_MSK (0x00007FFF)
#define UC_TOP_MSG_APB_STAT_APB_LATENCY_MEAS_RSLT_BF_DEF (0x00000000)

///< To indicate is the APB watch dog timer has been turned on
#define UC_TOP_MSG_APB_STAT_APB_WDT_RUN_BF_OFF (15)
#define UC_TOP_MSG_APB_STAT_APB_WDT_RUN_BF_WID ( 1)
#define UC_TOP_MSG_APB_STAT_APB_WDT_RUN_BF_MSK (0x00008000)
#define UC_TOP_MSG_APB_STAT_APB_WDT_RUN_BF_DEF (0x00000000)

///< To indicate the last apb transcation status.
///< Bit 0: Security miss
///< Bit 1: Address miss
///< Bit 2: General AHB error
///< Bit 3: Timeout
#define UC_TOP_MSG_APB_STAT_APB_PSTAT_BF_OFF (16)
#define UC_TOP_MSG_APB_STAT_APB_PSTAT_BF_WID ( 4)
#define UC_TOP_MSG_APB_STAT_APB_PSTAT_BF_MSK (0x000F0000)
#define UC_TOP_MSG_APB_STAT_APB_PSTAT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_APB_MASK_STATUS_PRELIM register description at address offset 0x1cc
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/apb_mask_status_prelim
  * APB Mask Status
  */

typedef union {
  struct {
    uint32_t APB_BIT_EN_B : 32;
    ///< To indicate the bit_en_b sideband on the last apb transcation.
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_apb_mask_stat_prelim_reg_t;

#define UC_TOP_MSG_APB_MASK_STAT_PRELIM_DEFAULT (0x00000000U)
#define UC_TOP_MSG_APB_MASK_STAT_PRELIM_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_APB_MASK_STAT_PRELIM_WR_MASK (0x00000000U)


///< To indicate the bit_en_b sideband on the last apb transcation.
#define UC_TOP_MSG_APB_MASK_STAT_PRELIM_APB_BIT_EN_B_BF_OFF ( 0)
#define UC_TOP_MSG_APB_MASK_STAT_PRELIM_APB_BIT_EN_B_BF_WID (32)
#define UC_TOP_MSG_APB_MASK_STAT_PRELIM_APB_BIT_EN_B_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_APB_MASK_STAT_PRELIM_APB_BIT_EN_B_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_APB_MASK_STATUS_FINAL register description at address offset 0x1d0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/apb_mask_status_final
  * APB Mask Status
  */

typedef union {
  struct {
    uint32_t APB_BIT_EN : 32;
    ///< To indicate the final bit_en applied on the last apb transcation (ie.
    ///< apb_bit_en[i] = !apb_bit_en_b[i] & apb_pstrobe[int(i/8)])
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_apb_mask_stat_final_reg_t;

#define UC_TOP_MSG_APB_MASK_STAT_FINAL_DEFAULT (0x00000000U)
#define UC_TOP_MSG_APB_MASK_STAT_FINAL_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_APB_MASK_STAT_FINAL_WR_MASK (0x00000000U)


///< To indicate the final bit_en applied on the last apb transcation (ie.
///< apb_bit_en[i] = !apb_bit_en_b[i] & apb_pstrobe[int(i/8)])
#define UC_TOP_MSG_APB_MASK_STAT_FINAL_APB_BIT_EN_BF_OFF ( 0)
#define UC_TOP_MSG_APB_MASK_STAT_FINAL_APB_BIT_EN_BF_WID (32)
#define UC_TOP_MSG_APB_MASK_STAT_FINAL_APB_BIT_EN_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_APB_MASK_STAT_FINAL_APB_BIT_EN_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_CPU_PROBE_ADDR register description at address offset 0x1d4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_cpu_probe_addr
  * CPU Probe
  */

typedef union {
  struct {
    uint32_t UC_CPU_PROBE_ADDR : 16;
    ///< CPU probe address to select which testbus to be probed
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} uc_top_msg_uc_cpu_probe_addr_reg_t;

#define UC_TOP_MSG_UC_CPU_PROBE_ADDR_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_CPU_PROBE_ADDR_RD_MASK (0x0000ffffU)
#define UC_TOP_MSG_UC_CPU_PROBE_ADDR_WR_MASK (0x0000ffffU)


///< CPU probe address to select which testbus to be probed
#define UC_TOP_MSG_UC_CPU_PROBE_ADDR_UC_CPU_PROBE_ADDR_BF_OFF ( 0)
#define UC_TOP_MSG_UC_CPU_PROBE_ADDR_UC_CPU_PROBE_ADDR_BF_WID (16)
#define UC_TOP_MSG_UC_CPU_PROBE_ADDR_UC_CPU_PROBE_ADDR_BF_MSK (0x0000FFFF)
#define UC_TOP_MSG_UC_CPU_PROBE_ADDR_UC_CPU_PROBE_ADDR_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_CPU_PROBE_OUT register description at address offset 0x1d8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_cpu_probe_out
  * CPU Probe
  */

typedef union {
  struct {
    uint32_t UC_CPU_PROBE_OUT : 32;
    ///< CPU selected testbus
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_cpu_probe_out_reg_t;

#define UC_TOP_MSG_UC_CPU_PROBE_OUT_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_CPU_PROBE_OUT_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_CPU_PROBE_OUT_WR_MASK (0x00000000U)


///< CPU selected testbus
#define UC_TOP_MSG_UC_CPU_PROBE_OUT_UC_CPU_PROBE_OUT_BF_OFF ( 0)
#define UC_TOP_MSG_UC_CPU_PROBE_OUT_UC_CPU_PROBE_OUT_BF_WID (32)
#define UC_TOP_MSG_UC_CPU_PROBE_OUT_UC_CPU_PROBE_OUT_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_CPU_PROBE_OUT_UC_CPU_PROBE_OUT_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RW_SPARE_0 register description at address offset 0x1e4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_rw_spare_0
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t UC_RW_SPARE_0 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_rw_spare_0_reg_t;

#define UC_TOP_MSG_UC_RW_SPARE_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RW_SPARE_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RW_SPARE_0_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define UC_TOP_MSG_UC_RW_SPARE_0_UC_RW_SPARE_0_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RW_SPARE_0_UC_RW_SPARE_0_BF_WID (32)
#define UC_TOP_MSG_UC_RW_SPARE_0_UC_RW_SPARE_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RW_SPARE_0_UC_RW_SPARE_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RW_SPARE_1 register description at address offset 0x1e8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_rw_spare_1
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t UC_RW_SPARE_1 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_rw_spare_1_reg_t;

#define UC_TOP_MSG_UC_RW_SPARE_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RW_SPARE_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RW_SPARE_1_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define UC_TOP_MSG_UC_RW_SPARE_1_UC_RW_SPARE_1_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RW_SPARE_1_UC_RW_SPARE_1_BF_WID (32)
#define UC_TOP_MSG_UC_RW_SPARE_1_UC_RW_SPARE_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RW_SPARE_1_UC_RW_SPARE_1_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RW_SPARE_2 register description at address offset 0x1ec
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_rw_spare_2
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t UC_RW_SPARE_2 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_rw_spare_2_reg_t;

#define UC_TOP_MSG_UC_RW_SPARE_2_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RW_SPARE_2_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RW_SPARE_2_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define UC_TOP_MSG_UC_RW_SPARE_2_UC_RW_SPARE_2_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RW_SPARE_2_UC_RW_SPARE_2_BF_WID (32)
#define UC_TOP_MSG_UC_RW_SPARE_2_UC_RW_SPARE_2_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RW_SPARE_2_UC_RW_SPARE_2_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RW_SPARE_3 register description at address offset 0x1f0
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_rw_spare_3
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t UC_RW_SPARE_3 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_rw_spare_3_reg_t;

#define UC_TOP_MSG_UC_RW_SPARE_3_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RW_SPARE_3_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RW_SPARE_3_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define UC_TOP_MSG_UC_RW_SPARE_3_UC_RW_SPARE_3_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RW_SPARE_3_UC_RW_SPARE_3_BF_WID (32)
#define UC_TOP_MSG_UC_RW_SPARE_3_UC_RW_SPARE_3_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RW_SPARE_3_UC_RW_SPARE_3_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RO_SPARE_0 register description at address offset 0x1f4
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_ro_spare_0
  * Spare RO register
  */

typedef union {
  struct {
    uint32_t UC_RO_SPARE_0 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_ro_spare_0_reg_t;

#define UC_TOP_MSG_UC_RO_SPARE_0_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RO_SPARE_0_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RO_SPARE_0_WR_MASK (0x00000000U)


///< Spare register.  Reseved for future
#define UC_TOP_MSG_UC_RO_SPARE_0_UC_RO_SPARE_0_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RO_SPARE_0_UC_RO_SPARE_0_BF_WID (32)
#define UC_TOP_MSG_UC_RO_SPARE_0_UC_RO_SPARE_0_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RO_SPARE_0_UC_RO_SPARE_0_BF_DEF (0x00000000)


/** @brief UC_TOP_REGS_MSG_UC_TOP_REGS_UC_RO_SPARE_1 register description at address offset 0x1f8
  *
  * Register default value:        0x00000000
  * Register full path in IP: UC_TOP_regs_MSG/UC_TOP_regs/uc_ro_spare_1
  * Spare RO register
  */

typedef union {
  struct {
    uint32_t UC_RO_SPARE_1 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} uc_top_msg_uc_ro_spare_1_reg_t;

#define UC_TOP_MSG_UC_RO_SPARE_1_DEFAULT (0x00000000U)
#define UC_TOP_MSG_UC_RO_SPARE_1_RD_MASK (0xffffffffU)
#define UC_TOP_MSG_UC_RO_SPARE_1_WR_MASK (0x00000000U)


///< Spare register.  Reseved for future
#define UC_TOP_MSG_UC_RO_SPARE_1_UC_RO_SPARE_1_BF_OFF ( 0)
#define UC_TOP_MSG_UC_RO_SPARE_1_UC_RO_SPARE_1_BF_WID (32)
#define UC_TOP_MSG_UC_RO_SPARE_1_UC_RO_SPARE_1_BF_MSK (0xFFFFFFFF)
#define UC_TOP_MSG_UC_RO_SPARE_1_UC_RO_SPARE_1_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define UC_TOP_MSG_UC_REVISION_REG(_BASE) ((uc_top_msg_uc_revision_reg_t*) UC_TOP_MSG_UC_REVISION_ADR(_BASE))
#define UC_TOP_MSG_UC_JTAG_VER_REG(_BASE) ((uc_top_msg_uc_jtag_ver_reg_t*) UC_TOP_MSG_UC_JTAG_VER_ADR(_BASE))
#define UC_TOP_MSG_CAR_CLK_CTRL_REG(_BASE) ((uc_top_msg_car_clk_ctrl_reg_t*) UC_TOP_MSG_CAR_CLK_CTRL_ADR(_BASE))
#define UC_TOP_MSG_CAR_RST_CTRL_REG(_BASE) ((uc_top_msg_car_rst_ctrl_reg_t*) UC_TOP_MSG_CAR_RST_CTRL_ADR(_BASE))
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_REG(_BASE) ((uc_top_msg_uc_rate_limit_lane_0_reg_t*) UC_TOP_MSG_UC_RATE_LIMIT_LANE_0_ADR(_BASE))
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_REG(_BASE) ((uc_top_msg_uc_rate_limit_lane_1_reg_t*) UC_TOP_MSG_UC_RATE_LIMIT_LANE_1_ADR(_BASE))
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_REG(_BASE) ((uc_top_msg_uc_rate_limit_lane_2_reg_t*) UC_TOP_MSG_UC_RATE_LIMIT_LANE_2_ADR(_BASE))
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_REG(_BASE) ((uc_top_msg_uc_rate_limit_lane_3_reg_t*) UC_TOP_MSG_UC_RATE_LIMIT_LANE_3_ADR(_BASE))
#define UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_REG(_BASE) ((uc_top_msg_uc_rate_limit_lane_4_reg_t*) UC_TOP_MSG_UC_RATE_LIMIT_LANE_4_ADR(_BASE))
#define UC_TOP_MSG_UC_REF_CLK_FREQ_0_REG(_BASE) ((uc_top_msg_uc_ref_clk_freq_0_reg_t*) UC_TOP_MSG_UC_REF_CLK_FREQ_0_ADR(_BASE))
#define UC_TOP_MSG_UC_REF_CLK_FREQ_1_REG(_BASE) ((uc_top_msg_uc_ref_clk_freq_1_reg_t*) UC_TOP_MSG_UC_REF_CLK_FREQ_1_ADR(_BASE))
#define UC_TOP_MSG_UC_REF_CLK_FREQ_2_REG(_BASE) ((uc_top_msg_uc_ref_clk_freq_2_reg_t*) UC_TOP_MSG_UC_REF_CLK_FREQ_2_ADR(_BASE))
#define UC_TOP_MSG_UC_REF_CLK_FREQ_3_REG(_BASE) ((uc_top_msg_uc_ref_clk_freq_3_reg_t*) UC_TOP_MSG_UC_REF_CLK_FREQ_3_ADR(_BASE))
#define UC_TOP_MSG_UC_FUSE_0_REG(_BASE) ((uc_top_msg_uc_fuse_0_reg_t*) UC_TOP_MSG_UC_FUSE_0_ADR(_BASE))
#define UC_TOP_MSG_UC_FUSE_1_REG(_BASE) ((uc_top_msg_uc_fuse_1_reg_t*) UC_TOP_MSG_UC_FUSE_1_ADR(_BASE))
#define UC_TOP_MSG_UC_FUSE_2_REG(_BASE) ((uc_top_msg_uc_fuse_2_reg_t*) UC_TOP_MSG_UC_FUSE_2_ADR(_BASE))
#define UC_TOP_MSG_UC_FUSE_3_REG(_BASE) ((uc_top_msg_uc_fuse_3_reg_t*) UC_TOP_MSG_UC_FUSE_3_ADR(_BASE))
#define UC_TOP_MSG_UC_PRODUCT_SKU_REG(_BASE) ((uc_top_msg_uc_product_sku_reg_t*) UC_TOP_MSG_UC_PRODUCT_SKU_ADR(_BASE))
#define UC_TOP_MSG_FABRIC_CTRL_REG(_BASE) ((uc_top_msg_fabric_ctrl_reg_t*) UC_TOP_MSG_FABRIC_CTRL_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL0_REG(_BASE) ((uc_top_msg_mem_ctrl0_reg_t*) UC_TOP_MSG_MEM_CTRL0_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL1_REG(_BASE) ((uc_top_msg_mem_ctrl1_reg_t*) UC_TOP_MSG_MEM_CTRL1_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL2_REG(_BASE) ((uc_top_msg_mem_ctrl2_reg_t*) UC_TOP_MSG_MEM_CTRL2_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL3_REG(_BASE) ((uc_top_msg_mem_ctrl3_reg_t*) UC_TOP_MSG_MEM_CTRL3_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL4_REG(_BASE) ((uc_top_msg_mem_ctrl4_reg_t*) UC_TOP_MSG_MEM_CTRL4_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL5_REG(_BASE) ((uc_top_msg_mem_ctrl5_reg_t*) UC_TOP_MSG_MEM_CTRL5_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL6_REG(_BASE) ((uc_top_msg_mem_ctrl6_reg_t*) UC_TOP_MSG_MEM_CTRL6_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL7_REG(_BASE) ((uc_top_msg_mem_ctrl7_reg_t*) UC_TOP_MSG_MEM_CTRL7_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL8_REG(_BASE) ((uc_top_msg_mem_ctrl8_reg_t*) UC_TOP_MSG_MEM_CTRL8_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL9_REG(_BASE) ((uc_top_msg_mem_ctrl9_reg_t*) UC_TOP_MSG_MEM_CTRL9_ADR(_BASE))
#define UC_TOP_MSG_MEM_CTRL10_REG(_BASE) ((uc_top_msg_mem_ctrl10_reg_t*) UC_TOP_MSG_MEM_CTRL10_ADR(_BASE))
#define UC_TOP_MSG_PMA_RST_REQ_REG(_BASE) ((uc_top_msg_pma_rst_req_reg_t*) UC_TOP_MSG_PMA_RST_REQ_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_0_CTL0_REG(_BASE) ((uc_top_msg_icu_irq_0_ctl0_reg_t*) UC_TOP_MSG_ICU_IRQ_0_CTL0_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_0_CTL1_REG(_BASE) ((uc_top_msg_icu_irq_0_ctl1_reg_t*) UC_TOP_MSG_ICU_IRQ_0_CTL1_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_0_CTL2_REG(_BASE) ((uc_top_msg_icu_irq_0_ctl2_reg_t*) UC_TOP_MSG_ICU_IRQ_0_CTL2_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_0_STAT0_REG(_BASE) ((uc_top_msg_icu_irq_0_stat0_reg_t*) UC_TOP_MSG_ICU_IRQ_0_STAT0_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_0_STAT1_REG(_BASE) ((uc_top_msg_icu_irq_0_stat1_reg_t*) UC_TOP_MSG_ICU_IRQ_0_STAT1_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_4_CTL0_REG(_BASE) ((uc_top_msg_icu_irq_4_ctl0_reg_t*) UC_TOP_MSG_ICU_IRQ_4_CTL0_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_4_CTL1_REG(_BASE) ((uc_top_msg_icu_irq_4_ctl1_reg_t*) UC_TOP_MSG_ICU_IRQ_4_CTL1_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_4_CTL2_REG(_BASE) ((uc_top_msg_icu_irq_4_ctl2_reg_t*) UC_TOP_MSG_ICU_IRQ_4_CTL2_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_4_STAT0_REG(_BASE) ((uc_top_msg_icu_irq_4_stat0_reg_t*) UC_TOP_MSG_ICU_IRQ_4_STAT0_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_4_STAT1_REG(_BASE) ((uc_top_msg_icu_irq_4_stat1_reg_t*) UC_TOP_MSG_ICU_IRQ_4_STAT1_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_10_CTL0_REG(_BASE) ((uc_top_msg_icu_irq_10_ctl0_reg_t*) UC_TOP_MSG_ICU_IRQ_10_CTL0_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_10_CTL1_REG(_BASE) ((uc_top_msg_icu_irq_10_ctl1_reg_t*) UC_TOP_MSG_ICU_IRQ_10_CTL1_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_10_CTL2_REG(_BASE) ((uc_top_msg_icu_irq_10_ctl2_reg_t*) UC_TOP_MSG_ICU_IRQ_10_CTL2_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_10_STAT0_REG(_BASE) ((uc_top_msg_icu_irq_10_stat0_reg_t*) UC_TOP_MSG_ICU_IRQ_10_STAT0_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_10_STAT1_REG(_BASE) ((uc_top_msg_icu_irq_10_stat1_reg_t*) UC_TOP_MSG_ICU_IRQ_10_STAT1_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_16_CTL0_REG(_BASE) ((uc_top_msg_icu_irq_16_ctl0_reg_t*) UC_TOP_MSG_ICU_IRQ_16_CTL0_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_16_CTL1_REG(_BASE) ((uc_top_msg_icu_irq_16_ctl1_reg_t*) UC_TOP_MSG_ICU_IRQ_16_CTL1_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_16_CTL2_REG(_BASE) ((uc_top_msg_icu_irq_16_ctl2_reg_t*) UC_TOP_MSG_ICU_IRQ_16_CTL2_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_16_STAT0_REG(_BASE) ((uc_top_msg_icu_irq_16_stat0_reg_t*) UC_TOP_MSG_ICU_IRQ_16_STAT0_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_16_STAT1_REG(_BASE) ((uc_top_msg_icu_irq_16_stat1_reg_t*) UC_TOP_MSG_ICU_IRQ_16_STAT1_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_17_CTL0_REG(_BASE) ((uc_top_msg_icu_irq_17_ctl0_reg_t*) UC_TOP_MSG_ICU_IRQ_17_CTL0_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_17_CTL1_REG(_BASE) ((uc_top_msg_icu_irq_17_ctl1_reg_t*) UC_TOP_MSG_ICU_IRQ_17_CTL1_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_17_CTL2_REG(_BASE) ((uc_top_msg_icu_irq_17_ctl2_reg_t*) UC_TOP_MSG_ICU_IRQ_17_CTL2_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_17_STAT0_REG(_BASE) ((uc_top_msg_icu_irq_17_stat0_reg_t*) UC_TOP_MSG_ICU_IRQ_17_STAT0_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_17_STAT1_REG(_BASE) ((uc_top_msg_icu_irq_17_stat1_reg_t*) UC_TOP_MSG_ICU_IRQ_17_STAT1_ADR(_BASE))
#define UC_TOP_MSG_ICU_IRQ_RAW_STAT_REG(_BASE) ((uc_top_msg_icu_irq_raw_stat_reg_t*) UC_TOP_MSG_ICU_IRQ_RAW_STAT_ADR(_BASE))
#define UC_TOP_MSG_FW_STAT_RSLT_0_REG(_BASE) ((uc_top_msg_fw_stat_rslt_0_reg_t*) UC_TOP_MSG_FW_STAT_RSLT_0_ADR(_BASE))
#define UC_TOP_MSG_FW_STAT_RSLT_1_REG(_BASE) ((uc_top_msg_fw_stat_rslt_1_reg_t*) UC_TOP_MSG_FW_STAT_RSLT_1_ADR(_BASE))
#define UC_TOP_MSG_FW_STAT_RSLT_2_REG(_BASE) ((uc_top_msg_fw_stat_rslt_2_reg_t*) UC_TOP_MSG_FW_STAT_RSLT_2_ADR(_BASE))
#define UC_TOP_MSG_FW_STAT_RSLT_3_REG(_BASE) ((uc_top_msg_fw_stat_rslt_3_reg_t*) UC_TOP_MSG_FW_STAT_RSLT_3_ADR(_BASE))
#define UC_TOP_MSG_FW_STAT_RSLT_4_REG(_BASE) ((uc_top_msg_fw_stat_rslt_4_reg_t*) UC_TOP_MSG_FW_STAT_RSLT_4_ADR(_BASE))
#define UC_TOP_MSG_FW_STAT_RSLT_5_REG(_BASE) ((uc_top_msg_fw_stat_rslt_5_reg_t*) UC_TOP_MSG_FW_STAT_RSLT_5_ADR(_BASE))
#define UC_TOP_MSG_FW_STAT_RSLT_6_REG(_BASE) ((uc_top_msg_fw_stat_rslt_6_reg_t*) UC_TOP_MSG_FW_STAT_RSLT_6_ADR(_BASE))
#define UC_TOP_MSG_FW_STAT_RSLT_7_REG(_BASE) ((uc_top_msg_fw_stat_rslt_7_reg_t*) UC_TOP_MSG_FW_STAT_RSLT_7_ADR(_BASE))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_REG(_BASE) ((uc_top_msg_fw_macro_trig_ctrl_0_reg_t*) UC_TOP_MSG_FW_MACRO_TRIG_CTRL_0_ADR(_BASE))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_REG(_BASE) ((uc_top_msg_fw_macro_trig_ctrl_1_reg_t*) UC_TOP_MSG_FW_MACRO_TRIG_CTRL_1_ADR(_BASE))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_REG(_BASE) ((uc_top_msg_fw_macro_trig_ctrl_2_reg_t*) UC_TOP_MSG_FW_MACRO_TRIG_CTRL_2_ADR(_BASE))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_REG(_BASE) ((uc_top_msg_fw_macro_trig_ctrl_3_reg_t*) UC_TOP_MSG_FW_MACRO_TRIG_CTRL_3_ADR(_BASE))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_REG(_BASE) ((uc_top_msg_fw_macro_trig_ctrl_4_reg_t*) UC_TOP_MSG_FW_MACRO_TRIG_CTRL_4_ADR(_BASE))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_REG(_BASE) ((uc_top_msg_fw_macro_trig_ctrl_5_reg_t*) UC_TOP_MSG_FW_MACRO_TRIG_CTRL_5_ADR(_BASE))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_REG(_BASE) ((uc_top_msg_fw_macro_trig_ctrl_6_reg_t*) UC_TOP_MSG_FW_MACRO_TRIG_CTRL_6_ADR(_BASE))
#define UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_REG(_BASE) ((uc_top_msg_fw_macro_trig_ctrl_7_reg_t*) UC_TOP_MSG_FW_MACRO_TRIG_CTRL_7_ADR(_BASE))
#define UC_TOP_MSG_TEMP_SENSE_REG(_BASE) ((uc_top_msg_temp_sense_reg_t*) UC_TOP_MSG_TEMP_SENSE_ADR(_BASE))
#define UC_TOP_MSG_AUTONEG_0_REG(_BASE) ((uc_top_msg_autoneg_0_reg_t*) UC_TOP_MSG_AUTONEG_0_ADR(_BASE))
#define UC_TOP_MSG_AUTONEG_1_REG(_BASE) ((uc_top_msg_autoneg_1_reg_t*) UC_TOP_MSG_AUTONEG_1_ADR(_BASE))
#define UC_TOP_MSG_FW_VER_0_REG(_BASE) ((uc_top_msg_fw_ver_0_reg_t*) UC_TOP_MSG_FW_VER_0_ADR(_BASE))
#define UC_TOP_MSG_FW_VER_1_REG(_BASE) ((uc_top_msg_fw_ver_1_reg_t*) UC_TOP_MSG_FW_VER_1_ADR(_BASE))
#define UC_TOP_MSG_FW_VER_2_REG(_BASE) ((uc_top_msg_fw_ver_2_reg_t*) UC_TOP_MSG_FW_VER_2_ADR(_BASE))
#define UC_TOP_MSG_FW_VER_3_REG(_BASE) ((uc_top_msg_fw_ver_3_reg_t*) UC_TOP_MSG_FW_VER_3_ADR(_BASE))
#define UC_TOP_MSG_FW_TIMEBASE_REG(_BASE) ((uc_top_msg_fw_timebase_reg_t*) UC_TOP_MSG_FW_TIMEBASE_ADR(_BASE))
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_REG(_BASE) ((uc_top_msg_fw_rate_limit_lane_0_reg_t*) UC_TOP_MSG_FW_RATE_LIMIT_LANE_0_ADR(_BASE))
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_REG(_BASE) ((uc_top_msg_fw_rate_limit_lane_1_reg_t*) UC_TOP_MSG_FW_RATE_LIMIT_LANE_1_ADR(_BASE))
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_REG(_BASE) ((uc_top_msg_fw_rate_limit_lane_2_reg_t*) UC_TOP_MSG_FW_RATE_LIMIT_LANE_2_ADR(_BASE))
#define UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_REG(_BASE) ((uc_top_msg_fw_rate_limit_lane_3_reg_t*) UC_TOP_MSG_FW_RATE_LIMIT_LANE_3_ADR(_BASE))
#define UC_TOP_MSG_FW_REF_CLK_FREQ_0_REG(_BASE) ((uc_top_msg_fw_ref_clk_freq_0_reg_t*) UC_TOP_MSG_FW_REF_CLK_FREQ_0_ADR(_BASE))
#define UC_TOP_MSG_FW_REF_CLK_FREQ_1_REG(_BASE) ((uc_top_msg_fw_ref_clk_freq_1_reg_t*) UC_TOP_MSG_FW_REF_CLK_FREQ_1_ADR(_BASE))
#define UC_TOP_MSG_FW_REF_CLK_FREQ_2_REG(_BASE) ((uc_top_msg_fw_ref_clk_freq_2_reg_t*) UC_TOP_MSG_FW_REF_CLK_FREQ_2_ADR(_BASE))
#define UC_TOP_MSG_FW_REF_CLK_FREQ_3_REG(_BASE) ((uc_top_msg_fw_ref_clk_freq_3_reg_t*) UC_TOP_MSG_FW_REF_CLK_FREQ_3_ADR(_BASE))
#define UC_TOP_MSG_FW_FUSE_0_REG(_BASE) ((uc_top_msg_fw_fuse_0_reg_t*) UC_TOP_MSG_FW_FUSE_0_ADR(_BASE))
#define UC_TOP_MSG_FW_FUSE_1_REG(_BASE) ((uc_top_msg_fw_fuse_1_reg_t*) UC_TOP_MSG_FW_FUSE_1_ADR(_BASE))
#define UC_TOP_MSG_FW_FUSE_2_REG(_BASE) ((uc_top_msg_fw_fuse_2_reg_t*) UC_TOP_MSG_FW_FUSE_2_ADR(_BASE))
#define UC_TOP_MSG_FW_FUSE_3_REG(_BASE) ((uc_top_msg_fw_fuse_3_reg_t*) UC_TOP_MSG_FW_FUSE_3_ADR(_BASE))
#define UC_TOP_MSG_FW_CORE_STAT_0_REG(_BASE) ((uc_top_msg_fw_core_stat_0_reg_t*) UC_TOP_MSG_FW_CORE_STAT_0_ADR(_BASE))
#define UC_TOP_MSG_FW_CORE_STAT_1_REG(_BASE) ((uc_top_msg_fw_core_stat_1_reg_t*) UC_TOP_MSG_FW_CORE_STAT_1_ADR(_BASE))
#define UC_TOP_MSG_FW_CORE_STAT_2_REG(_BASE) ((uc_top_msg_fw_core_stat_2_reg_t*) UC_TOP_MSG_FW_CORE_STAT_2_ADR(_BASE))
#define UC_TOP_MSG_FW_SPARE_0_REG(_BASE) ((uc_top_msg_fw_spare_0_reg_t*) UC_TOP_MSG_FW_SPARE_0_ADR(_BASE))
#define UC_TOP_MSG_FW_SPARE_1_REG(_BASE) ((uc_top_msg_fw_spare_1_reg_t*) UC_TOP_MSG_FW_SPARE_1_ADR(_BASE))
#define UC_TOP_MSG_FW_SPARE_2_REG(_BASE) ((uc_top_msg_fw_spare_2_reg_t*) UC_TOP_MSG_FW_SPARE_2_ADR(_BASE))
#define UC_TOP_MSG_FW_SPARE_3_REG(_BASE) ((uc_top_msg_fw_spare_3_reg_t*) UC_TOP_MSG_FW_SPARE_3_ADR(_BASE))
#define UC_TOP_MSG_FW_SPARE_4_REG(_BASE) ((uc_top_msg_fw_spare_4_reg_t*) UC_TOP_MSG_FW_SPARE_4_ADR(_BASE))
#define UC_TOP_MSG_FW_SPARE_5_REG(_BASE) ((uc_top_msg_fw_spare_5_reg_t*) UC_TOP_MSG_FW_SPARE_5_ADR(_BASE))
#define UC_TOP_MSG_FW_SPARE_6_REG(_BASE) ((uc_top_msg_fw_spare_6_reg_t*) UC_TOP_MSG_FW_SPARE_6_ADR(_BASE))
#define UC_TOP_MSG_FW_SPARE_7_REG(_BASE) ((uc_top_msg_fw_spare_7_reg_t*) UC_TOP_MSG_FW_SPARE_7_ADR(_BASE))
#define UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_REG(_BASE) ((uc_top_msg_spare_port_ovrd_ctrl_reg_t*) UC_TOP_MSG_SPARE_PORT_OVRD_CTRL_ADR(_BASE))
#define UC_TOP_MSG_SPARE_PORT_OVRD_0_REG(_BASE) ((uc_top_msg_spare_port_ovrd_0_reg_t*) UC_TOP_MSG_SPARE_PORT_OVRD_0_ADR(_BASE))
#define UC_TOP_MSG_SPARE_PORT_OVRD_1_REG(_BASE) ((uc_top_msg_spare_port_ovrd_1_reg_t*) UC_TOP_MSG_SPARE_PORT_OVRD_1_ADR(_BASE))
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_0_REG(_BASE) ((uc_top_msg_spare_port_preovrd_0_reg_t*) UC_TOP_MSG_SPARE_PORT_PREOVRD_0_ADR(_BASE))
#define UC_TOP_MSG_SPARE_PORT_PREOVRD_1_REG(_BASE) ((uc_top_msg_spare_port_preovrd_1_reg_t*) UC_TOP_MSG_SPARE_PORT_PREOVRD_1_ADR(_BASE))
#define UC_TOP_MSG_UC_TESTBUS_CFG_0_REG(_BASE) ((uc_top_msg_uc_testbus_cfg_0_reg_t*) UC_TOP_MSG_UC_TESTBUS_CFG_0_ADR(_BASE))
#define UC_TOP_MSG_UC_TESTBUS_CFG_1_REG(_BASE) ((uc_top_msg_uc_testbus_cfg_1_reg_t*) UC_TOP_MSG_UC_TESTBUS_CFG_1_ADR(_BASE))
#define UC_TOP_MSG_UC_TESTBUS_STAT_0_REG(_BASE) ((uc_top_msg_uc_testbus_stat_0_reg_t*) UC_TOP_MSG_UC_TESTBUS_STAT_0_ADR(_BASE))
#define UC_TOP_MSG_UC_TESTBUS_STAT_1_REG(_BASE) ((uc_top_msg_uc_testbus_stat_1_reg_t*) UC_TOP_MSG_UC_TESTBUS_STAT_1_ADR(_BASE))
#define UC_TOP_MSG_APB_CTRL_REG(_BASE) ((uc_top_msg_apb_ctrl_reg_t*) UC_TOP_MSG_APB_CTRL_ADR(_BASE))
#define UC_TOP_MSG_APB_STAT_REG(_BASE) ((uc_top_msg_apb_stat_reg_t*) UC_TOP_MSG_APB_STAT_ADR(_BASE))
#define UC_TOP_MSG_APB_MASK_STAT_PRELIM_REG(_BASE) ((uc_top_msg_apb_mask_stat_prelim_reg_t*) UC_TOP_MSG_APB_MASK_STAT_PRELIM_ADR(_BASE))
#define UC_TOP_MSG_APB_MASK_STAT_FINAL_REG(_BASE) ((uc_top_msg_apb_mask_stat_final_reg_t*) UC_TOP_MSG_APB_MASK_STAT_FINAL_ADR(_BASE))
#define UC_TOP_MSG_UC_CPU_PROBE_ADDR_REG(_BASE) ((uc_top_msg_uc_cpu_probe_addr_reg_t*) UC_TOP_MSG_UC_CPU_PROBE_ADDR_ADR(_BASE))
#define UC_TOP_MSG_UC_CPU_PROBE_OUT_REG(_BASE) ((uc_top_msg_uc_cpu_probe_out_reg_t*) UC_TOP_MSG_UC_CPU_PROBE_OUT_ADR(_BASE))
#define UC_TOP_MSG_UC_RW_SPARE_0_REG(_BASE) ((uc_top_msg_uc_rw_spare_0_reg_t*) UC_TOP_MSG_UC_RW_SPARE_0_ADR(_BASE))
#define UC_TOP_MSG_UC_RW_SPARE_1_REG(_BASE) ((uc_top_msg_uc_rw_spare_1_reg_t*) UC_TOP_MSG_UC_RW_SPARE_1_ADR(_BASE))
#define UC_TOP_MSG_UC_RW_SPARE_2_REG(_BASE) ((uc_top_msg_uc_rw_spare_2_reg_t*) UC_TOP_MSG_UC_RW_SPARE_2_ADR(_BASE))
#define UC_TOP_MSG_UC_RW_SPARE_3_REG(_BASE) ((uc_top_msg_uc_rw_spare_3_reg_t*) UC_TOP_MSG_UC_RW_SPARE_3_ADR(_BASE))
#define UC_TOP_MSG_UC_RO_SPARE_0_REG(_BASE) ((uc_top_msg_uc_ro_spare_0_reg_t*) UC_TOP_MSG_UC_RO_SPARE_0_ADR(_BASE))
#define UC_TOP_MSG_UC_RO_SPARE_1_REG(_BASE) ((uc_top_msg_uc_ro_spare_1_reg_t*) UC_TOP_MSG_UC_RO_SPARE_1_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    uc_top_msg_uc_revision_reg_t UC_REVISION; /*< Address offset = 0x0 */
    uc_top_msg_uc_jtag_ver_reg_t UC_JTAG_VER; /*< Address offset = 0x4 */
    uc_top_msg_car_clk_ctrl_reg_t CAR_CLK_CTRL; /*< Address offset = 0x8 */
    uc_top_msg_car_rst_ctrl_reg_t CAR_RST_CTRL; /*< Address offset = 0xc */
    uc_top_msg_uc_rate_limit_lane_0_reg_t UC_RATE_LIMIT_LANE_0; /*< Address offset = 0x10 */
    uc_top_msg_uc_rate_limit_lane_1_reg_t UC_RATE_LIMIT_LANE_1; /*< Address offset = 0x14 */
    uc_top_msg_uc_rate_limit_lane_2_reg_t UC_RATE_LIMIT_LANE_2; /*< Address offset = 0x18 */
    uc_top_msg_uc_rate_limit_lane_3_reg_t UC_RATE_LIMIT_LANE_3; /*< Address offset = 0x1c */
    uc_top_msg_uc_rate_limit_lane_4_reg_t UC_RATE_LIMIT_LANE_4; /*< Address offset = 0x20 */
    uc_top_msg_uc_ref_clk_freq_0_reg_t UC_REF_CLK_FREQ_0; /*< Address offset = 0x24 */
    uc_top_msg_uc_ref_clk_freq_1_reg_t UC_REF_CLK_FREQ_1; /*< Address offset = 0x28 */
    uc_top_msg_uc_ref_clk_freq_2_reg_t UC_REF_CLK_FREQ_2; /*< Address offset = 0x2c */
    uc_top_msg_uc_ref_clk_freq_3_reg_t UC_REF_CLK_FREQ_3; /*< Address offset = 0x30 */
    uc_top_msg_uc_fuse_0_reg_t UC_FUSE_0; /*< Address offset = 0x34 */
    uc_top_msg_uc_fuse_1_reg_t UC_FUSE_1; /*< Address offset = 0x38 */
    uc_top_msg_uc_fuse_2_reg_t UC_FUSE_2; /*< Address offset = 0x3c */
    uc_top_msg_uc_fuse_3_reg_t UC_FUSE_3; /*< Address offset = 0x40 */
    uc_top_msg_uc_product_sku_reg_t UC_PRODUCT_SKU; /*< Address offset = 0x44 */
    uc_top_msg_fabric_ctrl_reg_t FABRIC_CTRL; /*< Address offset = 0x48 */
    uc_top_msg_mem_ctrl0_reg_t MEM_CTRL0; /*< Address offset = 0x4c */
    uc_top_msg_mem_ctrl1_reg_t MEM_CTRL1; /*< Address offset = 0x50 */
    uc_top_msg_mem_ctrl2_reg_t MEM_CTRL2; /*< Address offset = 0x54 */
    uc_top_msg_mem_ctrl3_reg_t MEM_CTRL3; /*< Address offset = 0x58 */
    uc_top_msg_mem_ctrl4_reg_t MEM_CTRL4; /*< Address offset = 0x5c */
    uc_top_msg_mem_ctrl5_reg_t MEM_CTRL5; /*< Address offset = 0x60 */
    uc_top_msg_mem_ctrl6_reg_t MEM_CTRL6; /*< Address offset = 0x64 */
    uc_top_msg_mem_ctrl7_reg_t MEM_CTRL7; /*< Address offset = 0x68 */
    uc_top_msg_mem_ctrl8_reg_t MEM_CTRL8; /*< Address offset = 0x6c */
    uc_top_msg_mem_ctrl9_reg_t MEM_CTRL9; /*< Address offset = 0x70 */
    uc_top_msg_mem_ctrl10_reg_t MEM_CTRL10; /*< Address offset = 0x74 */
    uc_top_msg_pma_rst_req_reg_t PMA_RST_REQ; /*< Address offset = 0x78 */
    uc_top_msg_icu_irq_0_ctl0_reg_t ICU_IRQ_0_CTL0; /*< Address offset = 0x7c */
    uc_top_msg_icu_irq_0_ctl1_reg_t ICU_IRQ_0_CTL1; /*< Address offset = 0x80 */
    uc_top_msg_icu_irq_0_ctl2_reg_t ICU_IRQ_0_CTL2; /*< Address offset = 0x84 */
    uc_top_msg_icu_irq_0_stat0_reg_t ICU_IRQ_0_STAT0; /*< Address offset = 0x88 */
    uc_top_msg_icu_irq_0_stat1_reg_t ICU_IRQ_0_STAT1; /*< Address offset = 0x8c */
    uc_top_msg_icu_irq_4_ctl0_reg_t ICU_IRQ_4_CTL0; /*< Address offset = 0x90 */
    uc_top_msg_icu_irq_4_ctl1_reg_t ICU_IRQ_4_CTL1; /*< Address offset = 0x94 */
    uc_top_msg_icu_irq_4_ctl2_reg_t ICU_IRQ_4_CTL2; /*< Address offset = 0x98 */
    uc_top_msg_icu_irq_4_stat0_reg_t ICU_IRQ_4_STAT0; /*< Address offset = 0x9c */
    uc_top_msg_icu_irq_4_stat1_reg_t ICU_IRQ_4_STAT1; /*< Address offset = 0xa0 */
    uc_top_msg_icu_irq_10_ctl0_reg_t ICU_IRQ_10_CTL0; /*< Address offset = 0xa4 */
    uc_top_msg_icu_irq_10_ctl1_reg_t ICU_IRQ_10_CTL1; /*< Address offset = 0xa8 */
    uc_top_msg_icu_irq_10_ctl2_reg_t ICU_IRQ_10_CTL2; /*< Address offset = 0xac */
    uc_top_msg_icu_irq_10_stat0_reg_t ICU_IRQ_10_STAT0; /*< Address offset = 0xb0 */
    uc_top_msg_icu_irq_10_stat1_reg_t ICU_IRQ_10_STAT1; /*< Address offset = 0xb4 */
    uc_top_msg_icu_irq_16_ctl0_reg_t ICU_IRQ_16_CTL0; /*< Address offset = 0xb8 */
    uc_top_msg_icu_irq_16_ctl1_reg_t ICU_IRQ_16_CTL1; /*< Address offset = 0xbc */
    uc_top_msg_icu_irq_16_ctl2_reg_t ICU_IRQ_16_CTL2; /*< Address offset = 0xc0 */
    uc_top_msg_icu_irq_16_stat0_reg_t ICU_IRQ_16_STAT0; /*< Address offset = 0xc4 */
    uc_top_msg_icu_irq_16_stat1_reg_t ICU_IRQ_16_STAT1; /*< Address offset = 0xc8 */
    uc_top_msg_icu_irq_17_ctl0_reg_t ICU_IRQ_17_CTL0; /*< Address offset = 0xcc */
    uc_top_msg_icu_irq_17_ctl1_reg_t ICU_IRQ_17_CTL1; /*< Address offset = 0xd0 */
    uc_top_msg_icu_irq_17_ctl2_reg_t ICU_IRQ_17_CTL2; /*< Address offset = 0xd4 */
    uc_top_msg_icu_irq_17_stat0_reg_t ICU_IRQ_17_STAT0; /*< Address offset = 0xd8 */
    uc_top_msg_icu_irq_17_stat1_reg_t ICU_IRQ_17_STAT1; /*< Address offset = 0xdc */
    uc_top_msg_icu_irq_raw_stat_reg_t ICU_IRQ_RAW_STAT; /*< Address offset = 0xe0 */
    uc_top_msg_fw_stat_rslt_0_reg_t FW_STAT_RSLT_0; /*< Address offset = 0xe4 */
    uc_top_msg_fw_stat_rslt_1_reg_t FW_STAT_RSLT_1; /*< Address offset = 0xe8 */
    uc_top_msg_fw_stat_rslt_2_reg_t FW_STAT_RSLT_2; /*< Address offset = 0xec */
    uc_top_msg_fw_stat_rslt_3_reg_t FW_STAT_RSLT_3; /*< Address offset = 0xf0 */
    uc_top_msg_fw_stat_rslt_4_reg_t FW_STAT_RSLT_4; /*< Address offset = 0xf4 */
    uc_top_msg_fw_stat_rslt_5_reg_t FW_STAT_RSLT_5; /*< Address offset = 0xf8 */
    uc_top_msg_fw_stat_rslt_6_reg_t FW_STAT_RSLT_6; /*< Address offset = 0xfc */
    uc_top_msg_fw_stat_rslt_7_reg_t FW_STAT_RSLT_7; /*< Address offset = 0x100 */
    uc_top_msg_fw_macro_trig_ctrl_0_reg_t FW_MACRO_TRIG_CTRL_0; /*< Address offset = 0x104 */
    uc_top_msg_fw_macro_trig_ctrl_1_reg_t FW_MACRO_TRIG_CTRL_1; /*< Address offset = 0x108 */
    uc_top_msg_fw_macro_trig_ctrl_2_reg_t FW_MACRO_TRIG_CTRL_2; /*< Address offset = 0x10c */
    uc_top_msg_fw_macro_trig_ctrl_3_reg_t FW_MACRO_TRIG_CTRL_3; /*< Address offset = 0x110 */
    uc_top_msg_fw_macro_trig_ctrl_4_reg_t FW_MACRO_TRIG_CTRL_4; /*< Address offset = 0x114 */
    uc_top_msg_fw_macro_trig_ctrl_5_reg_t FW_MACRO_TRIG_CTRL_5; /*< Address offset = 0x118 */
    uc_top_msg_fw_macro_trig_ctrl_6_reg_t FW_MACRO_TRIG_CTRL_6; /*< Address offset = 0x11c */
    uc_top_msg_fw_macro_trig_ctrl_7_reg_t FW_MACRO_TRIG_CTRL_7; /*< Address offset = 0x120 */
    uc_top_msg_temp_sense_reg_t TEMP_SENSE; /*< Address offset = 0x124 */
    uc_top_msg_autoneg_0_reg_t AUTONEG_0; /*< Address offset = 0x128 */
    uc_top_msg_autoneg_1_reg_t AUTONEG_1; /*< Address offset = 0x12c */
    uc_top_msg_fw_ver_0_reg_t FW_VER_0; /*< Address offset = 0x130 */
    uc_top_msg_fw_ver_1_reg_t FW_VER_1; /*< Address offset = 0x134 */
    uc_top_msg_fw_ver_2_reg_t FW_VER_2; /*< Address offset = 0x138 */
    uc_top_msg_fw_ver_3_reg_t FW_VER_3; /*< Address offset = 0x13c */
    uc_top_msg_fw_timebase_reg_t FW_TIMEBASE; /*< Address offset = 0x140 */
    uc_top_msg_fw_rate_limit_lane_0_reg_t FW_RATE_LIMIT_LANE_0; /*< Address offset = 0x144 */
    uc_top_msg_fw_rate_limit_lane_1_reg_t FW_RATE_LIMIT_LANE_1; /*< Address offset = 0x148 */
    uc_top_msg_fw_rate_limit_lane_2_reg_t FW_RATE_LIMIT_LANE_2; /*< Address offset = 0x14c */
    uc_top_msg_fw_rate_limit_lane_3_reg_t FW_RATE_LIMIT_LANE_3; /*< Address offset = 0x150 */
    uc_top_msg_fw_ref_clk_freq_0_reg_t FW_REF_CLK_FREQ_0; /*< Address offset = 0x154 */
    uc_top_msg_fw_ref_clk_freq_1_reg_t FW_REF_CLK_FREQ_1; /*< Address offset = 0x158 */
    uc_top_msg_fw_ref_clk_freq_2_reg_t FW_REF_CLK_FREQ_2; /*< Address offset = 0x15c */
    uc_top_msg_fw_ref_clk_freq_3_reg_t FW_REF_CLK_FREQ_3; /*< Address offset = 0x160 */
    uc_top_msg_fw_fuse_0_reg_t FW_FUSE_0; /*< Address offset = 0x164 */
    uc_top_msg_fw_fuse_1_reg_t FW_FUSE_1; /*< Address offset = 0x168 */
    uc_top_msg_fw_fuse_2_reg_t FW_FUSE_2; /*< Address offset = 0x16c */
    uc_top_msg_fw_fuse_3_reg_t FW_FUSE_3; /*< Address offset = 0x170 */
    uc_top_msg_fw_core_stat_0_reg_t FW_CORE_STAT_0; /*< Address offset = 0x174 */
    uc_top_msg_fw_core_stat_1_reg_t FW_CORE_STAT_1; /*< Address offset = 0x178 */
    uc_top_msg_fw_core_stat_2_reg_t FW_CORE_STAT_2; /*< Address offset = 0x17c */
    uc_top_msg_fw_spare_0_reg_t FW_SPARE_0; /*< Address offset = 0x180 */
    uc_top_msg_fw_spare_1_reg_t FW_SPARE_1; /*< Address offset = 0x184 */
    uc_top_msg_fw_spare_2_reg_t FW_SPARE_2; /*< Address offset = 0x188 */
    uc_top_msg_fw_spare_3_reg_t FW_SPARE_3; /*< Address offset = 0x18c */
    uc_top_msg_fw_spare_4_reg_t FW_SPARE_4; /*< Address offset = 0x190 */
    uc_top_msg_fw_spare_5_reg_t FW_SPARE_5; /*< Address offset = 0x194 */
    uc_top_msg_fw_spare_6_reg_t FW_SPARE_6; /*< Address offset = 0x198 */
    uc_top_msg_fw_spare_7_reg_t FW_SPARE_7; /*< Address offset = 0x19c */
    uc_top_msg_spare_port_ovrd_ctrl_reg_t SPARE_PORT_OVRD_CTRL; /*< Address offset = 0x1a0 */
    uc_top_msg_spare_port_ovrd_0_reg_t SPARE_PORT_OVRD_0; /*< Address offset = 0x1a4 */
    uc_top_msg_spare_port_ovrd_1_reg_t SPARE_PORT_OVRD_1; /*< Address offset = 0x1a8 */
    uc_top_msg_spare_port_preovrd_0_reg_t SPARE_PORT_PREOVRD_0; /*< Address offset = 0x1ac */
    uc_top_msg_spare_port_preovrd_1_reg_t SPARE_PORT_PREOVRD_1; /*< Address offset = 0x1b0 */
    uc_top_msg_uc_testbus_cfg_0_reg_t UC_TESTBUS_CFG_0; /*< Address offset = 0x1b4 */
    uc_top_msg_uc_testbus_cfg_1_reg_t UC_TESTBUS_CFG_1; /*< Address offset = 0x1b8 */
    uc_top_msg_uc_testbus_stat_0_reg_t UC_TESTBUS_STAT_0; /*< Address offset = 0x1bc */
    uc_top_msg_uc_testbus_stat_1_reg_t UC_TESTBUS_STAT_1; /*< Address offset = 0x1c0 */
    uc_top_msg_apb_ctrl_reg_t APB_CTRL; /*< Address offset = 0x1c4 */
    uc_top_msg_apb_stat_reg_t APB_STAT; /*< Address offset = 0x1c8 */
    uc_top_msg_apb_mask_stat_prelim_reg_t APB_MASK_STAT_PRELIM; /*< Address offset = 0x1cc */
    uc_top_msg_apb_mask_stat_final_reg_t APB_MASK_STAT_FINAL; /*< Address offset = 0x1d0 */
    uc_top_msg_uc_cpu_probe_addr_reg_t UC_CPU_PROBE_ADDR; /*< Address offset = 0x1d4 */
    uc_top_msg_uc_cpu_probe_out_reg_t UC_CPU_PROBE_OUT; /*< Address offset = 0x1d8 */
    const uint8_t        reservedArea0 [8];   /*< Address offset = 0x1dc */
    uc_top_msg_uc_rw_spare_0_reg_t UC_RW_SPARE_0; /*< Address offset = 0x1e4 */
    uc_top_msg_uc_rw_spare_1_reg_t UC_RW_SPARE_1; /*< Address offset = 0x1e8 */
    uc_top_msg_uc_rw_spare_2_reg_t UC_RW_SPARE_2; /*< Address offset = 0x1ec */
    uc_top_msg_uc_rw_spare_3_reg_t UC_RW_SPARE_3; /*< Address offset = 0x1f0 */
    uc_top_msg_uc_ro_spare_0_reg_t UC_RO_SPARE_0; /*< Address offset = 0x1f4 */
    uc_top_msg_uc_ro_spare_1_reg_t UC_RO_SPARE_1; /*< Address offset = 0x1f8 */
} uc_top_msg_t;     // size: 0x01f4

// AddressSpace struct pointer
//
#define DLNK_JESD0_PHY_UC_TOP  ((uc_top_msg_t*) DLNK_JESD0_PHY_UC_TOP_BASE)
#define DLNK_JESD1_PHY_UC_TOP  ((uc_top_msg_t*) DLNK_JESD1_PHY_UC_TOP_BASE)
#define DLNK_JESD2_PHY_UC_TOP  ((uc_top_msg_t*) DLNK_JESD2_PHY_UC_TOP_BASE)
#define DLNK_JESD3_PHY_UC_TOP  ((uc_top_msg_t*) DLNK_JESD3_PHY_UC_TOP_BASE)

// ******************************************* /Address Space

#endif      // _UC_TOP_MSG_H_

