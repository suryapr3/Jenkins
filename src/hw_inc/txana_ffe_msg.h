#ifndef _TXANA_FFE_MSG_H_
#define _TXANA_FFE_MSG_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_JESD0_PHY_PMA0_TXANA_FFE_GLOBAL_BASE  ( 0x06025100 )
#define DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q0_BASE      ( 0x06029100 )
#define DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q1_BASE      ( 0x0602d100 )
#define DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q2_BASE      ( 0x06031100 )
#define DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q3_BASE      ( 0x06035100 )
#define DLNK_JESD1_PHY_PMA0_TXANA_FFE_GLOBAL_BASE  ( 0x06825100 )
#define DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q0_BASE      ( 0x06829100 )
#define DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q1_BASE      ( 0x0682d100 )
#define DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q2_BASE      ( 0x06831100 )
#define DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q3_BASE      ( 0x06835100 )
#define DLNK_JESD2_PHY_PMA0_TXANA_FFE_GLOBAL_BASE  ( 0x07025100 )
#define DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q0_BASE      ( 0x07029100 )
#define DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q1_BASE      ( 0x0702d100 )
#define DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q2_BASE      ( 0x07031100 )
#define DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q3_BASE      ( 0x07035100 )
#define DLNK_JESD3_PHY_PMA0_TXANA_FFE_GLOBAL_BASE  ( 0x07825100 )
#define DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q0_BASE      ( 0x07829100 )
#define DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q1_BASE      ( 0x0782d100 )
#define DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q2_BASE      ( 0x07831100 )
#define DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q3_BASE      ( 0x07835100 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_OFFSET ( 0x00000000U )
#define TXANA_FFE_MSG_TXCLK_REFGEN0_OFFSET ( 0x00000004U )
#define TXANA_FFE_MSG_TXCLK_REFGEN1_OFFSET ( 0x00000008U )
#define TXANA_FFE_MSG_TXCLK_SENSE0_OFFSET ( 0x0000000cU )
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_OFFSET ( 0x00000010U )
#define TXANA_FFE_MSG_TXCLKMUX_THR0_OFFSET ( 0x00000014U )
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_OFFSET ( 0x00000018U )
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_OFFSET ( 0x0000001cU )
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_OFFSET ( 0x00000020U )
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_OFFSET ( 0x00000024U )
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_OFFSET ( 0x00000028U )
#define TXANA_FFE_MSG_TXCLKST2_THR0_OFFSET ( 0x0000002cU )
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_OFFSET ( 0x00000030U )
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_OFFSET ( 0x00000034U )
#define TXANA_FFE_MSG_TXCLKST2_THR1_OFFSET ( 0x00000038U )
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_OFFSET ( 0x0000003cU )
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_OFFSET ( 0x00000040U )
#define TXANA_FFE_MSG_TXCLKST2_THR2_OFFSET ( 0x00000044U )
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_OFFSET ( 0x00000048U )
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_OFFSET ( 0x0000004cU )
#define TXANA_FFE_MSG_TXCLKST2_THR3_OFFSET ( 0x00000050U )
#define TXANA_FFE_MSG_TXCOMP_CTRL0_OFFSET ( 0x00000054U )
#define TXANA_FFE_MSG_TXCOMP_CTRL1_OFFSET ( 0x00000058U )
#define TXANA_FFE_MSG_TXCOMP_CTRL2_OFFSET ( 0x0000005cU )
#define TXANA_FFE_MSG_TXDRV_SENSE0_OFFSET ( 0x00000060U )
#define TXANA_FFE_MSG_TXDRV_SENSE1_OFFSET ( 0x00000064U )
#define TXANA_FFE_MSG_TXDRV_SENSE2_OFFSET ( 0x00000068U )
#define TXANA_FFE_MSG_TXREG_CTRL0_OFFSET ( 0x0000006cU )
#define TXANA_FFE_MSG_TX_MISC_CTRL0_OFFSET ( 0x00000070U )
#define TXANA_FFE_MSG_TX_DFX0_OFFSET ( 0x00000074U )
#define TXANA_FFE_MSG_TX_DFX1_OFFSET ( 0x00000078U )
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_OFFSET ( 0x0000007cU )
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_OFFSET ( 0x00000080U )
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_OFFSET ( 0x00000084U )
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_OFFSET ( 0x00000088U )
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_OFFSET ( 0x0000008cU )
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_OFFSET ( 0x00000090U )
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_OFFSET ( 0x00000094U )
#define TXANA_FFE_MSG_TX_SPARE0_OFFSET ( 0x00000098U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKPATH_CTRL0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLK_REFGEN0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLK_REFGEN0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLK_REFGEN1_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLK_REFGEN1_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLK_SENSE0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLK_SENSE0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKMUX_CTUNE0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKMUX_THR0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKMUX_THR0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST1_CTUNE0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST1_CTUNE1_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST1_CTUNE2_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_CTUNE0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_CTUNE1_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_THR0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_THR0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_CTUNE2_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_CTUNE3_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_THR1_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_THR1_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_CTUNE4_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_CTUNE5_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_THR2_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_THR2_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_CTUNE6_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_CTUNE7_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKST2_THR3_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKST2_THR3_OFFSET ) ))
#define TXANA_FFE_MSG_TXCOMP_CTRL0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCOMP_CTRL0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCOMP_CTRL1_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCOMP_CTRL1_OFFSET ) ))
#define TXANA_FFE_MSG_TXCOMP_CTRL2_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCOMP_CTRL2_OFFSET ) ))
#define TXANA_FFE_MSG_TXDRV_SENSE0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXDRV_SENSE0_OFFSET ) ))
#define TXANA_FFE_MSG_TXDRV_SENSE1_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXDRV_SENSE1_OFFSET ) ))
#define TXANA_FFE_MSG_TXDRV_SENSE2_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXDRV_SENSE2_OFFSET ) ))
#define TXANA_FFE_MSG_TXREG_CTRL0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXREG_CTRL0_OFFSET ) ))
#define TXANA_FFE_MSG_TX_MISC_CTRL0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TX_MISC_CTRL0_OFFSET ) ))
#define TXANA_FFE_MSG_TX_DFX0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TX_DFX0_OFFSET ) ))
#define TXANA_FFE_MSG_TX_DFX1_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TX_DFX1_OFFSET ) ))
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_OFFSET ) ))
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_OFFSET ) ))
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_OFFSET ) ))
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_OFFSET ) ))
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TX_BIAS_CTRL0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKDIV_CTRL0_OFFSET ) ))
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TXCLKDIV_CTRL1_OFFSET ) ))
#define TXANA_FFE_MSG_TX_SPARE0_ADR(_BASE) (( ( _BASE ) + ( TXANA_FFE_MSG_TX_SPARE0_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKPATH_CTRL0 register description at address offset 0x0
  *
  * Register default value:        0x00000400
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkpath_ctrl0
  * txclkpath_ctrl0
  */

typedef union {
  struct {
    uint32_t TXCLKPATH_DFX_EN : 1;
    ///< Clkpath DFX clock enable
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXCLKPATH_RST_B : 1;
    ///< Clkpath reset (st1 and st2)
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t TXCLKPATH_PD_B : 1;
    ///< Clkpath PD (st1 and st2).  Active LOW
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t TXCLKPATH_DIVRATIO : 4;
    ///< Select div ratio in st1
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t TXCLKMUX_SEL_1HOT : 4;
    ///< Select clk phase order for clk0,clk90,clk180,clk270
    ///< AccessType="RW" BitOffset="7" ResetValue="0x8"
    uint32_t TXCLKMUX_DC_MEAS_CLK_SEL : 3;
    ///< Select between 4 clk phases for DC sensing in clkmux_sns
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t  : 18;
    ///< Reserved
    ///< AccessType="RO" BitOffset="14" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkpath_ctrl0_reg_t;

#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_DEFAULT (0x00000400U)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_RD_MASK (0x00003fffU)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_WR_MASK (0x00003fffU)


///< Clkpath DFX clock enable
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_DFX_EN_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_DFX_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_DFX_EN_BF_MSK (0x00000001)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_DFX_EN_BF_DEF (0x00000000)

///< Clkpath reset (st1 and st2)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_RST_B_BF_OFF ( 1)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_RST_B_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_RST_B_BF_MSK (0x00000002)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_RST_B_BF_DEF (0x00000000)

///< Clkpath PD (st1 and st2).  Active LOW
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_PD_B_BF_OFF ( 2)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_PD_B_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_PD_B_BF_MSK (0x00000004)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_PD_B_BF_DEF (0x00000000)

///< Select div ratio in st1
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_DIVRATIO_BF_OFF ( 3)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_DIVRATIO_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_DIVRATIO_BF_MSK (0x00000078)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKPATH_DIVRATIO_BF_DEF (0x00000000)

///< Select clk phase order for clk0,clk90,clk180,clk270
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKMUX_SEL_1HOT_BF_OFF ( 7)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKMUX_SEL_1HOT_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKMUX_SEL_1HOT_BF_MSK (0x00000780)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKMUX_SEL_1HOT_BF_DEF (0x00000400)

///< Select between 4 clk phases for DC sensing in clkmux_sns
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKMUX_DC_MEAS_CLK_SEL_BF_OFF (11)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKMUX_DC_MEAS_CLK_SEL_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKMUX_DC_MEAS_CLK_SEL_BF_MSK (0x00003800)
#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_TXCLKMUX_DC_MEAS_CLK_SEL_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLK_REFGEN0 register description at address offset 0x4
  *
  * Register default value:        0x00024924
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclk_refgen0
  * txclk_refgen0
  */

typedef union {
  struct {
    uint32_t TXCLKMUX_REFGEN_NMOS_CURRENT_THERM : 3;
    ///< Controls clkmux refgen nmos current source. Thermometer encoded
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t TXCLKMUX_REFGEN_PMOS_CURRENT_THERM : 3;
    ///< Controls clkmux refgen pmos current source. Thermometer encoded
    ///< AccessType="RW" BitOffset="3" ResetValue="0x4"
    uint32_t TXCLKMUX_REFGEN_VNMIN_F_THERM : 3;
    ///< Tune refgen current source vmin for clkmux (falling edge). Thermometer
    ///< encoded
    ///< AccessType="RW" BitOffset="6" ResetValue="0x4"
    uint32_t TXCLKMUX_REFGEN_VNMIN_R_THERM : 3;
    ///< Tune refgen current source vmin for clkmux (rising edge). Thermometer
    ///< encoded
    ///< AccessType="RW" BitOffset="9" ResetValue="0x4"
    uint32_t TXCLKMUX_REFGEN_VPMAX_F_THERM : 3;
    ///< Tune refgen current source vmax for clkmux (falling edge). Thermometer
    ///< encoded
    ///< AccessType="RW" BitOffset="12" ResetValue="0x4"
    uint32_t TXCLKMUX_REFGEN_VPMAX_R_THERM : 3;
    ///< Tune refgen current source vmax for clkmux (rising edge). Thermometer
    ///< encoded
    ///< AccessType="RW" BitOffset="15" ResetValue="0x4"
    uint32_t TXCLKMUX_REFGEN_BIAS_EN : 1;
    ///< Enable/Disable clkmux NMOS refgen current source (why two separate
    ///< en?)
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t TXCLKMUX_REFGEN_NMOS_EN : 1;
    ///< Enable clkmux NMOS refgen current source
    ///< AccessType="RW" BitOffset="19" ResetValue="0x0"
    uint32_t TXCLKMUX_REFGEN_PMOS_EN : 1;
    ///< Enable clkmux PMOS refgen current source
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t  : 11;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclk_refgen0_reg_t;

#define TXANA_FFE_MSG_TXCLK_REFGEN0_DEFAULT (0x00024924U)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_RD_MASK (0x001fffffU)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_WR_MASK (0x001fffffU)


///< Controls clkmux refgen nmos current source. Thermometer encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_NMOS_CURRENT_THERM_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_NMOS_CURRENT_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_NMOS_CURRENT_THERM_BF_MSK (0x00000007)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_NMOS_CURRENT_THERM_BF_DEF (0x00000004)

///< Controls clkmux refgen pmos current source. Thermometer encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_PMOS_CURRENT_THERM_BF_OFF ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_PMOS_CURRENT_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_PMOS_CURRENT_THERM_BF_MSK (0x00000038)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_PMOS_CURRENT_THERM_BF_DEF (0x00000020)

///< Tune refgen current source vmin for clkmux (falling edge). Thermometer
///< encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VNMIN_F_THERM_BF_OFF ( 6)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VNMIN_F_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VNMIN_F_THERM_BF_MSK (0x000001C0)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VNMIN_F_THERM_BF_DEF (0x00000100)

///< Tune refgen current source vmin for clkmux (rising edge). Thermometer
///< encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VNMIN_R_THERM_BF_OFF ( 9)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VNMIN_R_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VNMIN_R_THERM_BF_MSK (0x00000E00)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VNMIN_R_THERM_BF_DEF (0x00000800)

///< Tune refgen current source vmax for clkmux (falling edge). Thermometer
///< encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VPMAX_F_THERM_BF_OFF (12)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VPMAX_F_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VPMAX_F_THERM_BF_MSK (0x00007000)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VPMAX_F_THERM_BF_DEF (0x00004000)

///< Tune refgen current source vmax for clkmux (rising edge). Thermometer
///< encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VPMAX_R_THERM_BF_OFF (15)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VPMAX_R_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VPMAX_R_THERM_BF_MSK (0x00038000)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_VPMAX_R_THERM_BF_DEF (0x00020000)

///< Enable/Disable clkmux NMOS refgen current source (why two separate
///< en?)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_BIAS_EN_BF_OFF (18)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_BIAS_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_BIAS_EN_BF_MSK (0x00040000)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_BIAS_EN_BF_DEF (0x00000000)

///< Enable clkmux NMOS refgen current source
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_NMOS_EN_BF_OFF (19)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_NMOS_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_NMOS_EN_BF_MSK (0x00080000)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_NMOS_EN_BF_DEF (0x00000000)

///< Enable clkmux PMOS refgen current source
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_PMOS_EN_BF_OFF (20)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_PMOS_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_PMOS_EN_BF_MSK (0x00100000)
#define TXANA_FFE_MSG_TXCLK_REFGEN0_TXCLKMUX_REFGEN_PMOS_EN_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLK_REFGEN1 register description at address offset 0x8
  *
  * Register default value:        0x92492224
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclk_refgen1
  * txclk_refgen1
  */

typedef union {
  struct {
    uint32_t TXCLKST1_REFGEN_NMOS_CURRENT_THERM : 3;
    ///< Controls st1 refgen nmos current source. Thermometer encoded
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t TXCLKST1_REFGEN_PMOS_CURRENT_THERM : 3;
    ///< Controls st1 refgen pmos current source. Thermometer encoded
    ///< AccessType="RW" BitOffset="3" ResetValue="0x4"
    uint32_t TXCLKST1_REFGEN_VNMIN_THERM : 4;
    ///< Tune refgen current source vmin for st1. Thermometer encoded
    ///< AccessType="RW" BitOffset="6" ResetValue="0x8"
    uint32_t TXCLKST1_REFGEN_VPMAX_THERM : 4;
    ///< Tune refgen current source vmax for st1. Thermometer encoded
    ///< AccessType="RW" BitOffset="10" ResetValue="0x8"
    uint32_t TXCLKST2_REFGEN_NMOS_CURRENT_THERM : 3;
    ///< Controls st2 refgen nmos current source. Thermometer encoded
    ///< AccessType="RW" BitOffset="14" ResetValue="0x4"
    uint32_t TXCLKST2_REFGEN_PMOS_CURRENT_THERM : 3;
    ///< Controls st2 refgen pmos current source. Thermometer encoded
    ///< AccessType="RW" BitOffset="17" ResetValue="0x4"
    uint32_t TXCLKST2_REFGEN_VNMIN_F_THERM : 3;
    ///< Tune refgen current source vmin for st2 (falling edge). Thermometer
    ///< encoded
    ///< AccessType="RW" BitOffset="20" ResetValue="0x4"
    uint32_t TXCLKST2_REFGEN_VNMIN_R_THERM : 3;
    ///< Tune refgen current source vmin for st2 (rising edge). Thermometer
    ///< encoded
    ///< AccessType="RW" BitOffset="23" ResetValue="0x4"
    uint32_t TXCLKST2_REFGEN_VPMAX_F_THERM : 3;
    ///< Tune refgen current source vmax for st2 (falling edge). Thermometer
    ///< encoded
    ///< AccessType="RW" BitOffset="26" ResetValue="0x4"
    uint32_t TXCLKST2_REFGEN_VPMAX_R_THERM : 3;
    ///< Tune refgen current source vmax for st2 (rising edge). Thermometer
    ///< encoded
    ///< AccessType="RW" BitOffset="29" ResetValue="0x4"
  } ;
  uint32_t value;
} txana_ffe_msg_txclk_refgen1_reg_t;

#define TXANA_FFE_MSG_TXCLK_REFGEN1_DEFAULT (0x92492224U)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_RD_MASK (0xffffffffU)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_WR_MASK (0xffffffffU)


///< Controls st1 refgen nmos current source. Thermometer encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_NMOS_CURRENT_THERM_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_NMOS_CURRENT_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_NMOS_CURRENT_THERM_BF_MSK (0x00000007)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_NMOS_CURRENT_THERM_BF_DEF (0x00000004)

///< Controls st1 refgen pmos current source. Thermometer encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_PMOS_CURRENT_THERM_BF_OFF ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_PMOS_CURRENT_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_PMOS_CURRENT_THERM_BF_MSK (0x00000038)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_PMOS_CURRENT_THERM_BF_DEF (0x00000020)

///< Tune refgen current source vmin for st1. Thermometer encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_VNMIN_THERM_BF_OFF ( 6)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_VNMIN_THERM_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_VNMIN_THERM_BF_MSK (0x000003C0)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_VNMIN_THERM_BF_DEF (0x00000200)

///< Tune refgen current source vmax for st1. Thermometer encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_VPMAX_THERM_BF_OFF (10)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_VPMAX_THERM_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_VPMAX_THERM_BF_MSK (0x00003C00)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST1_REFGEN_VPMAX_THERM_BF_DEF (0x00002000)

///< Controls st2 refgen nmos current source. Thermometer encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_NMOS_CURRENT_THERM_BF_OFF (14)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_NMOS_CURRENT_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_NMOS_CURRENT_THERM_BF_MSK (0x0001C000)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_NMOS_CURRENT_THERM_BF_DEF (0x00010000)

///< Controls st2 refgen pmos current source. Thermometer encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_PMOS_CURRENT_THERM_BF_OFF (17)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_PMOS_CURRENT_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_PMOS_CURRENT_THERM_BF_MSK (0x000E0000)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_PMOS_CURRENT_THERM_BF_DEF (0x00080000)

///< Tune refgen current source vmin for st2 (falling edge). Thermometer
///< encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VNMIN_F_THERM_BF_OFF (20)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VNMIN_F_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VNMIN_F_THERM_BF_MSK (0x00700000)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VNMIN_F_THERM_BF_DEF (0x00400000)

///< Tune refgen current source vmin for st2 (rising edge). Thermometer
///< encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VNMIN_R_THERM_BF_OFF (23)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VNMIN_R_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VNMIN_R_THERM_BF_MSK (0x03800000)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VNMIN_R_THERM_BF_DEF (0x02000000)

///< Tune refgen current source vmax for st2 (falling edge). Thermometer
///< encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VPMAX_F_THERM_BF_OFF (26)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VPMAX_F_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VPMAX_F_THERM_BF_MSK (0x1C000000)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VPMAX_F_THERM_BF_DEF (0x10000000)

///< Tune refgen current source vmax for st2 (rising edge). Thermometer
///< encoded
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VPMAX_R_THERM_BF_OFF (29)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VPMAX_R_THERM_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VPMAX_R_THERM_BF_MSK (0xE0000000)
#define TXANA_FFE_MSG_TXCLK_REFGEN1_TXCLKST2_REFGEN_VPMAX_R_THERM_BF_DEF (0x80000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLK_SENSE0 register description at address offset 0xc
  *
  * Register default value:        0x00000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclk_sense0
  * txclk_sense0
  */

typedef union {
  struct {
    uint32_t TXCLKST1_CLKSNS_DC_MEAS_EN : 1;
    ///< Select dc measurement in st1_sns
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS_DC_MEAS_PHASE_SEL : 2;
    ///< Select between 4 clk phases for DC sensing in st1_sns
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS_E2E_MEAS_CK1_SEL_1HOT : 4;
    ///< Select first clock phase for r2r or f2f sensing in st1_sns
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS_E2E_MEAS_CK2_SEL_1HOT : 4;
    ///< Select second clock phase for r2r or f2f sensing in st1_sns
    ///< AccessType="RW" BitOffset="7" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS_E2E_MEAS_EN : 1;
    ///< Select e2e measurement in st1_sns
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS_E2E_MEAS_TYPE : 3;
    ///< Select between r2r, f2f, p2nr and p2nf sensing in st1_sns , <2> is
    ///< unused
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t TXCLKST1_FINECAL_CKI_BYPASS : 1;
    ///< Bypass st1 finecal calibration of clk0/180
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS_VCCREG_BY2_MEAS_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS2_EN : 1;
    ///< Enable Stage1 Sensor 2 - 2 sensor mode.  0: Disable stg1 sensor2 -
    ///< for sensor 1 mode.  1:- Enable stg1 sensor 2 - for 2 sensor mode
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS2_DC_MEAS_EN : 1;
    ///< Select dc measurement in st1_sns2
    ///< AccessType="RW" BitOffset="19" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS2_DC_MEAS_PHASE_SEL : 2;
    ///< Select between 4 clk phases for DC sensing in st1_sns2
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS2_E2E_MEAS_CK1_SEL_1HOT : 4;
    ///< Select first clock phase for r2r or f2f sensing in st1_sns2
    ///< AccessType="RW" BitOffset="22" ResetValue="0x0"
    uint32_t TXCLKST1_CLKSNS2_E2E_MEAS_CK2_SEL_1HOT : 4;
    ///< Select second clock phase for r2r or f2f sensing in st1_sns2
    ///< AccessType="RW" BitOffset="26" ResetValue="0x0"
    uint32_t  : 2;
    ///< Reserved
    ///< AccessType="RO" BitOffset="30" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclk_sense0_reg_t;

#define TXANA_FFE_MSG_TXCLK_SENSE0_DEFAULT (0x00000000U)
#define TXANA_FFE_MSG_TXCLK_SENSE0_RD_MASK (0x3fffffffU)
#define TXANA_FFE_MSG_TXCLK_SENSE0_WR_MASK (0x3fffffffU)


///< Select dc measurement in st1_sns
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_DC_MEAS_EN_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_DC_MEAS_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_DC_MEAS_EN_BF_MSK (0x00000001)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_DC_MEAS_EN_BF_DEF (0x00000000)

///< Select between 4 clk phases for DC sensing in st1_sns
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_DC_MEAS_PHASE_SEL_BF_OFF ( 1)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_DC_MEAS_PHASE_SEL_BF_WID ( 2)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_DC_MEAS_PHASE_SEL_BF_MSK (0x00000006)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_DC_MEAS_PHASE_SEL_BF_DEF (0x00000000)

///< Select first clock phase for r2r or f2f sensing in st1_sns
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_CK1_SEL_1HOT_BF_OFF ( 3)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_CK1_SEL_1HOT_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_CK1_SEL_1HOT_BF_MSK (0x00000078)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_CK1_SEL_1HOT_BF_DEF (0x00000000)

///< Select second clock phase for r2r or f2f sensing in st1_sns
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_CK2_SEL_1HOT_BF_OFF ( 7)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_CK2_SEL_1HOT_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_CK2_SEL_1HOT_BF_MSK (0x00000780)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_CK2_SEL_1HOT_BF_DEF (0x00000000)

///< Select e2e measurement in st1_sns
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_EN_BF_OFF (11)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_EN_BF_MSK (0x00000800)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_EN_BF_DEF (0x00000000)

///< Select between r2r, f2f, p2nr and p2nf sensing in st1_sns , <2> is
///< unused
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_TYPE_BF_OFF (12)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_TYPE_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_TYPE_BF_MSK (0x00007000)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_E2E_MEAS_TYPE_BF_DEF (0x00000000)

///< Bypass st1 finecal calibration of clk0/180
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_FINECAL_CKI_BYP_BF_OFF (15)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_FINECAL_CKI_BYP_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_FINECAL_CKI_BYP_BF_MSK (0x00008000)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_FINECAL_CKI_BYP_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_EN_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_EN_BF_MSK (0x00010000)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_EN_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_VCCREG_BY2_MEAS_EN_BF_OFF (17)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_VCCREG_BY2_MEAS_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_VCCREG_BY2_MEAS_EN_BF_MSK (0x00020000)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS_VCCREG_BY2_MEAS_EN_BF_DEF (0x00000000)

///< Enable Stage1 Sensor 2 - 2 sensor mode.  0: Disable stg1 sensor2 -
///< for sensor 1 mode.  1:- Enable stg1 sensor 2 - for 2 sensor mode
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_EN_BF_OFF (18)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_EN_BF_MSK (0x00040000)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_EN_BF_DEF (0x00000000)

///< Select dc measurement in st1_sns2
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_DC_MEAS_EN_BF_OFF (19)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_DC_MEAS_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_DC_MEAS_EN_BF_MSK (0x00080000)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_DC_MEAS_EN_BF_DEF (0x00000000)

///< Select between 4 clk phases for DC sensing in st1_sns2
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_DC_MEAS_PHASE_SEL_BF_OFF (20)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_DC_MEAS_PHASE_SEL_BF_WID ( 2)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_DC_MEAS_PHASE_SEL_BF_MSK (0x00300000)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_DC_MEAS_PHASE_SEL_BF_DEF (0x00000000)

///< Select first clock phase for r2r or f2f sensing in st1_sns2
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_E2E_MEAS_CK1_SEL_1HOT_BF_OFF (22)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_E2E_MEAS_CK1_SEL_1HOT_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_E2E_MEAS_CK1_SEL_1HOT_BF_MSK (0x03C00000)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_E2E_MEAS_CK1_SEL_1HOT_BF_DEF (0x00000000)

///< Select second clock phase for r2r or f2f sensing in st1_sns2
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_E2E_MEAS_CK2_SEL_1HOT_BF_OFF (26)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_E2E_MEAS_CK2_SEL_1HOT_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_E2E_MEAS_CK2_SEL_1HOT_BF_MSK (0x3C000000)
#define TXANA_FFE_MSG_TXCLK_SENSE0_TXCLKST1_CLKSNS2_E2E_MEAS_CK2_SEL_1HOT_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKMUX_CTUNE0 register description at address offset 0x10
  *
  * Register default value:        0x08080808
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkmux_ctune0
  * txclkmux_ctune0
  */

typedef union {
  struct {
    uint32_t TXCLKMUX_FINECAL_EVEN_F_GRY : 4;
    ///< Tune clkmux delay (falling edge): even steps
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t TXCLKMUX_FINECAL_EVEN_R_GRY : 4;
    ///< Tune clkmux delay (rising edge): even steps
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t TXCLKMUX_FINECAL_ODD_F_GRY : 4;
    ///< Tune clkmux delay (falling edge): odd steps
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t TXCLKMUX_FINECAL_ODD_R_GRY : 4;
    ///< Tune clkmux delay (rising edge): odd steps
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkmux_ctune0_reg_t;

#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_DEFAULT (0x08080808U)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_RD_MASK (0x0f0f0f0fU)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_WR_MASK (0x0f0f0f0fU)


///< Tune clkmux delay (falling edge): even steps
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_EVEN_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_EVEN_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_EVEN_F_GRY_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_EVEN_F_GRY_BF_DEF (0x00000008)

///< Tune clkmux delay (rising edge): even steps
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_EVEN_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_EVEN_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_EVEN_R_GRY_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_EVEN_R_GRY_BF_DEF (0x00000800)

///< Tune clkmux delay (falling edge): odd steps
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_ODD_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_ODD_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_ODD_F_GRY_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_ODD_F_GRY_BF_DEF (0x00080000)

///< Tune clkmux delay (rising edge): odd steps
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_ODD_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_ODD_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_ODD_R_GRY_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_TXCLKMUX_FINECAL_ODD_R_GRY_BF_DEF (0x08000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKMUX_THR0 register description at address offset 0x14
  *
  * Register default value:        0x04040404
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkmux_thr0
  * txclkmux_thr0
  */

typedef union {
  struct {
    uint32_t TXCLKMUX_FINECAL_THR_N_F_GRY : 3;
    ///< Tune clkmux delay (falling edge, nmos stage): controls mux lvl2
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
    uint32_t TXCLKMUX_FINECAL_THR_N_R_GRY : 3;
    ///< Tune clkmux delay (rising edge, nmos stage): controls mux lvl2
    ///< AccessType="RW" BitOffset="8" ResetValue="0x4"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t TXCLKMUX_FINECAL_THR_P_F_GRY : 3;
    ///< Tune clkmux delay (falling edge, pmos stage): controls mux lvl2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x4"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
    uint32_t TXCLKMUX_FINECAL_THR_P_R_GRY : 3;
    ///< Tune clkmux delay (rising edge, pmos stage): controls mux lvl2
    ///< AccessType="RW" BitOffset="24" ResetValue="0x4"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkmux_thr0_reg_t;

#define TXANA_FFE_MSG_TXCLKMUX_THR0_DEFAULT (0x04040404U)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_RD_MASK (0x07070707U)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_WR_MASK (0x07070707U)


///< Tune clkmux delay (falling edge, nmos stage): controls mux lvl2
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_N_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_N_F_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_N_F_GRY_BF_MSK (0x00000007)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_N_F_GRY_BF_DEF (0x00000004)

///< Tune clkmux delay (rising edge, nmos stage): controls mux lvl2
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_N_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_N_R_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_N_R_GRY_BF_MSK (0x00000700)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_N_R_GRY_BF_DEF (0x00000400)

///< Tune clkmux delay (falling edge, pmos stage): controls mux lvl2
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_P_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_P_F_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_P_F_GRY_BF_MSK (0x00070000)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_P_F_GRY_BF_DEF (0x00040000)

///< Tune clkmux delay (rising edge, pmos stage): controls mux lvl2
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_P_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_P_R_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_P_R_GRY_BF_MSK (0x07000000)
#define TXANA_FFE_MSG_TXCLKMUX_THR0_TXCLKMUX_FINECAL_THR_P_R_GRY_BF_DEF (0x04000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST1_CTUNE0 register description at address offset 0x18
  *
  * Register default value:        0x10101010
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst1_ctune0
  * txclkst1_ctune0
  */

typedef union {
  struct {
    uint32_t TXCLKST1_FINECAL_CK0_F_GRY : 5;
    ///< Tune st1 step2 clk0 falling edge. Gray Encoded
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
    uint32_t TXCLKST1_FINECAL_CK0_R_GRY : 5;
    ///< Tune st1 step2 clk0 rising edge. Gray Encoded
    ///< AccessType="RW" BitOffset="8" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="13" ResetValue="None"
    uint32_t TXCLKST1_FINECAL_CK90_F_GRY : 5;
    ///< Tune st1 step2 clk90 falling edge. Gray Encoded
    ///< AccessType="RW" BitOffset="16" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
    uint32_t TXCLKST1_FINECAL_CK90_R_GRY : 5;
    ///< Tune st1 step2 clk90 rising edge. Gray Encoded
    ///< AccessType="RW" BitOffset="24" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="29" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst1_ctune0_reg_t;

#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_DEFAULT (0x10101010U)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_RD_MASK (0x1f1f1f1fU)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_WR_MASK (0x1f1f1f1fU)


///< Tune st1 step2 clk0 falling edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK0_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK0_F_GRY_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK0_F_GRY_BF_MSK (0x0000001F)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK0_F_GRY_BF_DEF (0x00000010)

///< Tune st1 step2 clk0 rising edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK0_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK0_R_GRY_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK0_R_GRY_BF_MSK (0x00001F00)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK0_R_GRY_BF_DEF (0x00001000)

///< Tune st1 step2 clk90 falling edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK90_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK90_F_GRY_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK90_F_GRY_BF_MSK (0x001F0000)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK90_F_GRY_BF_DEF (0x00100000)

///< Tune st1 step2 clk90 rising edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK90_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK90_R_GRY_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK90_R_GRY_BF_MSK (0x1F000000)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_TXCLKST1_FINECAL_CK90_R_GRY_BF_DEF (0x10000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST1_CTUNE1 register description at address offset 0x1c
  *
  * Register default value:        0x10101010
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst1_ctune1
  * txclkst1_ctune1
  */

typedef union {
  struct {
    uint32_t TXCLKST1_FINECAL_CK180_F_GRY : 5;
    ///< Tune st1 step2 clk180 falling edge. Gray Encoded
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
    uint32_t TXCLKST1_FINECAL_CK180_R_GRY : 5;
    ///< Tune st1 step2 clk180 rising edge. Gray Encoded
    ///< AccessType="RW" BitOffset="8" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="13" ResetValue="None"
    uint32_t TXCLKST1_FINECAL_CK270_F_GRY : 5;
    ///< Tune st1 step2 clk270 falling edge. Gray Encoded
    ///< AccessType="RW" BitOffset="16" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
    uint32_t TXCLKST1_FINECAL_CK270_R_GRY : 5;
    ///< Tune st1 step2 clk270 rising edge. Gray Encoded
    ///< AccessType="RW" BitOffset="24" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="29" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst1_ctune1_reg_t;

#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_DEFAULT (0x10101010U)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_RD_MASK (0x1f1f1f1fU)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_WR_MASK (0x1f1f1f1fU)


///< Tune st1 step2 clk180 falling edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK180_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK180_F_GRY_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK180_F_GRY_BF_MSK (0x0000001F)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK180_F_GRY_BF_DEF (0x00000010)

///< Tune st1 step2 clk180 rising edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK180_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK180_R_GRY_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK180_R_GRY_BF_MSK (0x00001F00)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK180_R_GRY_BF_DEF (0x00001000)

///< Tune st1 step2 clk270 falling edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK270_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK270_F_GRY_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK270_F_GRY_BF_MSK (0x001F0000)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK270_F_GRY_BF_DEF (0x00100000)

///< Tune st1 step2 clk270 rising edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK270_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK270_R_GRY_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK270_R_GRY_BF_MSK (0x1F000000)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_TXCLKST1_FINECAL_CK270_R_GRY_BF_DEF (0x10000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST1_CTUNE2 register description at address offset 0x20
  *
  * Register default value:        0x10101010
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst1_ctune2
  * txclkst1_ctune2
  */

typedef union {
  struct {
    uint32_t TXCLKST1_IQCAL_CK270_F_GRY : 5;
    ///< Tune st1 step1 clk270 falling edge. Gray Encoded
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
    uint32_t TXCLKST1_IQCAL_CK270_R : 5;
    ///< Tune st1 step1 clk270 rising edge. Gray Encoded
    ///< AccessType="RW" BitOffset="8" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="13" ResetValue="None"
    uint32_t TXCLKST1_IQCAL_CK90_F : 5;
    ///< Tune st1 step1 clk90 falling edge. Gray Encoded
    ///< AccessType="RW" BitOffset="16" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="21" ResetValue="None"
    uint32_t TXCLKST1_IQCAL_CK90_R : 5;
    ///< Tune st1 step1 clk90 rising edge. Gray Encoded
    ///< AccessType="RW" BitOffset="24" ResetValue="0x10"
    uint32_t  : 3;
    ///< Reserved
    ///< AccessType="RO" BitOffset="29" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst1_ctune2_reg_t;

#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_DEFAULT (0x10101010U)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_RD_MASK (0x1f1f1f1fU)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_WR_MASK (0x1f1f1f1fU)


///< Tune st1 step1 clk270 falling edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK270_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK270_F_GRY_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK270_F_GRY_BF_MSK (0x0000001F)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK270_F_GRY_BF_DEF (0x00000010)

///< Tune st1 step1 clk270 rising edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK270_R_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK270_R_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK270_R_BF_MSK (0x00001F00)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK270_R_BF_DEF (0x00001000)

///< Tune st1 step1 clk90 falling edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK90_F_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK90_F_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK90_F_BF_MSK (0x001F0000)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK90_F_BF_DEF (0x00100000)

///< Tune st1 step1 clk90 rising edge. Gray Encoded
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK90_R_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK90_R_BF_WID ( 5)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK90_R_BF_MSK (0x1F000000)
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_TXCLKST1_IQCAL_CK90_R_BF_DEF (0x10000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_CTUNE0 register description at address offset 0x24
  *
  * Register default value:        0x08080808
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_ctune0
  * txclkst2_ctune0
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_NPH0_EVEN_F_GRY : 4;
    ///< Tune st2 clk0_nph falling edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH0_EVEN_R_GRY : 4;
    ///< Tune st2 clk0_nph rising edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH0_ODD_F_GRY : 4;
    ///< Tune st2 clk0_nph falling edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH0_ODD_R_GRY : 4;
    ///< Tune st2 clk0_nph rising edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_ctune0_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_DEFAULT (0x08080808U)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_RD_MASK (0x0f0f0f0fU)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_WR_MASK (0x0f0f0f0fU)


///< Tune st2 clk0_nph falling edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_EVEN_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_EVEN_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_EVEN_F_GRY_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_EVEN_F_GRY_BF_DEF (0x00000008)

///< Tune st2 clk0_nph rising edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_EVEN_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_EVEN_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_EVEN_R_GRY_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_EVEN_R_GRY_BF_DEF (0x00000800)

///< Tune st2 clk0_nph falling edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_ODD_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_ODD_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_ODD_F_GRY_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_ODD_F_GRY_BF_DEF (0x00080000)

///< Tune st2 clk0_nph rising edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_ODD_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_ODD_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_ODD_R_GRY_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_TXCLKST2_FINECAL_NPH0_ODD_R_GRY_BF_DEF (0x08000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_CTUNE1 register description at address offset 0x28
  *
  * Register default value:        0x08080808
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_ctune1
  * txclkst2_ctune1
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_PPH0_EVEN_F_GRY : 4;
    ///< Tune st2 clk0_pph falling edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH0_EVEN_R_GRY : 4;
    ///< Tune st2 clk0_pph rising edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH0_ODD_F_GRY : 4;
    ///< Tune st2 clk0_pph falling edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH0_ODD_R_GRY : 4;
    ///< Tune st2 clk0_pph rising edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_ctune1_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_DEFAULT (0x08080808U)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_RD_MASK (0x0f0f0f0fU)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_WR_MASK (0x0f0f0f0fU)


///< Tune st2 clk0_pph falling edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_EVEN_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_EVEN_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_EVEN_F_GRY_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_EVEN_F_GRY_BF_DEF (0x00000008)

///< Tune st2 clk0_pph rising edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_EVEN_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_EVEN_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_EVEN_R_GRY_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_EVEN_R_GRY_BF_DEF (0x00000800)

///< Tune st2 clk0_pph falling edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_ODD_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_ODD_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_ODD_F_GRY_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_ODD_F_GRY_BF_DEF (0x00080000)

///< Tune st2 clk0_pph rising edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_ODD_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_ODD_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_ODD_R_GRY_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_TXCLKST2_FINECAL_PPH0_ODD_R_GRY_BF_DEF (0x08000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_THR0 register description at address offset 0x2c
  *
  * Register default value:        0x05050505
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_thr0
  * txclkst2_thr0
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_NPH0_THR_F_GRY : 3;
    ///< Tune st2 clk0_nph falling edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="0" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH0_THR_R_GRY : 3;
    ///< Tune st2 clk0_nph rising edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="8" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH0_THR_F_GRY : 3;
    ///< Tune st2 clk0_pph falling edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH0_THR_R_GRY : 3;
    ///< Tune st2 clk0_pph rising edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="24" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_thr0_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_THR0_DEFAULT (0x05050505U)
#define TXANA_FFE_MSG_TXCLKST2_THR0_RD_MASK (0x07070707U)
#define TXANA_FFE_MSG_TXCLKST2_THR0_WR_MASK (0x07070707U)


///< Tune st2 clk0_nph falling edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_NPH0_THR_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_NPH0_THR_F_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_NPH0_THR_F_GRY_BF_MSK (0x00000007)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_NPH0_THR_F_GRY_BF_DEF (0x00000005)

///< Tune st2 clk0_nph rising edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_NPH0_THR_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_NPH0_THR_R_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_NPH0_THR_R_GRY_BF_MSK (0x00000700)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_NPH0_THR_R_GRY_BF_DEF (0x00000500)

///< Tune st2 clk0_pph falling edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_PPH0_THR_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_PPH0_THR_F_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_PPH0_THR_F_GRY_BF_MSK (0x00070000)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_PPH0_THR_F_GRY_BF_DEF (0x00050000)

///< Tune st2 clk0_pph rising edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_PPH0_THR_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_PPH0_THR_R_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_PPH0_THR_R_GRY_BF_MSK (0x07000000)
#define TXANA_FFE_MSG_TXCLKST2_THR0_TXCLKST2_FINECAL_PPH0_THR_R_GRY_BF_DEF (0x05000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_CTUNE2 register description at address offset 0x30
  *
  * Register default value:        0x08080808
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_ctune2
  * txclkst2_ctune2
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_NPH1_EVEN_F_GRY : 4;
    ///< Tune st2 clk90_nph falling edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH1_EVEN_R_GRY : 4;
    ///< Tune st2 clk90_nph rising edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH1_ODD_F_GRY : 4;
    ///< Tune st2 clk90_nph falling edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH1_ODD_R_GRY : 4;
    ///< Tune st2 clk90_nph rising edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_ctune2_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_DEFAULT (0x08080808U)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_RD_MASK (0x0f0f0f0fU)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_WR_MASK (0x0f0f0f0fU)


///< Tune st2 clk90_nph falling edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_EVEN_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_EVEN_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_EVEN_F_GRY_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_EVEN_F_GRY_BF_DEF (0x00000008)

///< Tune st2 clk90_nph rising edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_EVEN_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_EVEN_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_EVEN_R_GRY_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_EVEN_R_GRY_BF_DEF (0x00000800)

///< Tune st2 clk90_nph falling edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_ODD_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_ODD_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_ODD_F_GRY_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_ODD_F_GRY_BF_DEF (0x00080000)

///< Tune st2 clk90_nph rising edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_ODD_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_ODD_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_ODD_R_GRY_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_TXCLKST2_FINECAL_NPH1_ODD_R_GRY_BF_DEF (0x08000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_CTUNE3 register description at address offset 0x34
  *
  * Register default value:        0x08080808
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_ctune3
  * txclkst2_ctune3
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_PPH1_EVEN_F_GRY : 4;
    ///< Tune st2 clk90_pph falling edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH1_EVEN_R_GRY : 4;
    ///< Tune st2 clk90_pph rising edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH1_ODD_F_GRY : 4;
    ///< Tune st2 clk90_pph falling edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH1_ODD_R_GRY : 4;
    ///< Tune st2 clk90_pph rising edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_ctune3_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_DEFAULT (0x08080808U)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_RD_MASK (0x0f0f0f0fU)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_WR_MASK (0x0f0f0f0fU)


///< Tune st2 clk90_pph falling edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_EVEN_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_EVEN_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_EVEN_F_GRY_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_EVEN_F_GRY_BF_DEF (0x00000008)

///< Tune st2 clk90_pph rising edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_EVEN_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_EVEN_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_EVEN_R_GRY_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_EVEN_R_GRY_BF_DEF (0x00000800)

///< Tune st2 clk90_pph falling edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_ODD_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_ODD_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_ODD_F_GRY_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_ODD_F_GRY_BF_DEF (0x00080000)

///< Tune st2 clk90_pph rising edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_ODD_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_ODD_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_ODD_R_GRY_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_TXCLKST2_FINECAL_PPH1_ODD_R_GRY_BF_DEF (0x08000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_THR1 register description at address offset 0x38
  *
  * Register default value:        0x05050505
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_thr1
  * txclkst2_thr1
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_NPH1_THR_F_GRY : 3;
    ///< Tune st2 clk90_nph falling edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="0" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH1_THR_R_GRY : 3;
    ///< Tune st2 clk90_nph rising edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="8" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH1_THR_F_GRY : 3;
    ///< Tune st2 clk90_pph falling edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH1_THR_R_GRY : 3;
    ///< Tune st2 clk90_pph rising edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="24" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_thr1_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_THR1_DEFAULT (0x05050505U)
#define TXANA_FFE_MSG_TXCLKST2_THR1_RD_MASK (0x07070707U)
#define TXANA_FFE_MSG_TXCLKST2_THR1_WR_MASK (0x07070707U)


///< Tune st2 clk90_nph falling edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_NPH1_THR_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_NPH1_THR_F_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_NPH1_THR_F_GRY_BF_MSK (0x00000007)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_NPH1_THR_F_GRY_BF_DEF (0x00000005)

///< Tune st2 clk90_nph rising edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_NPH1_THR_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_NPH1_THR_R_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_NPH1_THR_R_GRY_BF_MSK (0x00000700)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_NPH1_THR_R_GRY_BF_DEF (0x00000500)

///< Tune st2 clk90_pph falling edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_PPH1_THR_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_PPH1_THR_F_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_PPH1_THR_F_GRY_BF_MSK (0x00070000)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_PPH1_THR_F_GRY_BF_DEF (0x00050000)

///< Tune st2 clk90_pph rising edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_PPH1_THR_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_PPH1_THR_R_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_PPH1_THR_R_GRY_BF_MSK (0x07000000)
#define TXANA_FFE_MSG_TXCLKST2_THR1_TXCLKST2_FINECAL_PPH1_THR_R_GRY_BF_DEF (0x05000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_CTUNE4 register description at address offset 0x3c
  *
  * Register default value:        0x08080808
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_ctune4
  * txclkst2_ctune4
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_NPH2_EVEN_F_GRY : 4;
    ///< Tune st2 clk180_nph falling edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH2_EVEN_R_GRY : 4;
    ///< Tune st2 clk180_nph rising edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH2_ODD_F_GRY : 4;
    ///< Tune st2 clk180_nph falling edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH2_ODD_R_GRY : 4;
    ///< Tune st2 clk180_nph rising edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_ctune4_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_DEFAULT (0x08080808U)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_RD_MASK (0x0f0f0f0fU)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_WR_MASK (0x0f0f0f0fU)


///< Tune st2 clk180_nph falling edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_EVEN_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_EVEN_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_EVEN_F_GRY_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_EVEN_F_GRY_BF_DEF (0x00000008)

///< Tune st2 clk180_nph rising edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_EVEN_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_EVEN_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_EVEN_R_GRY_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_EVEN_R_GRY_BF_DEF (0x00000800)

///< Tune st2 clk180_nph falling edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_ODD_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_ODD_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_ODD_F_GRY_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_ODD_F_GRY_BF_DEF (0x00080000)

///< Tune st2 clk180_nph rising edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_ODD_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_ODD_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_ODD_R_GRY_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_TXCLKST2_FINECAL_NPH2_ODD_R_GRY_BF_DEF (0x08000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_CTUNE5 register description at address offset 0x40
  *
  * Register default value:        0x08080808
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_ctune5
  * txclkst2_ctune5
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_PPH2_EVEN_F_GRY : 4;
    ///< Tune st2 clk180_pph falling edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH2_EVEN_R_GRY : 4;
    ///< Tune st2 clk180_pph rising edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH2_ODD_F_GRY : 4;
    ///< Tune st2 clk180_pph falling edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH2_ODD_R_GRY : 4;
    ///< Tune st2 clk180_pph rising edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_ctune5_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_DEFAULT (0x08080808U)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_RD_MASK (0x0f0f0f0fU)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_WR_MASK (0x0f0f0f0fU)


///< Tune st2 clk180_pph falling edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_EVEN_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_EVEN_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_EVEN_F_GRY_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_EVEN_F_GRY_BF_DEF (0x00000008)

///< Tune st2 clk180_pph rising edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_EVEN_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_EVEN_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_EVEN_R_GRY_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_EVEN_R_GRY_BF_DEF (0x00000800)

///< Tune st2 clk180_pph falling edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_ODD_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_ODD_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_ODD_F_GRY_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_ODD_F_GRY_BF_DEF (0x00080000)

///< Tune st2 clk180_pph rising edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_ODD_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_ODD_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_ODD_R_GRY_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_TXCLKST2_FINECAL_PPH2_ODD_R_GRY_BF_DEF (0x08000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_THR2 register description at address offset 0x44
  *
  * Register default value:        0x05050505
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_thr2
  * txclkst2_thr2
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_NPH2_THR_F_GRY : 3;
    ///< Tune st2 clk180_nph falling edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="0" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH2_THR_R_GRY : 3;
    ///< Tune st2 clk180_nph rising edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="8" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH2_THR_F_GRY : 3;
    ///< Tune st2 clk180_pph falling edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH2_THR_R_GRY : 3;
    ///< Tune st2 clk180_pph rising edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="24" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_thr2_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_THR2_DEFAULT (0x05050505U)
#define TXANA_FFE_MSG_TXCLKST2_THR2_RD_MASK (0x07070707U)
#define TXANA_FFE_MSG_TXCLKST2_THR2_WR_MASK (0x07070707U)


///< Tune st2 clk180_nph falling edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_NPH2_THR_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_NPH2_THR_F_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_NPH2_THR_F_GRY_BF_MSK (0x00000007)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_NPH2_THR_F_GRY_BF_DEF (0x00000005)

///< Tune st2 clk180_nph rising edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_NPH2_THR_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_NPH2_THR_R_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_NPH2_THR_R_GRY_BF_MSK (0x00000700)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_NPH2_THR_R_GRY_BF_DEF (0x00000500)

///< Tune st2 clk180_pph falling edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_PPH2_THR_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_PPH2_THR_F_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_PPH2_THR_F_GRY_BF_MSK (0x00070000)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_PPH2_THR_F_GRY_BF_DEF (0x00050000)

///< Tune st2 clk180_pph rising edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_PPH2_THR_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_PPH2_THR_R_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_PPH2_THR_R_GRY_BF_MSK (0x07000000)
#define TXANA_FFE_MSG_TXCLKST2_THR2_TXCLKST2_FINECAL_PPH2_THR_R_GRY_BF_DEF (0x05000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_CTUNE6 register description at address offset 0x48
  *
  * Register default value:        0x08080808
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_ctune6
  * txclkst2_ctune6
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_NPH3_EVEN_F_GRY : 4;
    ///< Tune st2 clk270_nph falling edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH3_EVEN_R_GRY : 4;
    ///< Tune st2 clk270_nph rising edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH3_ODD_F_GRY : 4;
    ///< Tune st2 clk270_nph falling edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH3_ODD_R_GRY : 4;
    ///< Tune st2 clk270_nph rising edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_ctune6_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_DEFAULT (0x08080808U)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_RD_MASK (0x0f0f0f0fU)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_WR_MASK (0x0f0f0f0fU)


///< Tune st2 clk270_nph falling edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_EVEN_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_EVEN_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_EVEN_F_GRY_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_EVEN_F_GRY_BF_DEF (0x00000008)

///< Tune st2 clk270_nph rising edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_EVEN_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_EVEN_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_EVEN_R_GRY_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_EVEN_R_GRY_BF_DEF (0x00000800)

///< Tune st2 clk270_nph falling edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_ODD_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_ODD_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_ODD_F_GRY_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_ODD_F_GRY_BF_DEF (0x00080000)

///< Tune st2 clk270_nph rising edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_ODD_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_ODD_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_ODD_R_GRY_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_TXCLKST2_FINECAL_NPH3_ODD_R_GRY_BF_DEF (0x08000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_CTUNE7 register description at address offset 0x4c
  *
  * Register default value:        0x08080808
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_ctune7
  * txclkst2_ctune7
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_PPH3_EVEN_F_GRY : 4;
    ///< Tune st2 clk270_pph falling edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="4" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH3_EVEN_R_GRY : 4;
    ///< Tune st2 clk270_pph rising edge: controls mux lvl1 even steps
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="12" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH3_ODD_F_GRY : 4;
    ///< Tune st2 clk270_pph falling edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH3_ODD_R_GRY : 4;
    ///< Tune st2 clk270_pph rising edge: controls mux lvl1 odd steps
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_ctune7_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_DEFAULT (0x08080808U)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_RD_MASK (0x0f0f0f0fU)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_WR_MASK (0x0f0f0f0fU)


///< Tune st2 clk270_pph falling edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_EVEN_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_EVEN_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_EVEN_F_GRY_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_EVEN_F_GRY_BF_DEF (0x00000008)

///< Tune st2 clk270_pph rising edge: controls mux lvl1 even steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_EVEN_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_EVEN_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_EVEN_R_GRY_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_EVEN_R_GRY_BF_DEF (0x00000800)

///< Tune st2 clk270_pph falling edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_ODD_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_ODD_F_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_ODD_F_GRY_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_ODD_F_GRY_BF_DEF (0x00080000)

///< Tune st2 clk270_pph rising edge: controls mux lvl1 odd steps
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_ODD_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_ODD_R_GRY_BF_WID ( 4)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_ODD_R_GRY_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_TXCLKST2_FINECAL_PPH3_ODD_R_GRY_BF_DEF (0x08000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKST2_THR3 register description at address offset 0x50
  *
  * Register default value:        0x05050505
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkst2_thr3
  * txclkst2_thr3
  */

typedef union {
  struct {
    uint32_t TXCLKST2_FINECAL_NPH3_THR_F_GRY : 3;
    ///< Tune st2 clk270_nph falling edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="0" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_NPH3_THR_R_GRY : 3;
    ///< Tune st2 clk270_nph rising edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="8" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH3_THR_F_GRY : 3;
    ///< Tune st2 clk270_pph falling edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
    uint32_t TXCLKST2_FINECAL_PPH3_THR_R_GRY : 3;
    ///< Tune st2 clk270_pph rising edge: controls mux lvl2
    ///< AccessType="RW" BitOffset="24" ResetValue="0x5"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkst2_thr3_reg_t;

#define TXANA_FFE_MSG_TXCLKST2_THR3_DEFAULT (0x05050505U)
#define TXANA_FFE_MSG_TXCLKST2_THR3_RD_MASK (0x07070707U)
#define TXANA_FFE_MSG_TXCLKST2_THR3_WR_MASK (0x07070707U)


///< Tune st2 clk270_nph falling edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_NPH3_THR_F_GRY_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_NPH3_THR_F_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_NPH3_THR_F_GRY_BF_MSK (0x00000007)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_NPH3_THR_F_GRY_BF_DEF (0x00000005)

///< Tune st2 clk270_nph rising edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_NPH3_THR_R_GRY_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_NPH3_THR_R_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_NPH3_THR_R_GRY_BF_MSK (0x00000700)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_NPH3_THR_R_GRY_BF_DEF (0x00000500)

///< Tune st2 clk270_pph falling edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_PPH3_THR_F_GRY_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_PPH3_THR_F_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_PPH3_THR_F_GRY_BF_MSK (0x00070000)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_PPH3_THR_F_GRY_BF_DEF (0x00050000)

///< Tune st2 clk270_pph rising edge: controls mux lvl2
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_PPH3_THR_R_GRY_BF_OFF (24)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_PPH3_THR_R_GRY_BF_WID ( 3)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_PPH3_THR_R_GRY_BF_MSK (0x07000000)
#define TXANA_FFE_MSG_TXCLKST2_THR3_TXCLKST2_FINECAL_PPH3_THR_R_GRY_BF_DEF (0x05000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCOMP_CTRL0 register description at address offset 0x54
  *
  * Register default value:        0x00000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txcomp_ctrl0
  * txcomp_ctrl0
  */

typedef union {
  struct {
    uint32_t TXCOMP_PD_B : 1;
    ///< Comparator enable
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXCOMP_DCMON_EN : 1;
    ///< DCMON enable
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t TXCOMP_FILTER_BYPASS : 1;
    ///< RC filter bypass
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txcomp_ctrl0_reg_t;

#define TXANA_FFE_MSG_TXCOMP_CTRL0_DEFAULT (0x00000000U)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_RD_MASK (0x00000007U)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_WR_MASK (0x00000007U)


///< Comparator enable
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_PD_B_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_PD_B_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_PD_B_BF_MSK (0x00000001)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_PD_B_BF_DEF (0x00000000)

///< DCMON enable
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_DCMON_EN_BF_OFF ( 1)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_DCMON_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_DCMON_EN_BF_MSK (0x00000002)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_DCMON_EN_BF_DEF (0x00000000)

///< RC filter bypass
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_FILTER_BYP_BF_OFF ( 2)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_FILTER_BYP_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_FILTER_BYP_BF_MSK (0x00000004)
#define TXANA_FFE_MSG_TXCOMP_CTRL0_TXCOMP_FILTER_BYP_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCOMP_CTRL1 register description at address offset 0x58
  *
  * Register default value:        0x00000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txcomp_ctrl1
  * txcomp_ctrl1
  */

typedef union {
  struct {
    uint32_t TXCOMP_SELN : 9;
    ///< 100000000 ia_vref, 010000000 input 7, 001000000 input 6
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 7;
    ///< Reserved
    ///< AccessType="RO" BitOffset="9" ResetValue="None"
    uint32_t TXCOMP_SELP : 9;
    ///< 100000000 ia_vref, 010000000 input 7, 001000000 input 6
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t  : 7;
    ///< Reserved
    ///< AccessType="RO" BitOffset="25" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txcomp_ctrl1_reg_t;

#define TXANA_FFE_MSG_TXCOMP_CTRL1_DEFAULT (0x00000000U)
#define TXANA_FFE_MSG_TXCOMP_CTRL1_RD_MASK (0x01ff01ffU)
#define TXANA_FFE_MSG_TXCOMP_CTRL1_WR_MASK (0x01ff01ffU)


///< 100000000 ia_vref, 010000000 input 7, 001000000 input 6
#define TXANA_FFE_MSG_TXCOMP_CTRL1_TXCOMP_SELN_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCOMP_CTRL1_TXCOMP_SELN_BF_WID ( 9)
#define TXANA_FFE_MSG_TXCOMP_CTRL1_TXCOMP_SELN_BF_MSK (0x000001FF)
#define TXANA_FFE_MSG_TXCOMP_CTRL1_TXCOMP_SELN_BF_DEF (0x00000000)

///< 100000000 ia_vref, 010000000 input 7, 001000000 input 6
#define TXANA_FFE_MSG_TXCOMP_CTRL1_TXCOMP_SELP_BF_OFF (16)
#define TXANA_FFE_MSG_TXCOMP_CTRL1_TXCOMP_SELP_BF_WID ( 9)
#define TXANA_FFE_MSG_TXCOMP_CTRL1_TXCOMP_SELP_BF_MSK (0x01FF0000)
#define TXANA_FFE_MSG_TXCOMP_CTRL1_TXCOMP_SELP_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCOMP_CTRL2 register description at address offset 0x5c
  *
  * Register default value:        0x00000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txcomp_ctrl2
  * txcomp_ctrl2
  */

typedef union {
  struct {
    uint32_t TXCMP_REFGEN_VREFSEL : 10;
    ///< vref select control
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x0"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txcomp_ctrl2_reg_t;

#define TXANA_FFE_MSG_TXCOMP_CTRL2_DEFAULT (0x00000000U)
#define TXANA_FFE_MSG_TXCOMP_CTRL2_RD_MASK (0x000003ffU)
#define TXANA_FFE_MSG_TXCOMP_CTRL2_WR_MASK (0x000003ffU)


///< vref select control
#define TXANA_FFE_MSG_TXCOMP_CTRL2_TXCMP_REFGEN_VREFSEL_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCOMP_CTRL2_TXCMP_REFGEN_VREFSEL_BF_WID (10)
#define TXANA_FFE_MSG_TXCOMP_CTRL2_TXCMP_REFGEN_VREFSEL_BF_MSK (0x000003FF)
#define TXANA_FFE_MSG_TXCOMP_CTRL2_TXCMP_REFGEN_VREFSEL_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXDRV_SENSE0 register description at address offset 0x60
  *
  * Register default value:        0x00000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txdrv_sense0
  * txdrv_sense0
  */

typedef union {
  struct {
    uint32_t TXDRV_CLKSNS1_NPH_CK1_SEL : 4;
    ///< Select first nph clock phase
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS2_NPH_CK1_SEL : 4;
    ///< Select first nph clock phase
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS1_NPH_CK2_SEL : 4;
    ///< Select second nph clock phase
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS2_NPH_CK2_SEL : 4;
    ///< Select second nph clock phase
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t TXDRV_DC_SNS_PH_EN : 4;
    ///< dc (low frequency) sense - enable 1 clock phase at a time
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t TXDRV_DC_SNS_RGHT : 1;
    ///< dc (low frequency) sense data - either 1 or 0
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t TXDRV_DRVSNS_CMP_SEL : 2;
    ///< direct/cross connect to output comparator
    ///< AccessType="RW" BitOffset="21" ResetValue="0x0"
    uint32_t  : 9;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txdrv_sense0_reg_t;

#define TXANA_FFE_MSG_TXDRV_SENSE0_DEFAULT (0x00000000U)
#define TXANA_FFE_MSG_TXDRV_SENSE0_RD_MASK (0x007fffffU)
#define TXANA_FFE_MSG_TXDRV_SENSE0_WR_MASK (0x007fffffU)


///< Select first nph clock phase
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS1_NPH_CK1_SEL_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS1_NPH_CK1_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS1_NPH_CK1_SEL_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS1_NPH_CK1_SEL_BF_DEF (0x00000000)

///< Select first nph clock phase
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS2_NPH_CK1_SEL_BF_OFF ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS2_NPH_CK1_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS2_NPH_CK1_SEL_BF_MSK (0x000000F0)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS2_NPH_CK1_SEL_BF_DEF (0x00000000)

///< Select second nph clock phase
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS1_NPH_CK2_SEL_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS1_NPH_CK2_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS1_NPH_CK2_SEL_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS1_NPH_CK2_SEL_BF_DEF (0x00000000)

///< Select second nph clock phase
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS2_NPH_CK2_SEL_BF_OFF (12)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS2_NPH_CK2_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS2_NPH_CK2_SEL_BF_MSK (0x0000F000)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_CLKSNS2_NPH_CK2_SEL_BF_DEF (0x00000000)

///< dc (low frequency) sense - enable 1 clock phase at a time
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DC_SNS_PH_EN_BF_OFF (16)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DC_SNS_PH_EN_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DC_SNS_PH_EN_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DC_SNS_PH_EN_BF_DEF (0x00000000)

///< dc (low frequency) sense data - either 1 or 0
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DC_SNS_RGHT_BF_OFF (20)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DC_SNS_RGHT_BF_WID ( 1)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DC_SNS_RGHT_BF_MSK (0x00100000)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DC_SNS_RGHT_BF_DEF (0x00000000)

///< direct/cross connect to output comparator
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DRVSNS_CMP_SEL_BF_OFF (21)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DRVSNS_CMP_SEL_BF_WID ( 2)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DRVSNS_CMP_SEL_BF_MSK (0x00600000)
#define TXANA_FFE_MSG_TXDRV_SENSE0_TXDRV_DRVSNS_CMP_SEL_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXDRV_SENSE1 register description at address offset 0x64
  *
  * Register default value:        0x00000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txdrv_sense1
  * txdrv_sense1
  */

typedef union {
  struct {
    uint32_t TXDRV_DRVSNS_PH_RTRM : 4;
    ///< phase detect rterm value ranges from 2.5k - 20k
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXDRV_DRVSNS_SEL1H : 8;
    ///< select  dc (low freq) hf path or 1 of Phase Detect path
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t TXDRV_DRVSNS_TP0 : 1;
    ///< driver sense rload shunt point to vdd/vss
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t TXDRV_PH_SNS_EN_N : 2;
    ///< phase detect sensor enable nmos path
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t TXDRV_PH_SNS_EN_P : 2;
    ///< phase detect sensor enable pmos path
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t TXDRV_HF_SNS_RGHT : 1;
    ///< hf (high frequency) sense data - either 1 or 0
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS1_P2N_DIR : 1;
    ///< stg2 pph rise to nph fall select
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS2_P2N_DIR : 1;
    ///< stg2 pph rise to nph fall select
    ///< AccessType="RW" BitOffset="19" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS1_MEAS_TYPE_SEL : 4;
    ///< stg2 phase sensor output select
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS2_MEAS_TYPE_SEL : 4;
    ///< stg2 phase sensor output select
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS1_PPH_CK1_SEL : 4;
    ///< Select first pph clock phase
    ///< AccessType="RW" BitOffset="28" ResetValue="0x0"
  } ;
  uint32_t value;
} txana_ffe_msg_txdrv_sense1_reg_t;

#define TXANA_FFE_MSG_TXDRV_SENSE1_DEFAULT (0x00000000U)
#define TXANA_FFE_MSG_TXDRV_SENSE1_RD_MASK (0xffffffffU)
#define TXANA_FFE_MSG_TXDRV_SENSE1_WR_MASK (0xffffffffU)


///< phase detect rterm value ranges from 2.5k - 20k
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_PH_RTRM_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_PH_RTRM_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_PH_RTRM_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_PH_RTRM_BF_DEF (0x00000000)

///< select  dc (low freq) hf path or 1 of Phase Detect path
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_SEL1H_BF_OFF ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_SEL1H_BF_WID ( 8)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_SEL1H_BF_MSK (0x00000FF0)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_SEL1H_BF_DEF (0x00000000)

///< driver sense rload shunt point to vdd/vss
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_TP0_BF_OFF (12)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_TP0_BF_WID ( 1)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_TP0_BF_MSK (0x00001000)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_DRVSNS_TP0_BF_DEF (0x00000000)

///< phase detect sensor enable nmos path
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_PH_SNS_EN_N_BF_OFF (13)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_PH_SNS_EN_N_BF_WID ( 2)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_PH_SNS_EN_N_BF_MSK (0x00006000)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_PH_SNS_EN_N_BF_DEF (0x00000000)

///< phase detect sensor enable pmos path
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_PH_SNS_EN_P_BF_OFF (15)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_PH_SNS_EN_P_BF_WID ( 2)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_PH_SNS_EN_P_BF_MSK (0x00018000)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_PH_SNS_EN_P_BF_DEF (0x00000000)

///< hf (high frequency) sense data - either 1 or 0
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_HF_SNS_RGHT_BF_OFF (17)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_HF_SNS_RGHT_BF_WID ( 1)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_HF_SNS_RGHT_BF_MSK (0x00020000)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_HF_SNS_RGHT_BF_DEF (0x00000000)

///< stg2 pph rise to nph fall select
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_P2N_DIR_BF_OFF (18)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_P2N_DIR_BF_WID ( 1)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_P2N_DIR_BF_MSK (0x00040000)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_P2N_DIR_BF_DEF (0x00000000)

///< stg2 pph rise to nph fall select
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS2_P2N_DIR_BF_OFF (19)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS2_P2N_DIR_BF_WID ( 1)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS2_P2N_DIR_BF_MSK (0x00080000)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS2_P2N_DIR_BF_DEF (0x00000000)

///< stg2 phase sensor output select
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_MEAS_TYPE_SEL_BF_OFF (20)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_MEAS_TYPE_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_MEAS_TYPE_SEL_BF_MSK (0x00F00000)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_MEAS_TYPE_SEL_BF_DEF (0x00000000)

///< stg2 phase sensor output select
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS2_MEAS_TYPE_SEL_BF_OFF (24)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS2_MEAS_TYPE_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS2_MEAS_TYPE_SEL_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS2_MEAS_TYPE_SEL_BF_DEF (0x00000000)

///< Select first pph clock phase
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_PPH_CK1_SEL_BF_OFF (28)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_PPH_CK1_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_PPH_CK1_SEL_BF_MSK (0xF0000000)
#define TXANA_FFE_MSG_TXDRV_SENSE1_TXDRV_CLKSNS1_PPH_CK1_SEL_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXDRV_SENSE2 register description at address offset 0x68
  *
  * Register default value:        0x00024000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txdrv_sense2
  * txdrv_sense2
  */

typedef union {
  struct {
    uint32_t TXDRV_CLKSNS2_PPH_CK1_SEL : 4;
    ///< Select first pph clock phase
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS1_PPH_CK2_SEL : 4;
    ///< Select second pph clock phase
    ///< AccessType="RW" BitOffset="4" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS2_PPH_CK2_SEL : 4;
    ///< Select second pph clock phase
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS_VREF_NPH_GRY_SEL : 3;
    ///< Select vref level for nph clocks
    ///< AccessType="RW" BitOffset="12" ResetValue="0x4"
    uint32_t TXDRV_CLKSNS_VREF_PPH_GRY_SEL : 3;
    ///< Select vref level for pph clocks
    ///< AccessType="RW" BitOffset="15" ResetValue="0x4"
    uint32_t TXDRV_CLKSNS1_EN : 1;
    ///< stg2 phase sensor enable
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t TXDRV_CLKSNS2_EN : 1;
    ///< stg2 phase sensor enable
    ///< AccessType="RW" BitOffset="19" ResetValue="0x0"
    uint32_t  : 12;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txdrv_sense2_reg_t;

#define TXANA_FFE_MSG_TXDRV_SENSE2_DEFAULT (0x00024000U)
#define TXANA_FFE_MSG_TXDRV_SENSE2_RD_MASK (0x000fffffU)
#define TXANA_FFE_MSG_TXDRV_SENSE2_WR_MASK (0x000fffffU)


///< Select first pph clock phase
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_PPH_CK1_SEL_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_PPH_CK1_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_PPH_CK1_SEL_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_PPH_CK1_SEL_BF_DEF (0x00000000)

///< Select second pph clock phase
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS1_PPH_CK2_SEL_BF_OFF ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS1_PPH_CK2_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS1_PPH_CK2_SEL_BF_MSK (0x000000F0)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS1_PPH_CK2_SEL_BF_DEF (0x00000000)

///< Select second pph clock phase
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_PPH_CK2_SEL_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_PPH_CK2_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_PPH_CK2_SEL_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_PPH_CK2_SEL_BF_DEF (0x00000000)

///< Select vref level for nph clocks
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS_VREF_NPH_GRY_SEL_BF_OFF (12)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS_VREF_NPH_GRY_SEL_BF_WID ( 3)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS_VREF_NPH_GRY_SEL_BF_MSK (0x00007000)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS_VREF_NPH_GRY_SEL_BF_DEF (0x00004000)

///< Select vref level for pph clocks
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS_VREF_PPH_GRY_SEL_BF_OFF (15)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS_VREF_PPH_GRY_SEL_BF_WID ( 3)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS_VREF_PPH_GRY_SEL_BF_MSK (0x00038000)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS_VREF_PPH_GRY_SEL_BF_DEF (0x00020000)

///< stg2 phase sensor enable
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS1_EN_BF_OFF (18)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS1_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS1_EN_BF_MSK (0x00040000)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS1_EN_BF_DEF (0x00000000)

///< stg2 phase sensor enable
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_EN_BF_OFF (19)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_EN_BF_MSK (0x00080000)
#define TXANA_FFE_MSG_TXDRV_SENSE2_TXDRV_CLKSNS2_EN_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXREG_CTRL0 register description at address offset 0x6c
  *
  * Register default value:        0x00034110
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txreg_ctrl0
  * txreg_ctrl0
  */

typedef union {
  struct {
    uint32_t TXREG_CLKPATH_STG1_BYP_EN : 1;
    ///< bypass clkpath regulator stg1  to vcc1
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXREG_CLKPATH_STG2_BYP_EN : 1;
    ///< bypass clkpath regulator stg2  to vcc1
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t TXREG_CLKPATH_PD_B : 1;
    ///< regualtor en signal(en=0 pulls down output to vss)
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t TXREG_CLKPATH_BLEED_TUNE : 3;
    ///< reg_clk current bleeder control
    ///< AccessType="RW" BitOffset="3" ResetValue="0x2"
    uint32_t TXREG_DRVCLK_BYP_EN : 1;
    ///< reg_drvclk bypass
    ///< AccessType="RW" BitOffset="6" ResetValue="0x0"
    uint32_t TXREG_DRVCLK_PD_B : 1;
    ///< reg_drvclk enable
    ///< AccessType="RW" BitOffset="7" ResetValue="0x0"
    uint32_t TXREG_DRVCLK_BLEED_TUNE : 3;
    ///< reg_drvclk  current bleeder control
    ///< AccessType="RW" BitOffset="8" ResetValue="0x1"
    uint32_t TXREG_DRVDATA_BYP_EN : 1;
    ///< drvdata regualtor bypass control
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t TXREG_DRVDATA_PD_B : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t TXREG_DRVDATA_BLEED_TUNE : 3;
    ///< drvdata current bleeder control
    ///< AccessType="RW" BitOffset="13" ResetValue="0x2"
    uint32_t TXREG_DRVDATA_REFSEL : 3;
    ///< vmid refgen control bits
    ///< AccessType="RW" BitOffset="16" ResetValue="0x3"
    uint32_t  : 13;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txreg_ctrl0_reg_t;

#define TXANA_FFE_MSG_TXREG_CTRL0_DEFAULT (0x00034110U)
#define TXANA_FFE_MSG_TXREG_CTRL0_RD_MASK (0x0007ffffU)
#define TXANA_FFE_MSG_TXREG_CTRL0_WR_MASK (0x0007ffffU)


///< bypass clkpath regulator stg1  to vcc1
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_STG1_BYP_EN_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_STG1_BYP_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_STG1_BYP_EN_BF_MSK (0x00000001)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_STG1_BYP_EN_BF_DEF (0x00000000)

///< bypass clkpath regulator stg2  to vcc1
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_STG2_BYP_EN_BF_OFF ( 1)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_STG2_BYP_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_STG2_BYP_EN_BF_MSK (0x00000002)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_STG2_BYP_EN_BF_DEF (0x00000000)

///< regualtor en signal(en=0 pulls down output to vss)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_PD_B_BF_OFF ( 2)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_PD_B_BF_WID ( 1)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_PD_B_BF_MSK (0x00000004)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_PD_B_BF_DEF (0x00000000)

///< reg_clk current bleeder control
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_BLEED_TUNE_BF_OFF ( 3)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_BLEED_TUNE_BF_WID ( 3)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_BLEED_TUNE_BF_MSK (0x00000038)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_CLKPATH_BLEED_TUNE_BF_DEF (0x00000010)

///< reg_drvclk bypass
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_BYP_EN_BF_OFF ( 6)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_BYP_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_BYP_EN_BF_MSK (0x00000040)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_BYP_EN_BF_DEF (0x00000000)

///< reg_drvclk enable
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_PD_B_BF_OFF ( 7)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_PD_B_BF_WID ( 1)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_PD_B_BF_MSK (0x00000080)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_PD_B_BF_DEF (0x00000000)

///< reg_drvclk  current bleeder control
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_BLEED_TUNE_BF_OFF ( 8)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_BLEED_TUNE_BF_WID ( 3)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_BLEED_TUNE_BF_MSK (0x00000700)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVCLK_BLEED_TUNE_BF_DEF (0x00000100)

///< drvdata regualtor bypass control
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_BYP_EN_BF_OFF (11)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_BYP_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_BYP_EN_BF_MSK (0x00000800)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_BYP_EN_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_PD_B_BF_OFF (12)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_PD_B_BF_WID ( 1)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_PD_B_BF_MSK (0x00001000)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_PD_B_BF_DEF (0x00000000)

///< drvdata current bleeder control
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_BLEED_TUNE_BF_OFF (13)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_BLEED_TUNE_BF_WID ( 3)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_BLEED_TUNE_BF_MSK (0x0000E000)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_BLEED_TUNE_BF_DEF (0x00004000)

///< vmid refgen control bits
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_REFSEL_BF_OFF (16)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_REFSEL_BF_WID ( 3)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_REFSEL_BF_MSK (0x00070000)
#define TXANA_FFE_MSG_TXREG_CTRL0_TXREG_DRVDATA_REFSEL_BF_DEF (0x00030000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TX_MISC_CTRL0 register description at address offset 0x70
  *
  * Register default value:        0x00006800
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/tx_misc_ctrl0
  * tx_misc_ctrl0
  */

typedef union {
  struct {
    uint32_t TXMISC_PDSENSE_B : 8;
    ///< PISO_HF data in phase detector (pd)
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXDRV_LBTX2RX_ATSPEED_EN : 1;
    ///< loopback slices enable
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t TXCLKPATH_NM1LANE_EN : 1;
    ///< (N-1) clock in enable
    ///< AccessType="RW" BitOffset="9" ResetValue="0x0"
    uint32_t TXCLKPATH_NP1LANE_EN : 1;
    ///< (N+1) clock out enable
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t TXDRV_TXDETRX_THR : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="11" ResetValue="0xD"
    uint32_t TX_NTL_HIGH_EN : 1;
    ///< ntl enable high
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t TX_NTL_LOW_EN : 1;
    ///< ntl enable low
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t TX_NTL_OUT_SEL : 1;
    ///< 1: selects p 0: selects n
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t TXCLKPATH_DIV_BTI_EN : 1;
    ///< BTI clock enable
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 13;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_tx_misc_ctrl0_reg_t;

#define TXANA_FFE_MSG_TX_MISC_CTRL0_DEFAULT (0x00006800U)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_RD_MASK (0x0007ffffU)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_WR_MASK (0x0007ffffU)


///< PISO_HF data in phase detector (pd)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXMISC_PDSENSE_B_BF_OFF ( 0)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXMISC_PDSENSE_B_BF_WID ( 8)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXMISC_PDSENSE_B_BF_MSK (0x000000FF)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXMISC_PDSENSE_B_BF_DEF (0x00000000)

///< loopback slices enable
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXDRV_LBTX2RX_ATSPEED_EN_BF_OFF ( 8)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXDRV_LBTX2RX_ATSPEED_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXDRV_LBTX2RX_ATSPEED_EN_BF_MSK (0x00000100)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXDRV_LBTX2RX_ATSPEED_EN_BF_DEF (0x00000000)

///< (N-1) clock in enable
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_NM1LANE_EN_BF_OFF ( 9)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_NM1LANE_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_NM1LANE_EN_BF_MSK (0x00000200)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_NM1LANE_EN_BF_DEF (0x00000000)

///< (N+1) clock out enable
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_NP1LANE_EN_BF_OFF (10)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_NP1LANE_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_NP1LANE_EN_BF_MSK (0x00000400)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_NP1LANE_EN_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXDRV_TXDETRX_THR_BF_OFF (11)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXDRV_TXDETRX_THR_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXDRV_TXDETRX_THR_BF_MSK (0x00007800)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXDRV_TXDETRX_THR_BF_DEF (0x00006800)

///< ntl enable high
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_HIGH_EN_BF_OFF (15)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_HIGH_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_HIGH_EN_BF_MSK (0x00008000)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_HIGH_EN_BF_DEF (0x00000000)

///< ntl enable low
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_LOW_EN_BF_OFF (16)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_LOW_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_LOW_EN_BF_MSK (0x00010000)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_LOW_EN_BF_DEF (0x00000000)

///< 1: selects p 0: selects n
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_OUT_SEL_BF_OFF (17)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_OUT_SEL_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_OUT_SEL_BF_MSK (0x00020000)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TX_NTL_OUT_SEL_BF_DEF (0x00000000)

///< BTI clock enable
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_DIV_BTI_EN_BF_OFF (18)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_DIV_BTI_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_DIV_BTI_EN_BF_MSK (0x00040000)
#define TXANA_FFE_MSG_TX_MISC_CTRL0_TXCLKPATH_DIV_BTI_EN_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TX_DFX0 register description at address offset 0x74
  *
  * Register default value:        0x00000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/tx_dfx0
  * tx_dfx0
  */

typedef union {
  struct {
    uint32_t TXCLKPATH_DCMON_SEL : 3;
    ///< Select DCMON output
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXCLKPATH_DCMON_CLKMUX_SEL : 3;
    ///< ---
    ///< AccessType="RW" BitOffset="3" ResetValue="0x0"
    uint32_t TXCLKPATH_DCMON_ST1_SEL : 2;
    ///< ---
    ///< AccessType="RW" BitOffset="6" ResetValue="0x0"
    uint32_t TXCLKPATH_DCMON_ST2_SEL : 2;
    ///< ---
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t TXDRV_DCMON_SEL : 3;
    ///< DC monitor select
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t TXCMPREFGEN_DCMON_SEL_N : 1;
    ///< enable dcmon_p/n
    ///< AccessType="RW" BitOffset="13" ResetValue="0x0"
    uint32_t TXCMPREFGEN_DCMON_SEL_P : 1;
    ///< enable dcmon_p/n
    ///< AccessType="RW" BitOffset="14" ResetValue="0x0"
    uint32_t TXREG_DCMON_SEL : 6;
    ///< dcmon select
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t TXDCMON_OUT_SEL : 2;
    ///< ---
    ///< AccessType="RW" BitOffset="21" ResetValue="0x0"
    uint32_t TXDCMON_TOP_SEL : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="23" ResetValue="0x0"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_tx_dfx0_reg_t;

#define TXANA_FFE_MSG_TX_DFX0_DEFAULT (0x00000000U)
#define TXANA_FFE_MSG_TX_DFX0_RD_MASK (0x07ffffffU)
#define TXANA_FFE_MSG_TX_DFX0_WR_MASK (0x07ffffffU)


///< Select DCMON output
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_SEL_BF_OFF ( 0)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_SEL_BF_WID ( 3)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_SEL_BF_MSK (0x00000007)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_SEL_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_CLKMUX_SEL_BF_OFF ( 3)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_CLKMUX_SEL_BF_WID ( 3)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_CLKMUX_SEL_BF_MSK (0x00000038)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_CLKMUX_SEL_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_ST1_SEL_BF_OFF ( 6)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_ST1_SEL_BF_WID ( 2)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_ST1_SEL_BF_MSK (0x000000C0)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_ST1_SEL_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_ST2_SEL_BF_OFF ( 8)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_ST2_SEL_BF_WID ( 2)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_ST2_SEL_BF_MSK (0x00000300)
#define TXANA_FFE_MSG_TX_DFX0_TXCLKPATH_DCMON_ST2_SEL_BF_DEF (0x00000000)

///< DC monitor select
#define TXANA_FFE_MSG_TX_DFX0_TXDRV_DCMON_SEL_BF_OFF (10)
#define TXANA_FFE_MSG_TX_DFX0_TXDRV_DCMON_SEL_BF_WID ( 3)
#define TXANA_FFE_MSG_TX_DFX0_TXDRV_DCMON_SEL_BF_MSK (0x00001C00)
#define TXANA_FFE_MSG_TX_DFX0_TXDRV_DCMON_SEL_BF_DEF (0x00000000)

///< enable dcmon_p/n
#define TXANA_FFE_MSG_TX_DFX0_TXCMPREFGEN_DCMON_SEL_N_BF_OFF (13)
#define TXANA_FFE_MSG_TX_DFX0_TXCMPREFGEN_DCMON_SEL_N_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_DFX0_TXCMPREFGEN_DCMON_SEL_N_BF_MSK (0x00002000)
#define TXANA_FFE_MSG_TX_DFX0_TXCMPREFGEN_DCMON_SEL_N_BF_DEF (0x00000000)

///< enable dcmon_p/n
#define TXANA_FFE_MSG_TX_DFX0_TXCMPREFGEN_DCMON_SEL_P_BF_OFF (14)
#define TXANA_FFE_MSG_TX_DFX0_TXCMPREFGEN_DCMON_SEL_P_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_DFX0_TXCMPREFGEN_DCMON_SEL_P_BF_MSK (0x00004000)
#define TXANA_FFE_MSG_TX_DFX0_TXCMPREFGEN_DCMON_SEL_P_BF_DEF (0x00000000)

///< dcmon select
#define TXANA_FFE_MSG_TX_DFX0_TXREG_DCMON_SEL_BF_OFF (15)
#define TXANA_FFE_MSG_TX_DFX0_TXREG_DCMON_SEL_BF_WID ( 6)
#define TXANA_FFE_MSG_TX_DFX0_TXREG_DCMON_SEL_BF_MSK (0x001F8000)
#define TXANA_FFE_MSG_TX_DFX0_TXREG_DCMON_SEL_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TX_DFX0_TXDCMON_OUT_SEL_BF_OFF (21)
#define TXANA_FFE_MSG_TX_DFX0_TXDCMON_OUT_SEL_BF_WID ( 2)
#define TXANA_FFE_MSG_TX_DFX0_TXDCMON_OUT_SEL_BF_MSK (0x00600000)
#define TXANA_FFE_MSG_TX_DFX0_TXDCMON_OUT_SEL_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TX_DFX0_TXDCMON_TOP_SEL_BF_OFF (23)
#define TXANA_FFE_MSG_TX_DFX0_TXDCMON_TOP_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_DFX0_TXDCMON_TOP_SEL_BF_MSK (0x07800000)
#define TXANA_FFE_MSG_TX_DFX0_TXDCMON_TOP_SEL_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TX_DFX1 register description at address offset 0x78
  *
  * Register default value:        0x00000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/tx_dfx1
  * tx_dfx1
  */

typedef union {
  struct {
    uint32_t TXHSMON_LANE_SEL : 2;
    ///< Select output direction
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXHSMON_SEL : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t TXBIAS_DCMON_FROM_NMOS_SEL : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="6" ResetValue="0x0"
    uint32_t TXBIAS_DCMON_FROM_NMOS_N_EN : 1;
    ///< enable dcmon_n for nmos
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t TXBIAS_DCMON_FROM_NMOS_P_EN : 1;
    ///< enable dcmon_p for nmos
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t TXBIAS_DCMON_FROM_PMOS_SEL : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="12" ResetValue="0x0"
    uint32_t TXBIAS_DCMON_FROM_PMOS_N_EN : 1;
    ///< enable dcmon_n for pmos
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t TXBIAS_DCMON_FROM_PMOS_P_EN : 1;
    ///< enable dcmon_p for pmos
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t  : 14;
    ///< Reserved
    ///< AccessType="RO" BitOffset="18" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_tx_dfx1_reg_t;

#define TXANA_FFE_MSG_TX_DFX1_DEFAULT (0x00000000U)
#define TXANA_FFE_MSG_TX_DFX1_RD_MASK (0x0003ffffU)
#define TXANA_FFE_MSG_TX_DFX1_WR_MASK (0x0003ffffU)


///< Select output direction
#define TXANA_FFE_MSG_TX_DFX1_TXHSMON_LANE_SEL_BF_OFF ( 0)
#define TXANA_FFE_MSG_TX_DFX1_TXHSMON_LANE_SEL_BF_WID ( 2)
#define TXANA_FFE_MSG_TX_DFX1_TXHSMON_LANE_SEL_BF_MSK (0x00000003)
#define TXANA_FFE_MSG_TX_DFX1_TXHSMON_LANE_SEL_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TX_DFX1_TXHSMON_SEL_BF_OFF ( 2)
#define TXANA_FFE_MSG_TX_DFX1_TXHSMON_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_DFX1_TXHSMON_SEL_BF_MSK (0x0000003C)
#define TXANA_FFE_MSG_TX_DFX1_TXHSMON_SEL_BF_DEF (0x00000000)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_SEL_BF_OFF ( 6)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_SEL_BF_MSK (0x000003C0)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_SEL_BF_DEF (0x00000000)

///< enable dcmon_n for nmos
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_N_EN_BF_OFF (10)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_N_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_N_EN_BF_MSK (0x00000400)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_N_EN_BF_DEF (0x00000000)

///< enable dcmon_p for nmos
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_P_EN_BF_OFF (11)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_P_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_P_EN_BF_MSK (0x00000800)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_NMOS_P_EN_BF_DEF (0x00000000)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_SEL_BF_OFF (12)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_SEL_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_SEL_BF_MSK (0x0000F000)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_SEL_BF_DEF (0x00000000)

///< enable dcmon_n for pmos
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_N_EN_BF_OFF (16)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_N_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_N_EN_BF_MSK (0x00010000)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_N_EN_BF_DEF (0x00000000)

///< enable dcmon_p for pmos
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_P_EN_BF_OFF (17)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_P_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_P_EN_BF_MSK (0x00020000)
#define TXANA_FFE_MSG_TX_DFX1_TXBIAS_DCMON_FROM_PMOS_P_EN_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TX_BIAS_TRIM_PMOS0 register description at address offset 0x7c
  *
  * Register default value:        0x88888888
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/tx_bias_trim_pmos0
  * tx_bias_trim_pmos0
  */

typedef union {
  struct {
    uint32_t TXBIAS_50U_FROM_PMOS0_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_PMOS1_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="4" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_PMOS2_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_PMOS3_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="12" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_PMOS4_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_PMOS5_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="20" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_PMOS6_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="24" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_PMOS7_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="28" ResetValue="0x8"
  } ;
  uint32_t value;
} txana_ffe_msg_tx_bias_trim_pmos0_reg_t;

#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_DEFAULT (0x88888888U)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_RD_MASK (0xffffffffU)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_WR_MASK (0xffffffffU)


///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS0_TRIM_BF_OFF ( 0)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS0_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS0_TRIM_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS0_TRIM_BF_DEF (0x00000008)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS1_TRIM_BF_OFF ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS1_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS1_TRIM_BF_MSK (0x000000F0)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS1_TRIM_BF_DEF (0x00000080)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS2_TRIM_BF_OFF ( 8)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS2_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS2_TRIM_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS2_TRIM_BF_DEF (0x00000800)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS3_TRIM_BF_OFF (12)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS3_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS3_TRIM_BF_MSK (0x0000F000)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS3_TRIM_BF_DEF (0x00008000)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS4_TRIM_BF_OFF (16)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS4_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS4_TRIM_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS4_TRIM_BF_DEF (0x00080000)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS5_TRIM_BF_OFF (20)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS5_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS5_TRIM_BF_MSK (0x00F00000)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS5_TRIM_BF_DEF (0x00800000)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS6_TRIM_BF_OFF (24)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS6_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS6_TRIM_BF_MSK (0x0F000000)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS6_TRIM_BF_DEF (0x08000000)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS7_TRIM_BF_OFF (28)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS7_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS7_TRIM_BF_MSK (0xF0000000)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_TXBIAS_50U_FROM_PMOS7_TRIM_BF_DEF (0x80000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TX_BIAS_TRIM_PMOS1 register description at address offset 0x80
  *
  * Register default value:        0x00000088
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/tx_bias_trim_pmos1
  * tx_bias_trim_pmos1
  */

typedef union {
  struct {
    uint32_t TXBIAS_50U_FROM_PMOS8_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t TXBIAS_100U_FROM_PMOS0_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="4" ResetValue="0x8"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_tx_bias_trim_pmos1_reg_t;

#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_DEFAULT (0x00000088U)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_RD_MASK (0x000000ffU)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_WR_MASK (0x000000ffU)


///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_TXBIAS_50U_FROM_PMOS8_TRIM_BF_OFF ( 0)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_TXBIAS_50U_FROM_PMOS8_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_TXBIAS_50U_FROM_PMOS8_TRIM_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_TXBIAS_50U_FROM_PMOS8_TRIM_BF_DEF (0x00000008)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_TXBIAS_100U_FROM_PMOS0_TRIM_BF_OFF ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_TXBIAS_100U_FROM_PMOS0_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_TXBIAS_100U_FROM_PMOS0_TRIM_BF_MSK (0x000000F0)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_TXBIAS_100U_FROM_PMOS0_TRIM_BF_DEF (0x00000080)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TX_BIAS_TRIM_NMOS0 register description at address offset 0x84
  *
  * Register default value:        0x00888888
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/tx_bias_trim_nmos0
  * tx_bias_trim_nmos0
  */

typedef union {
  struct {
    uint32_t TXBIAS_50U_FROM_NMOS0_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_NMOS1_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="4" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_NMOS2_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="8" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_NMOS3_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="12" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_NMOS4_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="16" ResetValue="0x8"
    uint32_t TXBIAS_50U_FROM_NMOS5_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="20" ResetValue="0x8"
    uint32_t  : 8;
    ///< Reserved
    ///< AccessType="RO" BitOffset="24" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_tx_bias_trim_nmos0_reg_t;

#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_DEFAULT (0x00888888U)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_RD_MASK (0x00ffffffU)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_WR_MASK (0x00ffffffU)


///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS0_TRIM_BF_OFF ( 0)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS0_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS0_TRIM_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS0_TRIM_BF_DEF (0x00000008)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS1_TRIM_BF_OFF ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS1_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS1_TRIM_BF_MSK (0x000000F0)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS1_TRIM_BF_DEF (0x00000080)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS2_TRIM_BF_OFF ( 8)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS2_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS2_TRIM_BF_MSK (0x00000F00)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS2_TRIM_BF_DEF (0x00000800)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS3_TRIM_BF_OFF (12)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS3_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS3_TRIM_BF_MSK (0x0000F000)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS3_TRIM_BF_DEF (0x00008000)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS4_TRIM_BF_OFF (16)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS4_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS4_TRIM_BF_MSK (0x000F0000)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS4_TRIM_BF_DEF (0x00080000)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS5_TRIM_BF_OFF (20)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS5_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS5_TRIM_BF_MSK (0x00F00000)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_TXBIAS_50U_FROM_NMOS5_TRIM_BF_DEF (0x00800000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TX_BIAS_TRIM_NMOS1 register description at address offset 0x88
  *
  * Register default value:        0x00000088
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/tx_bias_trim_nmos1
  * tx_bias_trim_nmos1
  */

typedef union {
  struct {
    uint32_t TXBIAS_NMOS_RECEIVE_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t TXBIAS_NMOS_TOPMOS_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="4" ResetValue="0x8"
    uint32_t  : 24;
    ///< Reserved
    ///< AccessType="RO" BitOffset="8" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_tx_bias_trim_nmos1_reg_t;

#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_DEFAULT (0x00000088U)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_RD_MASK (0x000000ffU)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_WR_MASK (0x000000ffU)


///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_TXBIAS_NMOS_RECEIVE_TRIM_BF_OFF ( 0)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_TXBIAS_NMOS_RECEIVE_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_TXBIAS_NMOS_RECEIVE_TRIM_BF_MSK (0x0000000F)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_TXBIAS_NMOS_RECEIVE_TRIM_BF_DEF (0x00000008)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_TXBIAS_NMOS_TOPMOS_TRIM_BF_OFF ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_TXBIAS_NMOS_TOPMOS_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_TXBIAS_NMOS_TOPMOS_TRIM_BF_MSK (0x000000F0)
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_TXBIAS_NMOS_TOPMOS_TRIM_BF_DEF (0x00000080)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TX_BIAS_CTRL0 register description at address offset 0x8c
  *
  * Register default value:        0x00000010
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/tx_bias_ctrl0
  * tx_bias_ctrl0
  */

typedef union {
  struct {
    uint32_t TXBIAS_PD_B : 1;
    ///< enable tx_bias_p & tx_bias_n
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXBIAS_PMOS_RECEIVE_TRIM : 4;
    ///< trim control of the biasing current
    ///< AccessType="RW" BitOffset="1" ResetValue="0x8"
    uint32_t  : 27;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_tx_bias_ctrl0_reg_t;

#define TXANA_FFE_MSG_TX_BIAS_CTRL0_DEFAULT (0x00000010U)
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_RD_MASK (0x0000001fU)
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_WR_MASK (0x0000001fU)


///< enable tx_bias_p & tx_bias_n
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_TXBIAS_PD_B_BF_OFF ( 0)
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_TXBIAS_PD_B_BF_WID ( 1)
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_TXBIAS_PD_B_BF_MSK (0x00000001)
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_TXBIAS_PD_B_BF_DEF (0x00000000)

///< trim control of the biasing current
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_TXBIAS_PMOS_RECEIVE_TRIM_BF_OFF ( 1)
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_TXBIAS_PMOS_RECEIVE_TRIM_BF_WID ( 4)
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_TXBIAS_PMOS_RECEIVE_TRIM_BF_MSK (0x0000001E)
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_TXBIAS_PMOS_RECEIVE_TRIM_BF_DEF (0x00000010)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKDIV_CTRL0 register description at address offset 0x90
  *
  * Register default value:        0x00000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkdiv_ctrl0
  * txclkdiv_ctrl0
  */

typedef union {
  struct {
    uint32_t TXDIV_AUTONEG_DIVRATIO : 9;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXDIV_AUTONEG_DIV_BY_0P5 : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="9" ResetValue="0x0"
    uint32_t TXDIV_AUTONEG_RST_B : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
    uint32_t TXDIV_PMA2PCS_DIVRATIO : 9;
    ///< Select div ratio in st1
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t TXDIV_PMA2PCS_DIV_BY_0P5 : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="25" ResetValue="0x0"
    uint32_t TXDIV_PMA2PCS_RST_B : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="26" ResetValue="0x0"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkdiv_ctrl0_reg_t;

#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_DEFAULT (0x00000000U)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_RD_MASK (0x07ff07ffU)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_WR_MASK (0x07ff07ffU)


#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_DIVRATIO_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_DIVRATIO_BF_WID ( 9)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_DIVRATIO_BF_MSK (0x000001FF)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_DIVRATIO_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_DIV_BY_0P5_BF_OFF ( 9)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_DIV_BY_0P5_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_DIV_BY_0P5_BF_MSK (0x00000200)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_DIV_BY_0P5_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_RST_B_BF_OFF (10)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_RST_B_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_RST_B_BF_MSK (0x00000400)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_AUTONEG_RST_B_BF_DEF (0x00000000)

///< Select div ratio in st1
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_DIVRATIO_BF_OFF (16)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_DIVRATIO_BF_WID ( 9)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_DIVRATIO_BF_MSK (0x01FF0000)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_DIVRATIO_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_DIV_BY_0P5_BF_OFF (25)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_DIV_BY_0P5_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_DIV_BY_0P5_BF_MSK (0x02000000)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_DIV_BY_0P5_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_RST_B_BF_OFF (26)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_RST_B_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_RST_B_BF_MSK (0x04000000)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_TXDIV_PMA2PCS_RST_B_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TXCLKDIV_CTRL1 register description at address offset 0x94
  *
  * Register default value:        0x00000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/txclkdiv_ctrl1
  * txclkdiv_ctrl1
  */

typedef union {
  struct {
    uint32_t TXDIV_SOC_DIVRATIO : 9;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXDIV_SOC_DIV_BY_0P5_EN : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="9" ResetValue="0x0"
    uint32_t TXDIV_SOC_RST_B : 1;
    ///< ---
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t  : 21;
    ///< Reserved
    ///< AccessType="RO" BitOffset="11" ResetValue="None"
  } ;
  uint32_t value;
} txana_ffe_msg_txclkdiv_ctrl1_reg_t;

#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_DEFAULT (0x00000000U)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_RD_MASK (0x000007ffU)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_WR_MASK (0x000007ffU)


#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_DIVRATIO_BF_OFF ( 0)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_DIVRATIO_BF_WID ( 9)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_DIVRATIO_BF_MSK (0x000001FF)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_DIVRATIO_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_DIV_BY_0P5_EN_BF_OFF ( 9)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_DIV_BY_0P5_EN_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_DIV_BY_0P5_EN_BF_MSK (0x00000200)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_DIV_BY_0P5_EN_BF_DEF (0x00000000)

#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_RST_B_BF_OFF (10)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_RST_B_BF_WID ( 1)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_RST_B_BF_MSK (0x00000400)
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_TXDIV_SOC_RST_B_BF_DEF (0x00000000)


/** @brief TXANA_FFE_REGS_MSG_TXANA_FFE_REGS_TX_SPARE0 register description at address offset 0x98
  *
  * Register default value:        0xFF000000
  * Register full path in IP: TXANA_FFE_regs_MSG/TXANA_FFE_regs/tx_spare0
  * tx_spare0
  */

typedef union {
  struct {
    uint32_t TXFFE_SPARE0 : 32;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0xFF000000"
  } ;
  uint32_t value;
} txana_ffe_msg_tx_spare0_reg_t;

#define TXANA_FFE_MSG_TX_SPARE0_DEFAULT (0xff000000U)
#define TXANA_FFE_MSG_TX_SPARE0_RD_MASK (0xffffffffU)
#define TXANA_FFE_MSG_TX_SPARE0_WR_MASK (0xffffffffU)


#define TXANA_FFE_MSG_TX_SPARE0_TXFFE_SPARE0_BF_OFF ( 0)
#define TXANA_FFE_MSG_TX_SPARE0_TXFFE_SPARE0_BF_WID (32)
#define TXANA_FFE_MSG_TX_SPARE0_TXFFE_SPARE0_BF_MSK (0xFFFFFFFF)
#define TXANA_FFE_MSG_TX_SPARE0_TXFFE_SPARE0_BF_DEF (0xFF000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define TXANA_FFE_MSG_TXCLKPATH_CTRL0_REG(_BASE) ((txana_ffe_msg_txclkpath_ctrl0_reg_t*) TXANA_FFE_MSG_TXCLKPATH_CTRL0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLK_REFGEN0_REG(_BASE) ((txana_ffe_msg_txclk_refgen0_reg_t*) TXANA_FFE_MSG_TXCLK_REFGEN0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLK_REFGEN1_REG(_BASE) ((txana_ffe_msg_txclk_refgen1_reg_t*) TXANA_FFE_MSG_TXCLK_REFGEN1_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLK_SENSE0_REG(_BASE) ((txana_ffe_msg_txclk_sense0_reg_t*) TXANA_FFE_MSG_TXCLK_SENSE0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKMUX_CTUNE0_REG(_BASE) ((txana_ffe_msg_txclkmux_ctune0_reg_t*) TXANA_FFE_MSG_TXCLKMUX_CTUNE0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKMUX_THR0_REG(_BASE) ((txana_ffe_msg_txclkmux_thr0_reg_t*) TXANA_FFE_MSG_TXCLKMUX_THR0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST1_CTUNE0_REG(_BASE) ((txana_ffe_msg_txclkst1_ctune0_reg_t*) TXANA_FFE_MSG_TXCLKST1_CTUNE0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST1_CTUNE1_REG(_BASE) ((txana_ffe_msg_txclkst1_ctune1_reg_t*) TXANA_FFE_MSG_TXCLKST1_CTUNE1_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST1_CTUNE2_REG(_BASE) ((txana_ffe_msg_txclkst1_ctune2_reg_t*) TXANA_FFE_MSG_TXCLKST1_CTUNE2_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE0_REG(_BASE) ((txana_ffe_msg_txclkst2_ctune0_reg_t*) TXANA_FFE_MSG_TXCLKST2_CTUNE0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE1_REG(_BASE) ((txana_ffe_msg_txclkst2_ctune1_reg_t*) TXANA_FFE_MSG_TXCLKST2_CTUNE1_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_THR0_REG(_BASE) ((txana_ffe_msg_txclkst2_thr0_reg_t*) TXANA_FFE_MSG_TXCLKST2_THR0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE2_REG(_BASE) ((txana_ffe_msg_txclkst2_ctune2_reg_t*) TXANA_FFE_MSG_TXCLKST2_CTUNE2_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE3_REG(_BASE) ((txana_ffe_msg_txclkst2_ctune3_reg_t*) TXANA_FFE_MSG_TXCLKST2_CTUNE3_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_THR1_REG(_BASE) ((txana_ffe_msg_txclkst2_thr1_reg_t*) TXANA_FFE_MSG_TXCLKST2_THR1_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE4_REG(_BASE) ((txana_ffe_msg_txclkst2_ctune4_reg_t*) TXANA_FFE_MSG_TXCLKST2_CTUNE4_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE5_REG(_BASE) ((txana_ffe_msg_txclkst2_ctune5_reg_t*) TXANA_FFE_MSG_TXCLKST2_CTUNE5_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_THR2_REG(_BASE) ((txana_ffe_msg_txclkst2_thr2_reg_t*) TXANA_FFE_MSG_TXCLKST2_THR2_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE6_REG(_BASE) ((txana_ffe_msg_txclkst2_ctune6_reg_t*) TXANA_FFE_MSG_TXCLKST2_CTUNE6_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_CTUNE7_REG(_BASE) ((txana_ffe_msg_txclkst2_ctune7_reg_t*) TXANA_FFE_MSG_TXCLKST2_CTUNE7_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKST2_THR3_REG(_BASE) ((txana_ffe_msg_txclkst2_thr3_reg_t*) TXANA_FFE_MSG_TXCLKST2_THR3_ADR(_BASE))
#define TXANA_FFE_MSG_TXCOMP_CTRL0_REG(_BASE) ((txana_ffe_msg_txcomp_ctrl0_reg_t*) TXANA_FFE_MSG_TXCOMP_CTRL0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCOMP_CTRL1_REG(_BASE) ((txana_ffe_msg_txcomp_ctrl1_reg_t*) TXANA_FFE_MSG_TXCOMP_CTRL1_ADR(_BASE))
#define TXANA_FFE_MSG_TXCOMP_CTRL2_REG(_BASE) ((txana_ffe_msg_txcomp_ctrl2_reg_t*) TXANA_FFE_MSG_TXCOMP_CTRL2_ADR(_BASE))
#define TXANA_FFE_MSG_TXDRV_SENSE0_REG(_BASE) ((txana_ffe_msg_txdrv_sense0_reg_t*) TXANA_FFE_MSG_TXDRV_SENSE0_ADR(_BASE))
#define TXANA_FFE_MSG_TXDRV_SENSE1_REG(_BASE) ((txana_ffe_msg_txdrv_sense1_reg_t*) TXANA_FFE_MSG_TXDRV_SENSE1_ADR(_BASE))
#define TXANA_FFE_MSG_TXDRV_SENSE2_REG(_BASE) ((txana_ffe_msg_txdrv_sense2_reg_t*) TXANA_FFE_MSG_TXDRV_SENSE2_ADR(_BASE))
#define TXANA_FFE_MSG_TXREG_CTRL0_REG(_BASE) ((txana_ffe_msg_txreg_ctrl0_reg_t*) TXANA_FFE_MSG_TXREG_CTRL0_ADR(_BASE))
#define TXANA_FFE_MSG_TX_MISC_CTRL0_REG(_BASE) ((txana_ffe_msg_tx_misc_ctrl0_reg_t*) TXANA_FFE_MSG_TX_MISC_CTRL0_ADR(_BASE))
#define TXANA_FFE_MSG_TX_DFX0_REG(_BASE) ((txana_ffe_msg_tx_dfx0_reg_t*) TXANA_FFE_MSG_TX_DFX0_ADR(_BASE))
#define TXANA_FFE_MSG_TX_DFX1_REG(_BASE) ((txana_ffe_msg_tx_dfx1_reg_t*) TXANA_FFE_MSG_TX_DFX1_ADR(_BASE))
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_REG(_BASE) ((txana_ffe_msg_tx_bias_trim_pmos0_reg_t*) TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS0_ADR(_BASE))
#define TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_REG(_BASE) ((txana_ffe_msg_tx_bias_trim_pmos1_reg_t*) TXANA_FFE_MSG_TX_BIAS_TRIM_PMOS1_ADR(_BASE))
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_REG(_BASE) ((txana_ffe_msg_tx_bias_trim_nmos0_reg_t*) TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS0_ADR(_BASE))
#define TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_REG(_BASE) ((txana_ffe_msg_tx_bias_trim_nmos1_reg_t*) TXANA_FFE_MSG_TX_BIAS_TRIM_NMOS1_ADR(_BASE))
#define TXANA_FFE_MSG_TX_BIAS_CTRL0_REG(_BASE) ((txana_ffe_msg_tx_bias_ctrl0_reg_t*) TXANA_FFE_MSG_TX_BIAS_CTRL0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKDIV_CTRL0_REG(_BASE) ((txana_ffe_msg_txclkdiv_ctrl0_reg_t*) TXANA_FFE_MSG_TXCLKDIV_CTRL0_ADR(_BASE))
#define TXANA_FFE_MSG_TXCLKDIV_CTRL1_REG(_BASE) ((txana_ffe_msg_txclkdiv_ctrl1_reg_t*) TXANA_FFE_MSG_TXCLKDIV_CTRL1_ADR(_BASE))
#define TXANA_FFE_MSG_TX_SPARE0_REG(_BASE) ((txana_ffe_msg_tx_spare0_reg_t*) TXANA_FFE_MSG_TX_SPARE0_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    txana_ffe_msg_txclkpath_ctrl0_reg_t TXCLKPATH_CTRL0; /*< Address offset = 0x0 */
    txana_ffe_msg_txclk_refgen0_reg_t TXCLK_REFGEN0; /*< Address offset = 0x4 */
    txana_ffe_msg_txclk_refgen1_reg_t TXCLK_REFGEN1; /*< Address offset = 0x8 */
    txana_ffe_msg_txclk_sense0_reg_t TXCLK_SENSE0; /*< Address offset = 0xc */
    txana_ffe_msg_txclkmux_ctune0_reg_t TXCLKMUX_CTUNE0; /*< Address offset = 0x10 */
    txana_ffe_msg_txclkmux_thr0_reg_t TXCLKMUX_THR0; /*< Address offset = 0x14 */
    txana_ffe_msg_txclkst1_ctune0_reg_t TXCLKST1_CTUNE0; /*< Address offset = 0x18 */
    txana_ffe_msg_txclkst1_ctune1_reg_t TXCLKST1_CTUNE1; /*< Address offset = 0x1c */
    txana_ffe_msg_txclkst1_ctune2_reg_t TXCLKST1_CTUNE2; /*< Address offset = 0x20 */
    txana_ffe_msg_txclkst2_ctune0_reg_t TXCLKST2_CTUNE0; /*< Address offset = 0x24 */
    txana_ffe_msg_txclkst2_ctune1_reg_t TXCLKST2_CTUNE1; /*< Address offset = 0x28 */
    txana_ffe_msg_txclkst2_thr0_reg_t TXCLKST2_THR0; /*< Address offset = 0x2c */
    txana_ffe_msg_txclkst2_ctune2_reg_t TXCLKST2_CTUNE2; /*< Address offset = 0x30 */
    txana_ffe_msg_txclkst2_ctune3_reg_t TXCLKST2_CTUNE3; /*< Address offset = 0x34 */
    txana_ffe_msg_txclkst2_thr1_reg_t TXCLKST2_THR1; /*< Address offset = 0x38 */
    txana_ffe_msg_txclkst2_ctune4_reg_t TXCLKST2_CTUNE4; /*< Address offset = 0x3c */
    txana_ffe_msg_txclkst2_ctune5_reg_t TXCLKST2_CTUNE5; /*< Address offset = 0x40 */
    txana_ffe_msg_txclkst2_thr2_reg_t TXCLKST2_THR2; /*< Address offset = 0x44 */
    txana_ffe_msg_txclkst2_ctune6_reg_t TXCLKST2_CTUNE6; /*< Address offset = 0x48 */
    txana_ffe_msg_txclkst2_ctune7_reg_t TXCLKST2_CTUNE7; /*< Address offset = 0x4c */
    txana_ffe_msg_txclkst2_thr3_reg_t TXCLKST2_THR3; /*< Address offset = 0x50 */
    txana_ffe_msg_txcomp_ctrl0_reg_t TXCOMP_CTRL0; /*< Address offset = 0x54 */
    txana_ffe_msg_txcomp_ctrl1_reg_t TXCOMP_CTRL1; /*< Address offset = 0x58 */
    txana_ffe_msg_txcomp_ctrl2_reg_t TXCOMP_CTRL2; /*< Address offset = 0x5c */
    txana_ffe_msg_txdrv_sense0_reg_t TXDRV_SENSE0; /*< Address offset = 0x60 */
    txana_ffe_msg_txdrv_sense1_reg_t TXDRV_SENSE1; /*< Address offset = 0x64 */
    txana_ffe_msg_txdrv_sense2_reg_t TXDRV_SENSE2; /*< Address offset = 0x68 */
    txana_ffe_msg_txreg_ctrl0_reg_t TXREG_CTRL0; /*< Address offset = 0x6c */
    txana_ffe_msg_tx_misc_ctrl0_reg_t TX_MISC_CTRL0; /*< Address offset = 0x70 */
    txana_ffe_msg_tx_dfx0_reg_t TX_DFX0; /*< Address offset = 0x74 */
    txana_ffe_msg_tx_dfx1_reg_t TX_DFX1; /*< Address offset = 0x78 */
    txana_ffe_msg_tx_bias_trim_pmos0_reg_t TX_BIAS_TRIM_PMOS0; /*< Address offset = 0x7c */
    txana_ffe_msg_tx_bias_trim_pmos1_reg_t TX_BIAS_TRIM_PMOS1; /*< Address offset = 0x80 */
    txana_ffe_msg_tx_bias_trim_nmos0_reg_t TX_BIAS_TRIM_NMOS0; /*< Address offset = 0x84 */
    txana_ffe_msg_tx_bias_trim_nmos1_reg_t TX_BIAS_TRIM_NMOS1; /*< Address offset = 0x88 */
    txana_ffe_msg_tx_bias_ctrl0_reg_t TX_BIAS_CTRL0; /*< Address offset = 0x8c */
    txana_ffe_msg_txclkdiv_ctrl0_reg_t TXCLKDIV_CTRL0; /*< Address offset = 0x90 */
    txana_ffe_msg_txclkdiv_ctrl1_reg_t TXCLKDIV_CTRL1; /*< Address offset = 0x94 */
    txana_ffe_msg_tx_spare0_reg_t TX_SPARE0; /*< Address offset = 0x98 */
} txana_ffe_msg_t;     // size: 0x009c

// AddressSpace struct pointer
//
#define DLNK_JESD0_PHY_PMA0_TXANA_FFE_GLOBAL  ((txana_ffe_msg_t*) DLNK_JESD0_PHY_PMA0_TXANA_FFE_GLOBAL_BASE)
#define DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q0      ((txana_ffe_msg_t*) DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q0_BASE)
#define DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q1      ((txana_ffe_msg_t*) DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q1_BASE)
#define DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q2      ((txana_ffe_msg_t*) DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q2_BASE)
#define DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q3      ((txana_ffe_msg_t*) DLNK_JESD0_PHY_PMA0_TXANA_FFE_Q3_BASE)
#define DLNK_JESD1_PHY_PMA0_TXANA_FFE_GLOBAL  ((txana_ffe_msg_t*) DLNK_JESD1_PHY_PMA0_TXANA_FFE_GLOBAL_BASE)
#define DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q0      ((txana_ffe_msg_t*) DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q0_BASE)
#define DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q1      ((txana_ffe_msg_t*) DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q1_BASE)
#define DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q2      ((txana_ffe_msg_t*) DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q2_BASE)
#define DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q3      ((txana_ffe_msg_t*) DLNK_JESD1_PHY_PMA0_TXANA_FFE_Q3_BASE)
#define DLNK_JESD2_PHY_PMA0_TXANA_FFE_GLOBAL  ((txana_ffe_msg_t*) DLNK_JESD2_PHY_PMA0_TXANA_FFE_GLOBAL_BASE)
#define DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q0      ((txana_ffe_msg_t*) DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q0_BASE)
#define DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q1      ((txana_ffe_msg_t*) DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q1_BASE)
#define DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q2      ((txana_ffe_msg_t*) DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q2_BASE)
#define DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q3      ((txana_ffe_msg_t*) DLNK_JESD2_PHY_PMA0_TXANA_FFE_Q3_BASE)
#define DLNK_JESD3_PHY_PMA0_TXANA_FFE_GLOBAL  ((txana_ffe_msg_t*) DLNK_JESD3_PHY_PMA0_TXANA_FFE_GLOBAL_BASE)
#define DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q0      ((txana_ffe_msg_t*) DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q0_BASE)
#define DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q1      ((txana_ffe_msg_t*) DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q1_BASE)
#define DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q2      ((txana_ffe_msg_t*) DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q2_BASE)
#define DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q3      ((txana_ffe_msg_t*) DLNK_JESD3_PHY_PMA0_TXANA_FFE_Q3_BASE)

// ******************************************* /Address Space

#endif      // _TXANA_FFE_MSG_H_

