#ifndef _VE32_BP_CFG_DMEM_H_
#define _VE32_BP_CFG_DMEM_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define VEXABC0_DMEM_VE32_BP_CFG_BASE   ( 0x02804000 )
#define VEXABC1_DMEM_VE32_BP_CFG_BASE   ( 0x02844000 )
#define VEXABC2_DMEM_VE32_BP_CFG_BASE   ( 0x02884000 )
#define VEXABC3_DMEM_VE32_BP_CFG_BASE   ( 0x028c4000 )
#define VEXABC4_DMEM_VE32_BP_CFG_BASE   ( 0x02904000 )
#define VEXABC5_DMEM_VE32_BP_CFG_BASE   ( 0x02944000 )
#define VEXABC6_DMEM_VE32_BP_CFG_BASE   ( 0x02984000 )
#define VEXABC7_DMEM_VE32_BP_CFG_BASE   ( 0x029c4000 )
#define VEXABC8_DMEM_VE32_BP_CFG_BASE   ( 0x02a04000 )
#define VEXABC9_DMEM_VE32_BP_CFG_BASE   ( 0x02a44000 )
#define VEXABC10_DMEM_VE32_BP_CFG_BASE  ( 0x02a84000 )
#define VEXABC11_DMEM_VE32_BP_CFG_BASE  ( 0x02ac4000 )
#define VEXABC12_DMEM_VE32_BP_CFG_BASE  ( 0x02b04000 )
#define VEXABC13_DMEM_VE32_BP_CFG_BASE  ( 0x02b44000 )
#define VEXABC14_DMEM_VE32_BP_CFG_BASE  ( 0x02b84000 )
#define VEXABC15_DMEM_VE32_BP_CFG_BASE  ( 0x02bc4000 )
#define VEXABC16_DMEM_VE32_BP_CFG_BASE  ( 0x02c04000 )
#define VEXABC17_DMEM_VE32_BP_CFG_BASE  ( 0x02c44000 )
#define VEXABC18_DMEM_VE32_BP_CFG_BASE  ( 0x02c84000 )
#define VEXABC19_DMEM_VE32_BP_CFG_BASE  ( 0x02cc4000 )
#define VEXABC20_DMEM_VE32_BP_CFG_BASE  ( 0x02d04000 )
#define VEXABC21_DMEM_VE32_BP_CFG_BASE  ( 0x02d44000 )
#define VEXABC22_DMEM_VE32_BP_CFG_BASE  ( 0x02d84000 )
#define VEXABC23_DMEM_VE32_BP_CFG_BASE  ( 0x02dc4000 )
#define VEXABC24_DMEM_VE32_BP_CFG_BASE  ( 0x02e04000 )
#define VEXABC25_DMEM_VE32_BP_CFG_BASE  ( 0x02e44000 )
#define VEXABC26_DMEM_VE32_BP_CFG_BASE  ( 0x02e84000 )
#define VEXABC27_DMEM_VE32_BP_CFG_BASE  ( 0x02ec4000 )
#define VEXABC28_DMEM_VE32_BP_CFG_BASE  ( 0x02f04000 )
#define VEXABC29_DMEM_VE32_BP_CFG_BASE  ( 0x02f44000 )
#define VEXABC30_DMEM_VE32_BP_CFG_BASE  ( 0x02f84000 )
#define VEXABC31_DMEM_VE32_BP_CFG_BASE  ( 0x02fc4000 )
#define VEXABC32_DMEM_VE32_BP_CFG_BASE  ( 0x03004000 )
#define VEXABC33_DMEM_VE32_BP_CFG_BASE  ( 0x03044000 )
#define VEXABC34_DMEM_VE32_BP_CFG_BASE  ( 0x03084000 )
#define VEXABC35_DMEM_VE32_BP_CFG_BASE  ( 0x030c4000 )
#define VEXABC36_DMEM_VE32_BP_CFG_BASE  ( 0x03104000 )
#define VEXABC37_DMEM_VE32_BP_CFG_BASE  ( 0x03144000 )
#define VEXABC38_DMEM_VE32_BP_CFG_BASE  ( 0x03184000 )
#define VEXABC39_DMEM_VE32_BP_CFG_BASE  ( 0x031c4000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define VE32_BP_CFG_DMEM_FIRST_OFFSET ( 0x00000000U )
#define VE32_BP_CFG_DMEM_LAST_OFFSET ( 0x00003ffcU )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define VE32_BP_CFG_DMEM_FIRST_ADR(_BASE) (( ( _BASE ) + ( VE32_BP_CFG_DMEM_FIRST_OFFSET ) ))
#define VE32_BP_CFG_DMEM_LAST_ADR(_BASE) (( ( _BASE ) + ( VE32_BP_CFG_DMEM_LAST_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief VE32_BP_CONFIG_DMEM_MAP_MEM_VE32_BP_CONFIG_DMEM_MAP_VE32_BP_CONFIG_DMEM_FIRST register description at address offset 0x0
  *
  * Register default value:        0x00000000
  * Register full path in IP: ve32_bp_config_dmem_map_MEM/ve32_bp_config_dmem_map/ve32_bp_config_dmem_first
  * bp_config_dmem_word register.
  */

typedef union {
  struct {
    uint32_t DMEM_WORD : 32;
    ///< Data memory word.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} ve32_bp_cfg_dmem_first_reg_t;

#define VE32_BP_CFG_DMEM_FIRST_DEFAULT (0x00000000U)
#define VE32_BP_CFG_DMEM_FIRST_RD_MASK (0xffffffffU)
#define VE32_BP_CFG_DMEM_FIRST_WR_MASK (0xffffffffU)


///< Data memory word.
#define VE32_BP_CFG_DMEM_FIRST_WORD_BF_OFF ( 0)
#define VE32_BP_CFG_DMEM_FIRST_WORD_BF_WID (32)
#define VE32_BP_CFG_DMEM_FIRST_WORD_BF_MSK (0xFFFFFFFF)
#define VE32_BP_CFG_DMEM_FIRST_WORD_BF_DEF (0x00000000)


/** @brief VE32_BP_CONFIG_DMEM_MAP_MEM_VE32_BP_CONFIG_DMEM_MAP_VE32_BP_CONFIG_DMEM_LAST register description at address offset 0x3ffc
  *
  * Register default value:        0x00000000
  * Register full path in IP: ve32_bp_config_dmem_map_MEM/ve32_bp_config_dmem_map/ve32_bp_config_dmem_last
  * bp_config_dmem_word register.
  */

typedef union {
  struct {
    uint32_t DMEM_WORD : 32;
    ///< Data memory word.
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} ve32_bp_cfg_dmem_last_reg_t;

#define VE32_BP_CFG_DMEM_LAST_DEFAULT (0x00000000U)
#define VE32_BP_CFG_DMEM_LAST_RD_MASK (0xffffffffU)
#define VE32_BP_CFG_DMEM_LAST_WR_MASK (0xffffffffU)


///< Data memory word.
#define VE32_BP_CFG_DMEM_LAST_WORD_BF_OFF ( 0)
#define VE32_BP_CFG_DMEM_LAST_WORD_BF_WID (32)
#define VE32_BP_CFG_DMEM_LAST_WORD_BF_MSK (0xFFFFFFFF)
#define VE32_BP_CFG_DMEM_LAST_WORD_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define VE32_BP_CFG_DMEM_FIRST_REG(_BASE) ((ve32_bp_cfg_dmem_first_reg_t*) VE32_BP_CFG_DMEM_FIRST_ADR(_BASE))
#define VE32_BP_CFG_DMEM_LAST_REG(_BASE) ((ve32_bp_cfg_dmem_last_reg_t*) VE32_BP_CFG_DMEM_LAST_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    ve32_bp_cfg_dmem_first_reg_t VE32_BP_CFG_DMEM_FIRST; /*< Address offset = 0x0 */
    const uint8_t        reservedArea0 [16376]; /*< Address offset = 0x4 */
    ve32_bp_cfg_dmem_last_reg_t VE32_BP_CFG_DMEM_LAST; /*< Address offset = 0x3ffc */
} ve32_bp_cfg_dmem_t;     // size: 0x0008

// AddressSpace struct pointer
//
#define VEXABC0_DMEM_VE32_BP_CFG   ((ve32_bp_cfg_dmem_t*) VEXABC0_DMEM_VE32_BP_CFG_BASE)
#define VEXABC1_DMEM_VE32_BP_CFG   ((ve32_bp_cfg_dmem_t*) VEXABC1_DMEM_VE32_BP_CFG_BASE)
#define VEXABC2_DMEM_VE32_BP_CFG   ((ve32_bp_cfg_dmem_t*) VEXABC2_DMEM_VE32_BP_CFG_BASE)
#define VEXABC3_DMEM_VE32_BP_CFG   ((ve32_bp_cfg_dmem_t*) VEXABC3_DMEM_VE32_BP_CFG_BASE)
#define VEXABC4_DMEM_VE32_BP_CFG   ((ve32_bp_cfg_dmem_t*) VEXABC4_DMEM_VE32_BP_CFG_BASE)
#define VEXABC5_DMEM_VE32_BP_CFG   ((ve32_bp_cfg_dmem_t*) VEXABC5_DMEM_VE32_BP_CFG_BASE)
#define VEXABC6_DMEM_VE32_BP_CFG   ((ve32_bp_cfg_dmem_t*) VEXABC6_DMEM_VE32_BP_CFG_BASE)
#define VEXABC7_DMEM_VE32_BP_CFG   ((ve32_bp_cfg_dmem_t*) VEXABC7_DMEM_VE32_BP_CFG_BASE)
#define VEXABC8_DMEM_VE32_BP_CFG   ((ve32_bp_cfg_dmem_t*) VEXABC8_DMEM_VE32_BP_CFG_BASE)
#define VEXABC9_DMEM_VE32_BP_CFG   ((ve32_bp_cfg_dmem_t*) VEXABC9_DMEM_VE32_BP_CFG_BASE)
#define VEXABC10_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC10_DMEM_VE32_BP_CFG_BASE)
#define VEXABC11_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC11_DMEM_VE32_BP_CFG_BASE)
#define VEXABC12_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC12_DMEM_VE32_BP_CFG_BASE)
#define VEXABC13_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC13_DMEM_VE32_BP_CFG_BASE)
#define VEXABC14_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC14_DMEM_VE32_BP_CFG_BASE)
#define VEXABC15_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC15_DMEM_VE32_BP_CFG_BASE)
#define VEXABC16_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC16_DMEM_VE32_BP_CFG_BASE)
#define VEXABC17_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC17_DMEM_VE32_BP_CFG_BASE)
#define VEXABC18_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC18_DMEM_VE32_BP_CFG_BASE)
#define VEXABC19_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC19_DMEM_VE32_BP_CFG_BASE)
#define VEXABC20_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC20_DMEM_VE32_BP_CFG_BASE)
#define VEXABC21_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC21_DMEM_VE32_BP_CFG_BASE)
#define VEXABC22_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC22_DMEM_VE32_BP_CFG_BASE)
#define VEXABC23_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC23_DMEM_VE32_BP_CFG_BASE)
#define VEXABC24_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC24_DMEM_VE32_BP_CFG_BASE)
#define VEXABC25_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC25_DMEM_VE32_BP_CFG_BASE)
#define VEXABC26_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC26_DMEM_VE32_BP_CFG_BASE)
#define VEXABC27_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC27_DMEM_VE32_BP_CFG_BASE)
#define VEXABC28_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC28_DMEM_VE32_BP_CFG_BASE)
#define VEXABC29_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC29_DMEM_VE32_BP_CFG_BASE)
#define VEXABC30_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC30_DMEM_VE32_BP_CFG_BASE)
#define VEXABC31_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC31_DMEM_VE32_BP_CFG_BASE)
#define VEXABC32_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC32_DMEM_VE32_BP_CFG_BASE)
#define VEXABC33_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC33_DMEM_VE32_BP_CFG_BASE)
#define VEXABC34_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC34_DMEM_VE32_BP_CFG_BASE)
#define VEXABC35_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC35_DMEM_VE32_BP_CFG_BASE)
#define VEXABC36_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC36_DMEM_VE32_BP_CFG_BASE)
#define VEXABC37_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC37_DMEM_VE32_BP_CFG_BASE)
#define VEXABC38_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC38_DMEM_VE32_BP_CFG_BASE)
#define VEXABC39_DMEM_VE32_BP_CFG  ((ve32_bp_cfg_dmem_t*) VEXABC39_DMEM_VE32_BP_CFG_BASE)

// ******************************************* /Address Space

#endif      // _VE32_BP_CFG_DMEM_H_

