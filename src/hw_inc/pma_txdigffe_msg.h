#ifndef _PMA_TXDIGFFE_MSG_H_
#define _PMA_TXDIGFFE_MSG_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_JESD0_PHY_PMA0_TXDIGFFE_GLOBAL_BASE  ( 0x06025000 )
#define DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q0_BASE      ( 0x06029000 )
#define DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q1_BASE      ( 0x0602d000 )
#define DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q2_BASE      ( 0x06031000 )
#define DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q3_BASE      ( 0x06035000 )
#define DLNK_JESD1_PHY_PMA0_TXDIGFFE_GLOBAL_BASE  ( 0x06825000 )
#define DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q0_BASE      ( 0x06829000 )
#define DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q1_BASE      ( 0x0682d000 )
#define DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q2_BASE      ( 0x06831000 )
#define DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q3_BASE      ( 0x06835000 )
#define DLNK_JESD2_PHY_PMA0_TXDIGFFE_GLOBAL_BASE  ( 0x07025000 )
#define DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q0_BASE      ( 0x07029000 )
#define DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q1_BASE      ( 0x0702d000 )
#define DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q2_BASE      ( 0x07031000 )
#define DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q3_BASE      ( 0x07035000 )
#define DLNK_JESD3_PHY_PMA0_TXDIGFFE_GLOBAL_BASE  ( 0x07825000 )
#define DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q0_BASE      ( 0x07829000 )
#define DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q1_BASE      ( 0x0782d000 )
#define DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q2_BASE      ( 0x07831000 )
#define DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q3_BASE      ( 0x07835000 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define PMA_TXDIGFFE_MSG_RST_OFFSET ( 0x00000000U )
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_OFFSET ( 0x00000004U )
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_OFFSET ( 0x00000008U )
#define PMA_TXDIGFFE_MSG_FFE1_OFFSET ( 0x0000000cU )
#define PMA_TXDIGFFE_MSG_FFE2_OFFSET ( 0x00000010U )
#define PMA_TXDIGFFE_MSG_FFE3_OFFSET ( 0x00000014U )
#define PMA_TXDIGFFE_MSG_FFE4_OFFSET ( 0x00000018U )
#define PMA_TXDIGFFE_MSG_HW_ASSIST1_OFFSET ( 0x0000001cU )
#define PMA_TXDIGFFE_MSG_HW_ASSIST2_OFFSET ( 0x00000020U )
#define PMA_TXDIGFFE_MSG_HW_ASSIST3_OFFSET ( 0x00000024U )
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_OFFSET ( 0x00000028U )
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_OFFSET ( 0x0000002cU )
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_OFFSET ( 0x00000030U )
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_OFFSET ( 0x00000034U )
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_OFFSET ( 0x00000038U )
#define PMA_TXDIGFFE_MSG_DFX2_OFFSET ( 0x0000003cU )
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_OFFSET ( 0x00000040U )
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_OFFSET ( 0x00000044U )
#define PMA_TXDIGFFE_MSG_CTRL_OUT_OFFSET ( 0x00000048U )
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_OFFSET ( 0x0000004cU )
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_OFFSET ( 0x00000050U )
#define PMA_TXDIGFFE_MSG_RW_SPARE_0_OFFSET ( 0x000000e8U )
#define PMA_TXDIGFFE_MSG_RW_SPARE_1_OFFSET ( 0x000000ecU )
#define PMA_TXDIGFFE_MSG_RW_SPARE_2_OFFSET ( 0x000000f0U )
#define PMA_TXDIGFFE_MSG_RW_SPARE_3_OFFSET ( 0x000000f4U )
#define PMA_TXDIGFFE_MSG_RO_SPARE_0_OFFSET ( 0x000000f8U )
#define PMA_TXDIGFFE_MSG_RO_SPARE_1_OFFSET ( 0x000000fcU )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define PMA_TXDIGFFE_MSG_RST_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_RST_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_FFE1_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_FFE1_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_FFE2_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_FFE2_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_FFE3_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_FFE3_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_FFE4_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_FFE4_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_HW_ASSIST1_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_HW_ASSIST1_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_HW_ASSIST2_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_HW_ASSIST2_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_HW_ASSIST3_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_HW_ASSIST3_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_HW_ASSIST4_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_DFX2_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_DFX2_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_CTRL_OUT_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_CTRL_OUT_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_RW_SPARE_0_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_RW_SPARE_0_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_RW_SPARE_1_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_RW_SPARE_1_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_RW_SPARE_2_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_RW_SPARE_2_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_RW_SPARE_3_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_RW_SPARE_3_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_RO_SPARE_0_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_RO_SPARE_0_OFFSET ) ))
#define PMA_TXDIGFFE_MSG_RO_SPARE_1_ADR(_BASE) (( ( _BASE ) + ( PMA_TXDIGFFE_MSG_RO_SPARE_1_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_RESET register description at address offset 0x0
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_reset
  * Reset management
  */

typedef union {
  struct {
    uint32_t RST_MAIN_OVR_EN : 1;
    ///< Main reset override enable
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t RST_MAIN_B_OVR : 1;
    ///< Main reset override value
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t  : 6;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
    uint32_t CKGATE_DISABLE : 1;
    ///< Disables local clock gaters
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t  : 23;
    ///< Reserved
    ///< AccessType="RO" BitOffset="9" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_rst_reg_t;

#define PMA_TXDIGFFE_MSG_RST_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_RST_RD_MASK (0x00000103U)
#define PMA_TXDIGFFE_MSG_RST_WR_MASK (0x00000103U)


///< Main reset override enable
#define PMA_TXDIGFFE_MSG_RST_MAIN_OVR_EN_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_RST_MAIN_OVR_EN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_RST_MAIN_OVR_EN_BF_MSK (0x00000001)
#define PMA_TXDIGFFE_MSG_RST_MAIN_OVR_EN_BF_DEF (0x00000000)

///< Main reset override value
#define PMA_TXDIGFFE_MSG_RST_MAIN_B_OVR_BF_OFF ( 1)
#define PMA_TXDIGFFE_MSG_RST_MAIN_B_OVR_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_RST_MAIN_B_OVR_BF_MSK (0x00000002)
#define PMA_TXDIGFFE_MSG_RST_MAIN_B_OVR_BF_DEF (0x00000000)

///< Disables local clock gaters
#define PMA_TXDIGFFE_MSG_RST_CKGATE_DIS_BF_OFF ( 8)
#define PMA_TXDIGFFE_MSG_RST_CKGATE_DIS_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_RST_CKGATE_DIS_BF_MSK (0x00000100)
#define PMA_TXDIGFFE_MSG_RST_CKGATE_DIS_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_CMOD_OVR_STATUS0 register description at address offset 0x4
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_cmod_ovr_status0
  * HW Assist
  */

typedef union {
  struct {
    uint32_t CSR_TXFFE_TXDOUT_OVRFLOW0 : 32;
    ///< tx ffe cmod portion overflow flag on LSB 32 Uis
    ///< AccessType="RO/C/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_cmod_ovr_stat0_reg_t;

#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_WR_MASK (0x00000000U)


///< tx ffe cmod portion overflow flag on LSB 32 Uis
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_CSR_TXFFE_TXDOUT_OVRFLOW0_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_CSR_TXFFE_TXDOUT_OVRFLOW0_BF_WID (32)
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_CSR_TXFFE_TXDOUT_OVRFLOW0_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_CSR_TXFFE_TXDOUT_OVRFLOW0_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_CMOD_OVR_STATUS1 register description at address offset 0x8
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_cmod_ovr_status1
  * HW Assist
  */

typedef union {
  struct {
    uint32_t CSR_TXFFE_TXDOUT_OVRFLOW1 : 32;
    ///< tx ffe cmod portion overflow flag on MSB 32 Uis
    ///< AccessType="RO/C/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_cmod_ovr_stat1_reg_t;

#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_WR_MASK (0x00000000U)


///< tx ffe cmod portion overflow flag on MSB 32 Uis
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_CSR_TXFFE_TXDOUT_OVRFLOW1_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_CSR_TXFFE_TXDOUT_OVRFLOW1_BF_WID (32)
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_CSR_TXFFE_TXDOUT_OVRFLOW1_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_CSR_TXFFE_TXDOUT_OVRFLOW1_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_FFE1 register description at address offset 0xc
  *
  * Register default value:        0x00530000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_ffe1
  * txffe
  */

typedef union {
  struct {
    uint32_t CSR_TXFFE_COEFF_M2 : 7;
    ///< TXFFE Coefficient -2
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
    uint32_t CSR_TXFFE_COEFF_M1 : 7;
    ///< TXFFE Coefficient -1
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
    uint32_t CSR_TXFFE_COEFF_0 : 7;
    ///< TXFFE Coefficient  0 - 20190515 - fix: RLM mitigation
    ///< AccessType="RW" BitOffset="16" ResetValue="0x53"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
    uint32_t CSR_TXFFE_COEFF_P1 : 7;
    ///< TXFFE Coefficient +1
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="31" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_ffe1_reg_t;

#define PMA_TXDIGFFE_MSG_FFE1_DEFAULT (0x00530000U)
#define PMA_TXDIGFFE_MSG_FFE1_RD_MASK (0x7f7f7f7fU)
#define PMA_TXDIGFFE_MSG_FFE1_WR_MASK (0x7f7f7f7fU)


///< TXFFE Coefficient -2
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_M2_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_M2_BF_WID ( 7)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_M2_BF_MSK (0x0000007F)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_M2_BF_DEF (0x00000000)

///< TXFFE Coefficient -1
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_M1_BF_OFF ( 8)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_M1_BF_WID ( 7)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_M1_BF_MSK (0x00007F00)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_M1_BF_DEF (0x00000000)

///< TXFFE Coefficient  0 - 20190515 - fix: RLM mitigation
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_0_BF_OFF (16)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_0_BF_WID ( 7)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_0_BF_MSK (0x007F0000)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_0_BF_DEF (0x00530000)

///< TXFFE Coefficient +1
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_P1_BF_OFF (24)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_P1_BF_WID ( 7)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_P1_BF_MSK (0x7F000000)
#define PMA_TXDIGFFE_MSG_FFE1_CSR_TXFFE_COEFF_P1_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_FFE2 register description at address offset 0x10
  *
  * Register default value:        0x00020000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_ffe2
  * txffe
  */

typedef union {
  struct {
    uint32_t CSR_TXFFE_COEFF_M3 : 6;
    ///< TXFFE Coefficient -3
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 10;
    ///< Reserved
    ///< AccessType="RO" BitOffset="6" ResetValue="None"
    uint32_t CSR_TXFFE_COEFF_MUX_OVR_EN : 1;
    ///< TXFFE Coeffcient Mux Override Enable
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t CSR_TXFFE_COEFF_LOAD : 1;
    ///< Default value is set to 1 for pre-silicon validation simplicity.
    ///< AccessType="RW" BitOffset="17" ResetValue="0x1"
    uint32_t  : 6;
    ///< Reserved
    ///< AccessType="RO" BitOffset="18" ResetValue="None"
    uint32_t CSR_TXDAT_SYMBOL_WIDTH_SEL_OVR_EN : 1;
    ///< TXFFE Symbol Width Selection Override Enable
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t CSR_TXDAT_SYMBOL_WIDTH_SEL_OVR_VAL : 2;
    ///< TXFFE Symbol Width Selection Override Value
    ///< AccessType="RW" BitOffset="25" ResetValue="0x0"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_ffe2_reg_t;

#define PMA_TXDIGFFE_MSG_FFE2_DEFAULT (0x00020000U)
#define PMA_TXDIGFFE_MSG_FFE2_RD_MASK (0x0703003fU)
#define PMA_TXDIGFFE_MSG_FFE2_WR_MASK (0x0703003fU)


///< TXFFE Coefficient -3
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_M3_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_M3_BF_WID ( 6)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_M3_BF_MSK (0x0000003F)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_M3_BF_DEF (0x00000000)

///< TXFFE Coeffcient Mux Override Enable
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_MUX_OVR_EN_BF_OFF (16)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_MUX_OVR_EN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_MUX_OVR_EN_BF_MSK (0x00010000)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_MUX_OVR_EN_BF_DEF (0x00000000)

///< Default value is set to 1 for pre-silicon validation simplicity.
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_LOAD_BF_OFF (17)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_LOAD_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_LOAD_BF_MSK (0x00020000)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXFFE_COEFF_LOAD_BF_DEF (0x00020000)

///< TXFFE Symbol Width Selection Override Enable
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXDAT_SYMBOL_WIDTH_SEL_OVR_EN_BF_OFF (24)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXDAT_SYMBOL_WIDTH_SEL_OVR_EN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXDAT_SYMBOL_WIDTH_SEL_OVR_EN_BF_MSK (0x01000000)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXDAT_SYMBOL_WIDTH_SEL_OVR_EN_BF_DEF (0x00000000)

///< TXFFE Symbol Width Selection Override Value
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXDAT_SYMBOL_WIDTH_SEL_OVR_VAL_BF_OFF (25)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXDAT_SYMBOL_WIDTH_SEL_OVR_VAL_BF_WID ( 2)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXDAT_SYMBOL_WIDTH_SEL_OVR_VAL_BF_MSK (0x06000000)
#define PMA_TXDIGFFE_MSG_FFE2_CSR_TXDAT_SYMBOL_WIDTH_SEL_OVR_VAL_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_FFE3 register description at address offset 0x14
  *
  * Register default value:        0x0000023F
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_ffe3
  * txffe
  */

typedef union {
  struct {
    uint32_t CSR_TXFFE_CMOD : 7;
    ///< 20190515b - fix: reverting default to 63.5 to make regression pass
    ///< (60+14/4 = 63.5); 20190515a - fix: change default value to 'd16; nbrkxmp:
    ///< relocate common mode portion at the end of ffe filtering to resolve
    ///< reset flop issue, default is changing to 'd63
    ///< AccessType="RW" BitOffset="0" ResetValue="0x3F"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="7" ResetValue="None"
    uint32_t CSR_DAC_SWAP_ILB_CB : 1;
    ///< swap bit[7] and bit[8] on the output of txffe, 0-no swap, 1-swap
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t TXFFE_FORCE_CMNMODE_ON_IDLE : 1;
    ///< zero out the txffe output when going to elecidle so that the cmod
    ///< dac code is maintained. 0 - txffe output is added to cmnmode on elecidle.
    ///< 1 - only cmnmode is sent to DAC on elecidle.
    ///< AccessType="RW" BitOffset="9" ResetValue="0x1"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_ffe3_reg_t;

#define PMA_TXDIGFFE_MSG_FFE3_DEFAULT (0x0000023fU)
#define PMA_TXDIGFFE_MSG_FFE3_RD_MASK (0x0000037fU)
#define PMA_TXDIGFFE_MSG_FFE3_WR_MASK (0x0000037fU)


///< 20190515b - fix: reverting default to 63.5 to make regression pass
///< (60+14/4 = 63.5); 20190515a - fix: change default value to 'd16; nbrkxmp:
///< relocate common mode portion at the end of ffe filtering to resolve
///< reset flop issue, default is changing to 'd63
#define PMA_TXDIGFFE_MSG_FFE3_CSR_TXFFE_CMOD_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_FFE3_CSR_TXFFE_CMOD_BF_WID ( 7)
#define PMA_TXDIGFFE_MSG_FFE3_CSR_TXFFE_CMOD_BF_MSK (0x0000007F)
#define PMA_TXDIGFFE_MSG_FFE3_CSR_TXFFE_CMOD_BF_DEF (0x0000003F)

///< swap bit[7] and bit[8] on the output of txffe, 0-no swap, 1-swap
#define PMA_TXDIGFFE_MSG_FFE3_CSR_DAC_SWAP_ILB_CB_BF_OFF ( 8)
#define PMA_TXDIGFFE_MSG_FFE3_CSR_DAC_SWAP_ILB_CB_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_FFE3_CSR_DAC_SWAP_ILB_CB_BF_MSK (0x00000100)
#define PMA_TXDIGFFE_MSG_FFE3_CSR_DAC_SWAP_ILB_CB_BF_DEF (0x00000000)

///< zero out the txffe output when going to elecidle so that the cmod
///< dac code is maintained. 0 - txffe output is added to cmnmode on elecidle.
///< 1 - only cmnmode is sent to DAC on elecidle.
#define PMA_TXDIGFFE_MSG_FFE3_TXFFE_FORCE_CMNMODE_ON_IDLE_BF_OFF ( 9)
#define PMA_TXDIGFFE_MSG_FFE3_TXFFE_FORCE_CMNMODE_ON_IDLE_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_FFE3_TXFFE_FORCE_CMNMODE_ON_IDLE_BF_MSK (0x00000200)
#define PMA_TXDIGFFE_MSG_FFE3_TXFFE_FORCE_CMNMODE_ON_IDLE_BF_DEF (0x00000200)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_FFE4 register description at address offset 0x18
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_ffe4
  * 
  */

typedef union {
  struct {
    uint32_t CSR_TXFFE_C0_MULT_OFFSET0 : 8;
    ///< TXFFE C0 Offset 0
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t CSR_TXFFE_C0_MULT_OFFSET1 : 8;
    ///< TXFFE C0 Offset 1
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t CSR_TXFFE_C0_MULT_OFFSET2 : 8;
    ///< TXFFE C0 Offset 2
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t CSR_TXFFE_C0_MULT_OFFSET3 : 8;
    ///< TXFFE C0 Offset 3
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_ffe4_reg_t;

#define PMA_TXDIGFFE_MSG_FFE4_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_FFE4_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_FFE4_WR_MASK (0xffffffffU)


///< TXFFE C0 Offset 0
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET0_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET0_BF_WID ( 8)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET0_BF_MSK (0x000000FF)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET0_BF_DEF (0x00000000)

///< TXFFE C0 Offset 1
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET1_BF_OFF ( 8)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET1_BF_WID ( 8)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET1_BF_MSK (0x0000FF00)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET1_BF_DEF (0x00000000)

///< TXFFE C0 Offset 2
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET2_BF_OFF (16)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET2_BF_WID ( 8)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET2_BF_MSK (0x00FF0000)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET2_BF_DEF (0x00000000)

///< TXFFE C0 Offset 3
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET3_BF_OFF (24)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET3_BF_WID ( 8)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET3_BF_MSK (0xFF000000)
#define PMA_TXDIGFFE_MSG_FFE4_CSR_TXFFE_C0_MULT_OFFSET3_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_HW_ASSIST1 register description at address offset 0x1c
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_hw_assist1
  * HW Assist
  */

typedef union {
  struct {
    uint32_t REG2HWA_CFG_AVG_ENG_START : 1;
    ///< Averager Engine Start
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_hw_assist1_reg_t;

#define PMA_TXDIGFFE_MSG_HW_ASSIST1_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_HW_ASSIST1_RD_MASK (0x00000001U)
#define PMA_TXDIGFFE_MSG_HW_ASSIST1_WR_MASK (0x00000001U)


///< Averager Engine Start
#define PMA_TXDIGFFE_MSG_HW_ASSIST1_REG2HWA_CFG_AVG_ENG_START_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_HW_ASSIST1_REG2HWA_CFG_AVG_ENG_START_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_HW_ASSIST1_REG2HWA_CFG_AVG_ENG_START_BF_MSK (0x00000001)
#define PMA_TXDIGFFE_MSG_HW_ASSIST1_REG2HWA_CFG_AVG_ENG_START_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_HW_ASSIST2 register description at address offset 0x20
  *
  * Register default value:        0x00000800
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_hw_assist2
  * HW Assist
  */

typedef union {
  struct {
    uint32_t REG2HWA_CFG_AVG_ENG_LIMIT : 32;
    ///< Averager Engine Limit
    ///< AccessType="RW" BitOffset="0" ResetValue="0x800"
  } ;
  uint32_t value;
} pma_txdigffe_msg_hw_assist2_reg_t;

#define PMA_TXDIGFFE_MSG_HW_ASSIST2_DEFAULT (0x00000800U)
#define PMA_TXDIGFFE_MSG_HW_ASSIST2_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_HW_ASSIST2_WR_MASK (0xffffffffU)


///< Averager Engine Limit
#define PMA_TXDIGFFE_MSG_HW_ASSIST2_REG2HWA_CFG_AVG_ENG_LIMIT_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_HW_ASSIST2_REG2HWA_CFG_AVG_ENG_LIMIT_BF_WID (32)
#define PMA_TXDIGFFE_MSG_HW_ASSIST2_REG2HWA_CFG_AVG_ENG_LIMIT_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_HW_ASSIST2_REG2HWA_CFG_AVG_ENG_LIMIT_BF_DEF (0x00000800)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_HW_ASSIST3 register description at address offset 0x24
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_hw_assist3
  * HW Assist
  */

typedef union {
  struct {
    uint32_t HWA2REG_CFG_AVG_ENG_CNT : 32;
    ///< Averager Engine Count
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_hw_assist3_reg_t;

#define PMA_TXDIGFFE_MSG_HW_ASSIST3_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_HW_ASSIST3_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_HW_ASSIST3_WR_MASK (0x00000000U)


///< Averager Engine Count
#define PMA_TXDIGFFE_MSG_HW_ASSIST3_HWA2REG_CFG_AVG_ENG_CNT_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_HW_ASSIST3_HWA2REG_CFG_AVG_ENG_CNT_BF_WID (32)
#define PMA_TXDIGFFE_MSG_HW_ASSIST3_HWA2REG_CFG_AVG_ENG_CNT_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_HW_ASSIST3_HWA2REG_CFG_AVG_ENG_CNT_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_HW_ASSIST4 register description at address offset 0x28
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_hw_assist4
  * 
  */

typedef union {
  struct {
    uint32_t HWA2REG_CFG_AVG_ENG_RESULT : 1;
    ///< Averager Engine Result
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t HWA2REG_CFG_AVG_ENG_DONE : 1;
    ///< Averager Engine Done
    ///< AccessType="RO/V" BitOffset="1" ResetValue="0x0"
    uint32_t  : 30;
    ///< Reserved
    ///< AccessType="RO" BitOffset="2" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_hw_assist4_reg_t;

#define PMA_TXDIGFFE_MSG_HW_ASSIST4_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_RD_MASK (0x00000003U)
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_WR_MASK (0x00000000U)


///< Averager Engine Result
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_HWA2REG_CFG_AVG_ENG_RSLT_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_HWA2REG_CFG_AVG_ENG_RSLT_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_HWA2REG_CFG_AVG_ENG_RSLT_BF_MSK (0x00000001)
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_HWA2REG_CFG_AVG_ENG_RSLT_BF_DEF (0x00000000)

///< Averager Engine Done
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_HWA2REG_CFG_AVG_ENG_DONE_BF_OFF ( 1)
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_HWA2REG_CFG_AVG_ENG_DONE_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_HWA2REG_CFG_AVG_ENG_DONE_BF_MSK (0x00000002)
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_HWA2REG_CFG_AVG_ENG_DONE_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_CMPOUT_CALASSIST_CTRL0 register description at address offset 0x2c
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_cmpout_calassist_ctrl0
  * Tx CmpOut Calibration Assistance Control
  */

typedef union {
  struct {
    uint32_t TXCMPOUTCALASSIST_CALSTART_PREAMBLE_DELAY : 16;
    ///< Tx CmpOut Calibration Assistance premable delay
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALCODE_FINISHSIDE : 1;
    ///< Tx CmpOut Calibration Assistance finish side. 0: finish low end; 1:
    ///< finish high end
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEAS_POLARITY : 1;
    ///< Tx CmpOut Calibration Assistance error signal polarity
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEAS_VALID_COUNT : 4;
    ///< Tx CmpOut Calibration Assistance valid count
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CAL_REQ : 1;
    ///< Tx CmpOut Calibration Assistance request
    ///< AccessType="RW" BitOffset="22" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEAS_REQ_OVR_EN : 1;
    ///< Tx CmpOut Calibration Assistance dither (measurement) request override
    ///< enable
    ///< AccessType="RW" BitOffset="23" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEAS_REQ_OVR : 1;
    ///< Tx CmpOut Calibration Assistance dither (measurement) request override
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALCODE_BUSY_OVR : 1;
    ///< Tx CmpOut Calibration Assistance busy override
    ///< AccessType="RW" BitOffset="25" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALCODE_BUSY_OVR_EN : 1;
    ///< Tx CmpOut Calibration Assistance busy override enable
    ///< AccessType="RW" BitOffset="26" ResetValue="0x0"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_cmpout_calassist_ctrl0_reg_t;

#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_RD_MASK (0x07ffffffU)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_WR_MASK (0x07ffffffU)


///< Tx CmpOut Calibration Assistance premable delay
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALSTART_PREAMBLE_DELAY_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALSTART_PREAMBLE_DELAY_BF_WID (16)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALSTART_PREAMBLE_DELAY_BF_MSK (0x0000FFFF)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALSTART_PREAMBLE_DELAY_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance finish side. 0: finish low end; 1:
///< finish high end
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_FINISHSIDE_BF_OFF (16)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_FINISHSIDE_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_FINISHSIDE_BF_MSK (0x00010000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_FINISHSIDE_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance error signal polarity
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_POLARITY_BF_OFF (17)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_POLARITY_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_POLARITY_BF_MSK (0x00020000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_POLARITY_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance valid count
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_VALID_CNT_BF_OFF (18)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_VALID_CNT_BF_WID ( 4)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_VALID_CNT_BF_MSK (0x003C0000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_VALID_CNT_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance request
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CAL_REQ_BF_OFF (22)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CAL_REQ_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CAL_REQ_BF_MSK (0x00400000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CAL_REQ_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance dither (measurement) request override
///< enable
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_REQ_OVR_EN_BF_OFF (23)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_REQ_OVR_EN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_REQ_OVR_EN_BF_MSK (0x00800000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_REQ_OVR_EN_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance dither (measurement) request override
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_REQ_OVR_BF_OFF (24)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_REQ_OVR_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_REQ_OVR_BF_MSK (0x01000000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALMEAS_REQ_OVR_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance busy override
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_BUSY_OVR_BF_OFF (25)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_BUSY_OVR_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_BUSY_OVR_BF_MSK (0x02000000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_BUSY_OVR_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance busy override enable
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_BUSY_OVR_EN_BF_OFF (26)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_BUSY_OVR_EN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_BUSY_OVR_EN_BF_MSK (0x04000000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_TXCMPOUTCALASSIST_CALCODE_BUSY_OVR_EN_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_CMPOUT_CALASSIST_CTRL1 register description at address offset 0x30
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_cmpout_calassist_ctrl1
  * Tx CmpOut Calibration Assistance Control
  */

typedef union {
  struct {
    uint32_t TXCMPOUTCALASSIST_CALCODE_MAX : 10;
    ///< Tx CmpOut Calibration Assistance dither (measurement) cal code max
    ///< value
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALCODE_MIN : 10;
    ///< Tx CmpOut Calibration Assistance dither (measurement) cal code min
    ///< value
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALCODE_OVR_EN : 1;
    ///< Tx CmpOut Calibration Assistance dither (measurement) final cal code
    ///< override enable
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALCODE_OVR : 10;
    ///< Tx CmpOut Calibration Assistance dither (measurement) final cal code
    ///< override
    ///< AccessType="RW" BitOffset="21" ResetValue="0x0"
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="31" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_cmpout_calassist_ctrl1_reg_t;

#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_RD_MASK (0x7fffffffU)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_WR_MASK (0x7fffffffU)


///< Tx CmpOut Calibration Assistance dither (measurement) cal code max
///< value
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_MAX_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_MAX_BF_WID (10)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_MAX_BF_MSK (0x000003FF)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_MAX_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance dither (measurement) cal code min
///< value
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_MIN_BF_OFF (10)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_MIN_BF_WID (10)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_MIN_BF_MSK (0x000FFC00)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_MIN_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance dither (measurement) final cal code
///< override enable
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_OVR_EN_BF_OFF (20)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_OVR_EN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_OVR_EN_BF_MSK (0x00100000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_OVR_EN_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance dither (measurement) final cal code
///< override
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_OVR_BF_OFF (21)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_OVR_BF_WID (10)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_OVR_BF_MSK (0x7FE00000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_TXCMPOUTCALASSIST_CALCODE_OVR_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_CMPOUT_CALASSIST_CTRL2 register description at address offset 0x34
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_cmpout_calassist_ctrl2
  * Tx CmpOut Calibration Assistance Control
  */

typedef union {
  struct {
    uint32_t TXCMPOUTCALASSIST_CALCODE_OFFSET : 11;
    ///< Tx CmpOut Calibration Assistance offset
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEAS_DLYCOUNT : 9;
    ///< Tx CmpOut Calibration Assistance dither (measurement) measure delay
    ///< time
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEAS_POW2COUNT : 3;
    ///< Tx CmpOut Calibration Assistance dither (measurement) measure period
    ///< in power of 2
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEAS_CLR_COUNT : 4;
    ///< Tx CmpOut Calibration Assistance dither (measurement) clear time
    ///< AccessType="RW" BitOffset="23" ResetValue="0x0"
    uint32_t  : 5;
    ///< Reserved
    ///< AccessType="RO" BitOffset="27" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_cmpout_calassist_ctrl2_reg_t;

#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_RD_MASK (0x07ffffffU)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_WR_MASK (0x07ffffffU)


///< Tx CmpOut Calibration Assistance offset
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALCODE_OFFSET_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALCODE_OFFSET_BF_WID (11)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALCODE_OFFSET_BF_MSK (0x000007FF)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALCODE_OFFSET_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance dither (measurement) measure delay
///< time
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_DLYCNT_BF_OFF (11)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_DLYCNT_BF_WID ( 9)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_DLYCNT_BF_MSK (0x000FF800)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_DLYCNT_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance dither (measurement) measure period
///< in power of 2
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_POW2CNT_BF_OFF (20)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_POW2CNT_BF_WID ( 3)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_POW2CNT_BF_MSK (0x00700000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_POW2CNT_BF_DEF (0x00000000)

///< Tx CmpOut Calibration Assistance dither (measurement) clear time
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_CLR_CNT_BF_OFF (23)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_CLR_CNT_BF_WID ( 4)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_CLR_CNT_BF_MSK (0x07800000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_TXCMPOUTCALASSIST_CALMEAS_CLR_CNT_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_CMPOUT_CALASSIST_STATUS register description at address offset 0x38
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_cmpout_calassist_status
  * Tx CmpOut Calibration Assistance Status
  */

typedef union {
  struct {
    uint32_t TXCMPOUTCALASSIST_CALCODE_CLAMP : 10;
    ///< TxCmpOut Calibration Assistance calibrated code (clamp with max/min
    ///< value)
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEASACC : 8;
    ///< TxCmpOut Calibration Assistance dither accumulated error
    ///< AccessType="RO/V" BitOffset="10" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEAS_ERR_RAW : 1;
    ///< TxCmpOut Calibration Assistance dither (measurement) ack
    ///< AccessType="RO/V" BitOffset="18" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEAS_ACK : 1;
    ///< TxCmpOut Calibration Assistance ack
    ///< AccessType="RO/V" BitOffset="19" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALMEAS_ERRAVG : 1;
    ///< TxCmpOut averaged error signal
    ///< AccessType="RO/V" BitOffset="20" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CAL_ACK : 1;
    ///< TxCmpOut Calibration Assistance ack
    ///< AccessType="RO/V" BitOffset="21" ResetValue="0x0"
    uint32_t TXCMPOUTCALASSIST_CALCODE_BUSY : 1;
    ///< TxCmpOut Calibration Assistance busy
    ///< AccessType="RO/V" BitOffset="22" ResetValue="0x0"
    uint32_t  : 9;
    ///< Reserved
    ///< AccessType="RO" BitOffset="23" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_cmpout_calassist_stat_reg_t;

#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_RD_MASK (0x007fffffU)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_WR_MASK (0x00000000U)


///< TxCmpOut Calibration Assistance calibrated code (clamp with max/min
///< value)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALCODE_CLAMP_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALCODE_CLAMP_BF_WID (10)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALCODE_CLAMP_BF_MSK (0x000003FF)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALCODE_CLAMP_BF_DEF (0x00000000)

///< TxCmpOut Calibration Assistance dither accumulated error
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEASACC_BF_OFF (10)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEASACC_BF_WID ( 8)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEASACC_BF_MSK (0x0003FC00)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEASACC_BF_DEF (0x00000000)

///< TxCmpOut Calibration Assistance dither (measurement) ack
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ERR_RAW_BF_OFF (18)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ERR_RAW_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ERR_RAW_BF_MSK (0x00040000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ERR_RAW_BF_DEF (0x00000000)

///< TxCmpOut Calibration Assistance ack
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ACK_BF_OFF (19)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ACK_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ACK_BF_MSK (0x00080000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ACK_BF_DEF (0x00000000)

///< TxCmpOut averaged error signal
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ERRAVG_BF_OFF (20)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ERRAVG_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ERRAVG_BF_MSK (0x00100000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALMEAS_ERRAVG_BF_DEF (0x00000000)

///< TxCmpOut Calibration Assistance ack
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CAL_ACK_BF_OFF (21)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CAL_ACK_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CAL_ACK_BF_MSK (0x00200000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CAL_ACK_BF_DEF (0x00000000)

///< TxCmpOut Calibration Assistance busy
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALCODE_BUSY_BF_OFF (22)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALCODE_BUSY_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALCODE_BUSY_BF_MSK (0x00400000)
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_TXCMPOUTCALASSIST_CALCODE_BUSY_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_DFX2 register description at address offset 0x3c
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_dfx2
  * cmp out direct read
  */

typedef union {
  struct {
    uint32_t  : 1;
    ///< Reserved
    ///< AccessType="RO" BitOffset="0" ResetValue="None"
    uint32_t IADAT_TXCMP_OUT_NT : 1;
    ///< Comparator Read Only - Feeds Averager
    ///< AccessType="RO/V" BitOffset="1" ResetValue="0x0"
    uint32_t HWA2PROBE_TX_CMP_OUT_SYNC : 1;
    ///< Raw input from comparator - Synchronized
    ///< AccessType="RO/V" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_dfx2_reg_t;

#define PMA_TXDIGFFE_MSG_DFX2_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_DFX2_RD_MASK (0x00000006U)
#define PMA_TXDIGFFE_MSG_DFX2_WR_MASK (0x00000000U)


///< Comparator Read Only - Feeds Averager
#define PMA_TXDIGFFE_MSG_DFX2_IADAT_TXCMP_OUT_NT_BF_OFF ( 1)
#define PMA_TXDIGFFE_MSG_DFX2_IADAT_TXCMP_OUT_NT_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_DFX2_IADAT_TXCMP_OUT_NT_BF_MSK (0x00000002)
#define PMA_TXDIGFFE_MSG_DFX2_IADAT_TXCMP_OUT_NT_BF_DEF (0x00000000)

///< Raw input from comparator - Synchronized
#define PMA_TXDIGFFE_MSG_DFX2_HWA2PROBE_TX_CMP_OUT_SYNC_BF_OFF ( 2)
#define PMA_TXDIGFFE_MSG_DFX2_HWA2PROBE_TX_CMP_OUT_SYNC_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_DFX2_HWA2PROBE_TX_CMP_OUT_SYNC_BF_MSK (0x00000004)
#define PMA_TXDIGFFE_MSG_DFX2_HWA2PROBE_TX_CMP_OUT_SYNC_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDETECTRX_CTRL register description at address offset 0x40
  *
  * Register default value:        0x00010644
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdetectrx_ctrl
  * Tx-Detect-Rx Control
  */

typedef union {
  struct {
    uint32_t TXDETECTRXMEAS_CLRCOUNT : 4;
    ///< Tx detect Rx measurment clear counter
    ///< AccessType="RW" BitOffset="0" ResetValue="0x4"
    uint32_t TXDETECTRXMEASDLYCOUNT : 4;
    ///< Tx detect Rx measurment delay sample counter
    ///< AccessType="RW" BitOffset="4" ResetValue="0x4"
    uint32_t TXDETECTRXMEAS_VALIDDLYCOUNT : 4;
    ///< Tx detect Rx measurment valid sample counter
    ///< AccessType="RW" BitOffset="8" ResetValue="0x6"
    uint32_t TXDETECTRXMEASCOUNT : 8;
    ///< Tx detect Rx measurment counter.  Set the detection interval
    ///< AccessType="RW" BitOffset="12" ResetValue="0x10"
    uint32_t TXDETECTRXMEASIN_START_LOCOVREN : 1;
    ///< Tx detect Rx measurment start override enable
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t TXDETECTRXMEAS_EN_LOCOVREN : 1;
    ///< Tx detect Rx measurment en override enable
    ///< AccessType="RW" BitOffset="21" ResetValue="0x0"
    uint32_t TXDETECTRXMEASVAL_STAT_LOCOVREN : 1;
    ///< Tx detect Rx measurment feedback override enable
    ///< AccessType="RW" BitOffset="22" ResetValue="0x0"
    uint32_t TXDETECTRXMEASACK_LOCOVREN : 1;
    ///< Tx detect Rx measurment acknowledgement override enable
    ///< AccessType="RW" BitOffset="23" ResetValue="0x0"
    uint32_t TXDETECTRXMEASIN_START_LOCOVR : 1;
    ///< Tx detect Rx measurment start override value
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t TXDETECTRXMEAS_EN_LOCOVR : 1;
    ///< Tx detect Rx measurment enable override value
    ///< AccessType="RW" BitOffset="25" ResetValue="0x0"
    uint32_t TXDETECTRXMEASVAL_STAT_LOCOVR : 1;
    ///< Tx detect Rx measurment feedback override value
    ///< AccessType="RW" BitOffset="26" ResetValue="0x0"
    uint32_t TXDETECTRXMEASACK_LOCOVR : 1;
    ///< Tx detect Rx measurment acknowledgement override value
    ///< AccessType="RW" BitOffset="27" ResetValue="0x0"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_txdetectrx_ctrl_reg_t;

#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_DEFAULT (0x00010644U)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RD_MASK (0x0fffffffU)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_WR_MASK (0x0fffffffU)


///< Tx detect Rx measurment clear counter
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_CLRCNT_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_CLRCNT_BF_WID ( 4)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_CLRCNT_BF_MSK (0x0000000F)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_CLRCNT_BF_DEF (0x00000004)

///< Tx detect Rx measurment delay sample counter
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASDLYCNT_BF_OFF ( 4)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASDLYCNT_BF_WID ( 4)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASDLYCNT_BF_MSK (0x000000F0)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASDLYCNT_BF_DEF (0x00000040)

///< Tx detect Rx measurment valid sample counter
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_VALIDDLYCNT_BF_OFF ( 8)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_VALIDDLYCNT_BF_WID ( 4)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_VALIDDLYCNT_BF_MSK (0x00000F00)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_VALIDDLYCNT_BF_DEF (0x00000600)

///< Tx detect Rx measurment counter.  Set the detection interval
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASCNT_BF_OFF (12)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASCNT_BF_WID ( 8)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASCNT_BF_MSK (0x000FF000)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASCNT_BF_DEF (0x00010000)

///< Tx detect Rx measurment start override enable
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASIN_START_LOCOVREN_BF_OFF (20)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASIN_START_LOCOVREN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASIN_START_LOCOVREN_BF_MSK (0x00100000)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASIN_START_LOCOVREN_BF_DEF (0x00000000)

///< Tx detect Rx measurment en override enable
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_EN_LOCOVREN_BF_OFF (21)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_EN_LOCOVREN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_EN_LOCOVREN_BF_MSK (0x00200000)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_EN_LOCOVREN_BF_DEF (0x00000000)

///< Tx detect Rx measurment feedback override enable
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASVAL_STAT_LOCOVREN_BF_OFF (22)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASVAL_STAT_LOCOVREN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASVAL_STAT_LOCOVREN_BF_MSK (0x00400000)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASVAL_STAT_LOCOVREN_BF_DEF (0x00000000)

///< Tx detect Rx measurment acknowledgement override enable
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASACK_LOCOVREN_BF_OFF (23)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASACK_LOCOVREN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASACK_LOCOVREN_BF_MSK (0x00800000)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASACK_LOCOVREN_BF_DEF (0x00000000)

///< Tx detect Rx measurment start override value
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASIN_START_LOCOVR_BF_OFF (24)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASIN_START_LOCOVR_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASIN_START_LOCOVR_BF_MSK (0x01000000)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASIN_START_LOCOVR_BF_DEF (0x00000000)

///< Tx detect Rx measurment enable override value
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_EN_LOCOVR_BF_OFF (25)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_EN_LOCOVR_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_EN_LOCOVR_BF_MSK (0x02000000)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEAS_EN_LOCOVR_BF_DEF (0x00000000)

///< Tx detect Rx measurment feedback override value
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASVAL_STAT_LOCOVR_BF_OFF (26)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASVAL_STAT_LOCOVR_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASVAL_STAT_LOCOVR_BF_MSK (0x04000000)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASVAL_STAT_LOCOVR_BF_DEF (0x00000000)

///< Tx detect Rx measurment acknowledgement override value
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASACK_LOCOVR_BF_OFF (27)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASACK_LOCOVR_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASACK_LOCOVR_BF_MSK (0x08000000)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_TXDETECTRXMEASACK_LOCOVR_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDETECTRX_CTRL_RO register description at address offset 0x44
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdetectrx_ctrl_ro
  * Tx-Detect-Rx Control Readback
  */

typedef union {
  struct {
    uint32_t TXDETECTRXMEASPCS_REQ : 1;
    ///< Tx detect Rx measurment request
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
    uint32_t TXDETECTRXMEASIN_START_LOC : 1;
    ///< Tx detect Rx measurment enable pre-override value
    ///< AccessType="RO/V" BitOffset="1" ResetValue="0x0"
    uint32_t TXDETECTRXMEAS_EN_LOC : 1;
    ///< Tx detect Rx measurment start pre-override value
    ///< AccessType="RO/V" BitOffset="2" ResetValue="0x0"
    uint32_t TXDETECTRXMEASACK_LOC : 1;
    ///< Tx detect Rx measurment done acknowledgment
    ///< AccessType="RO/V" BitOffset="3" ResetValue="0x0"
    uint32_t TXDETECTRXMEASVAL_STAT_LOC : 1;
    ///< Tx detect Rx measurment feedback signal from analog
    ///< AccessType="RO/V" BitOffset="4" ResetValue="0x0"
    uint32_t  : 27;
    ///< Reserved
    ///< AccessType="RO" BitOffset="5" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_txdetectrx_ctrl_ro_reg_t;

#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_RD_MASK (0x0000001fU)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_WR_MASK (0x00000000U)


///< Tx detect Rx measurment request
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASPCS_REQ_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASPCS_REQ_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASPCS_REQ_BF_MSK (0x00000001)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASPCS_REQ_BF_DEF (0x00000000)

///< Tx detect Rx measurment enable pre-override value
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASIN_START_LOC_BF_OFF ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASIN_START_LOC_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASIN_START_LOC_BF_MSK (0x00000002)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASIN_START_LOC_BF_DEF (0x00000000)

///< Tx detect Rx measurment start pre-override value
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEAS_EN_LOC_BF_OFF ( 2)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEAS_EN_LOC_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEAS_EN_LOC_BF_MSK (0x00000004)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEAS_EN_LOC_BF_DEF (0x00000000)

///< Tx detect Rx measurment done acknowledgment
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASACK_LOC_BF_OFF ( 3)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASACK_LOC_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASACK_LOC_BF_MSK (0x00000008)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASACK_LOC_BF_DEF (0x00000000)

///< Tx detect Rx measurment feedback signal from analog
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASVAL_STAT_LOC_BF_OFF ( 4)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASVAL_STAT_LOC_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASVAL_STAT_LOC_BF_MSK (0x00000010)
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_TXDETECTRXMEASVAL_STAT_LOC_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_CTRL_OUT register description at address offset 0x48
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_ctrl_out
  * Tx FFE Control Output
  */

typedef union {
  struct {
    uint32_t TXDETECTRX_ARST_OVREN : 1;
    ///< Tx detect Rx Ana Reset Override Enable
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t TXDETECTRX_ARST_OVR : 1;
    ///< Tx detect Rx Ana Reset Override
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t TXDETECTRX_ARST_VAL : 1;
    ///< Tx detect Rx Ana Reset Value
    ///< AccessType="RW" BitOffset="2" ResetValue="0x0"
    uint32_t  : 29;
    ///< Reserved
    ///< AccessType="RO" BitOffset="3" ResetValue="None"
  } ;
  uint32_t value;
} pma_txdigffe_msg_ctrl_out_reg_t;

#define PMA_TXDIGFFE_MSG_CTRL_OUT_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_RD_MASK (0x00000007U)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_WR_MASK (0x00000007U)


///< Tx detect Rx Ana Reset Override Enable
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_OVREN_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_OVREN_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_OVREN_BF_MSK (0x00000001)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_OVREN_BF_DEF (0x00000000)

///< Tx detect Rx Ana Reset Override
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_OVR_BF_OFF ( 1)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_OVR_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_OVR_BF_MSK (0x00000002)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_OVR_BF_DEF (0x00000000)

///< Tx detect Rx Ana Reset Value
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_VAL_BF_OFF ( 2)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_VAL_BF_WID ( 1)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_VAL_BF_MSK (0x00000004)
#define PMA_TXDIGFFE_MSG_CTRL_OUT_TXDETECTRX_ARST_VAL_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_ADD_RESULT_OVR_STATUS0 register description at address offset 0x4c
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_add_result_ovr_status0
  * HW Assist
  */

typedef union {
  struct {
    uint32_t CSR_TXFFE_ADD_RESULT_OVRFLOW0 : 32;
    ///< tx ffe filter summer overflow flag on LSB 32 Uis
    ///< AccessType="RO/C/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_add_rslt_ovr_stat0_reg_t;

#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_WR_MASK (0x00000000U)


///< tx ffe filter summer overflow flag on LSB 32 Uis
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_CSR_TXFFE_ADD_RSLT_OVRFLOW0_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_CSR_TXFFE_ADD_RSLT_OVRFLOW0_BF_WID (32)
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_CSR_TXFFE_ADD_RSLT_OVRFLOW0_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_CSR_TXFFE_ADD_RSLT_OVRFLOW0_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_ADD_RESULT_OVR_STATUS1 register description at address offset 0x50
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_add_result_ovr_status1
  * HW Assist
  */

typedef union {
  struct {
    uint32_t CSR_TXFFE_ADD_RESULT_OVRFLOW1 : 32;
    ///< tx ffe filter summer overflow flag on MSB 32 Uis
    ///< AccessType="RO/C/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_add_rslt_ovr_stat1_reg_t;

#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_WR_MASK (0x00000000U)


///< tx ffe filter summer overflow flag on MSB 32 Uis
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_CSR_TXFFE_ADD_RSLT_OVRFLOW1_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_CSR_TXFFE_ADD_RSLT_OVRFLOW1_BF_WID (32)
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_CSR_TXFFE_ADD_RSLT_OVRFLOW1_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_CSR_TXFFE_ADD_RSLT_OVRFLOW1_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_RW_SPARE_0 register description at address offset 0xe8
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_rw_spare_0
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t TXDIGFFE_RW_SPARE_0 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_rw_spare_0_reg_t;

#define PMA_TXDIGFFE_MSG_RW_SPARE_0_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_RW_SPARE_0_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_RW_SPARE_0_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define PMA_TXDIGFFE_MSG_RW_SPARE_0_TXDIGFFE_RW_SPARE_0_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_RW_SPARE_0_TXDIGFFE_RW_SPARE_0_BF_WID (32)
#define PMA_TXDIGFFE_MSG_RW_SPARE_0_TXDIGFFE_RW_SPARE_0_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_RW_SPARE_0_TXDIGFFE_RW_SPARE_0_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_RW_SPARE_1 register description at address offset 0xec
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_rw_spare_1
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t TXDIGFFE_RW_SPARE_1 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_rw_spare_1_reg_t;

#define PMA_TXDIGFFE_MSG_RW_SPARE_1_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_RW_SPARE_1_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_RW_SPARE_1_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define PMA_TXDIGFFE_MSG_RW_SPARE_1_TXDIGFFE_RW_SPARE_1_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_RW_SPARE_1_TXDIGFFE_RW_SPARE_1_BF_WID (32)
#define PMA_TXDIGFFE_MSG_RW_SPARE_1_TXDIGFFE_RW_SPARE_1_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_RW_SPARE_1_TXDIGFFE_RW_SPARE_1_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_RW_SPARE_2 register description at address offset 0xf0
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_rw_spare_2
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t TXDIGFFE_RW_SPARE_2 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_rw_spare_2_reg_t;

#define PMA_TXDIGFFE_MSG_RW_SPARE_2_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_RW_SPARE_2_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_RW_SPARE_2_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define PMA_TXDIGFFE_MSG_RW_SPARE_2_TXDIGFFE_RW_SPARE_2_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_RW_SPARE_2_TXDIGFFE_RW_SPARE_2_BF_WID (32)
#define PMA_TXDIGFFE_MSG_RW_SPARE_2_TXDIGFFE_RW_SPARE_2_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_RW_SPARE_2_TXDIGFFE_RW_SPARE_2_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_RW_SPARE_3 register description at address offset 0xf4
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_rw_spare_3
  * Spare RW register
  */

typedef union {
  struct {
    uint32_t TXDIGFFE_RW_SPARE_3 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_rw_spare_3_reg_t;

#define PMA_TXDIGFFE_MSG_RW_SPARE_3_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_RW_SPARE_3_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_RW_SPARE_3_WR_MASK (0xffffffffU)


///< Spare register.  Reseved for future
#define PMA_TXDIGFFE_MSG_RW_SPARE_3_TXDIGFFE_RW_SPARE_3_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_RW_SPARE_3_TXDIGFFE_RW_SPARE_3_BF_WID (32)
#define PMA_TXDIGFFE_MSG_RW_SPARE_3_TXDIGFFE_RW_SPARE_3_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_RW_SPARE_3_TXDIGFFE_RW_SPARE_3_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_RO_SPARE_0 register description at address offset 0xf8
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_ro_spare_0
  * Spare RO register
  */

typedef union {
  struct {
    uint32_t TXDIGFFE_RO_SPARE_0 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_ro_spare_0_reg_t;

#define PMA_TXDIGFFE_MSG_RO_SPARE_0_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_RO_SPARE_0_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_RO_SPARE_0_WR_MASK (0x00000000U)


///< Spare register.  Reseved for future
#define PMA_TXDIGFFE_MSG_RO_SPARE_0_TXDIGFFE_RO_SPARE_0_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_RO_SPARE_0_TXDIGFFE_RO_SPARE_0_BF_WID (32)
#define PMA_TXDIGFFE_MSG_RO_SPARE_0_TXDIGFFE_RO_SPARE_0_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_RO_SPARE_0_TXDIGFFE_RO_SPARE_0_BF_DEF (0x00000000)


/** @brief PMA_TXDIGFFE_REGS_MSG_PMA_TXDIGFFE_REGS_TXDIGFFE_RO_SPARE_1 register description at address offset 0xfc
  *
  * Register default value:        0x00000000
  * Register full path in IP: PMA_TXDIGFFE_regs_MSG/PMA_TXDIGFFE_regs/txdigffe_ro_spare_1
  * Spare RO register
  */

typedef union {
  struct {
    uint32_t TXDIGFFE_RO_SPARE_1 : 32;
    ///< Spare register.  Reseved for future
    ///< AccessType="RO/V" BitOffset="0" ResetValue="0x0"
  } ;
  uint32_t value;
} pma_txdigffe_msg_ro_spare_1_reg_t;

#define PMA_TXDIGFFE_MSG_RO_SPARE_1_DEFAULT (0x00000000U)
#define PMA_TXDIGFFE_MSG_RO_SPARE_1_RD_MASK (0xffffffffU)
#define PMA_TXDIGFFE_MSG_RO_SPARE_1_WR_MASK (0x00000000U)


///< Spare register.  Reseved for future
#define PMA_TXDIGFFE_MSG_RO_SPARE_1_TXDIGFFE_RO_SPARE_1_BF_OFF ( 0)
#define PMA_TXDIGFFE_MSG_RO_SPARE_1_TXDIGFFE_RO_SPARE_1_BF_WID (32)
#define PMA_TXDIGFFE_MSG_RO_SPARE_1_TXDIGFFE_RO_SPARE_1_BF_MSK (0xFFFFFFFF)
#define PMA_TXDIGFFE_MSG_RO_SPARE_1_TXDIGFFE_RO_SPARE_1_BF_DEF (0x00000000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define PMA_TXDIGFFE_MSG_RST_REG(_BASE) ((pma_txdigffe_msg_rst_reg_t*) PMA_TXDIGFFE_MSG_RST_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_REG(_BASE) ((pma_txdigffe_msg_cmod_ovr_stat0_reg_t*) PMA_TXDIGFFE_MSG_CMOD_OVR_STAT0_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_REG(_BASE) ((pma_txdigffe_msg_cmod_ovr_stat1_reg_t*) PMA_TXDIGFFE_MSG_CMOD_OVR_STAT1_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_FFE1_REG(_BASE) ((pma_txdigffe_msg_ffe1_reg_t*) PMA_TXDIGFFE_MSG_FFE1_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_FFE2_REG(_BASE) ((pma_txdigffe_msg_ffe2_reg_t*) PMA_TXDIGFFE_MSG_FFE2_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_FFE3_REG(_BASE) ((pma_txdigffe_msg_ffe3_reg_t*) PMA_TXDIGFFE_MSG_FFE3_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_FFE4_REG(_BASE) ((pma_txdigffe_msg_ffe4_reg_t*) PMA_TXDIGFFE_MSG_FFE4_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_HW_ASSIST1_REG(_BASE) ((pma_txdigffe_msg_hw_assist1_reg_t*) PMA_TXDIGFFE_MSG_HW_ASSIST1_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_HW_ASSIST2_REG(_BASE) ((pma_txdigffe_msg_hw_assist2_reg_t*) PMA_TXDIGFFE_MSG_HW_ASSIST2_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_HW_ASSIST3_REG(_BASE) ((pma_txdigffe_msg_hw_assist3_reg_t*) PMA_TXDIGFFE_MSG_HW_ASSIST3_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_HW_ASSIST4_REG(_BASE) ((pma_txdigffe_msg_hw_assist4_reg_t*) PMA_TXDIGFFE_MSG_HW_ASSIST4_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_REG(_BASE) ((pma_txdigffe_msg_cmpout_calassist_ctrl0_reg_t*) PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL0_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_REG(_BASE) ((pma_txdigffe_msg_cmpout_calassist_ctrl1_reg_t*) PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL1_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_REG(_BASE) ((pma_txdigffe_msg_cmpout_calassist_ctrl2_reg_t*) PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_CTRL2_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_REG(_BASE) ((pma_txdigffe_msg_cmpout_calassist_stat_reg_t*) PMA_TXDIGFFE_MSG_CMPOUT_CALASSIST_STAT_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_DFX2_REG(_BASE) ((pma_txdigffe_msg_dfx2_reg_t*) PMA_TXDIGFFE_MSG_DFX2_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_REG(_BASE) ((pma_txdigffe_msg_txdetectrx_ctrl_reg_t*) PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_REG(_BASE) ((pma_txdigffe_msg_txdetectrx_ctrl_ro_reg_t*) PMA_TXDIGFFE_MSG_TXDETECTRX_CTRL_RO_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_CTRL_OUT_REG(_BASE) ((pma_txdigffe_msg_ctrl_out_reg_t*) PMA_TXDIGFFE_MSG_CTRL_OUT_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_REG(_BASE) ((pma_txdigffe_msg_add_rslt_ovr_stat0_reg_t*) PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT0_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_REG(_BASE) ((pma_txdigffe_msg_add_rslt_ovr_stat1_reg_t*) PMA_TXDIGFFE_MSG_ADD_RSLT_OVR_STAT1_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_RW_SPARE_0_REG(_BASE) ((pma_txdigffe_msg_rw_spare_0_reg_t*) PMA_TXDIGFFE_MSG_RW_SPARE_0_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_RW_SPARE_1_REG(_BASE) ((pma_txdigffe_msg_rw_spare_1_reg_t*) PMA_TXDIGFFE_MSG_RW_SPARE_1_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_RW_SPARE_2_REG(_BASE) ((pma_txdigffe_msg_rw_spare_2_reg_t*) PMA_TXDIGFFE_MSG_RW_SPARE_2_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_RW_SPARE_3_REG(_BASE) ((pma_txdigffe_msg_rw_spare_3_reg_t*) PMA_TXDIGFFE_MSG_RW_SPARE_3_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_RO_SPARE_0_REG(_BASE) ((pma_txdigffe_msg_ro_spare_0_reg_t*) PMA_TXDIGFFE_MSG_RO_SPARE_0_ADR(_BASE))
#define PMA_TXDIGFFE_MSG_RO_SPARE_1_REG(_BASE) ((pma_txdigffe_msg_ro_spare_1_reg_t*) PMA_TXDIGFFE_MSG_RO_SPARE_1_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    pma_txdigffe_msg_rst_reg_t TXDIGFFE_RST; /*< Address offset = 0x0 */
    pma_txdigffe_msg_cmod_ovr_stat0_reg_t TXDIGFFE_CMOD_OVR_STAT0; /*< Address offset = 0x4 */
    pma_txdigffe_msg_cmod_ovr_stat1_reg_t TXDIGFFE_CMOD_OVR_STAT1; /*< Address offset = 0x8 */
    pma_txdigffe_msg_ffe1_reg_t TXDIGFFE_FFE1; /*< Address offset = 0xc */
    pma_txdigffe_msg_ffe2_reg_t TXDIGFFE_FFE2; /*< Address offset = 0x10 */
    pma_txdigffe_msg_ffe3_reg_t TXDIGFFE_FFE3; /*< Address offset = 0x14 */
    pma_txdigffe_msg_ffe4_reg_t TXDIGFFE_FFE4; /*< Address offset = 0x18 */
    pma_txdigffe_msg_hw_assist1_reg_t TXDIGFFE_HW_ASSIST1; /*< Address offset = 0x1c */
    pma_txdigffe_msg_hw_assist2_reg_t TXDIGFFE_HW_ASSIST2; /*< Address offset = 0x20 */
    pma_txdigffe_msg_hw_assist3_reg_t TXDIGFFE_HW_ASSIST3; /*< Address offset = 0x24 */
    pma_txdigffe_msg_hw_assist4_reg_t TXDIGFFE_HW_ASSIST4; /*< Address offset = 0x28 */
    pma_txdigffe_msg_cmpout_calassist_ctrl0_reg_t TXDIGFFE_CMPOUT_CALASSIST_CTRL0; /*< Address offset = 0x2c */
    pma_txdigffe_msg_cmpout_calassist_ctrl1_reg_t TXDIGFFE_CMPOUT_CALASSIST_CTRL1; /*< Address offset = 0x30 */
    pma_txdigffe_msg_cmpout_calassist_ctrl2_reg_t TXDIGFFE_CMPOUT_CALASSIST_CTRL2; /*< Address offset = 0x34 */
    pma_txdigffe_msg_cmpout_calassist_stat_reg_t TXDIGFFE_CMPOUT_CALASSIST_STAT; /*< Address offset = 0x38 */
    pma_txdigffe_msg_dfx2_reg_t TXDIGFFE_DFX2; /*< Address offset = 0x3c */
    pma_txdigffe_msg_txdetectrx_ctrl_reg_t TXDETECTRX_CTRL; /*< Address offset = 0x40 */
    pma_txdigffe_msg_txdetectrx_ctrl_ro_reg_t TXDETECTRX_CTRL_RO; /*< Address offset = 0x44 */
    pma_txdigffe_msg_ctrl_out_reg_t TXDIGFFE_CTRL_OUT; /*< Address offset = 0x48 */
    pma_txdigffe_msg_add_rslt_ovr_stat0_reg_t TXDIGFFE_ADD_RSLT_OVR_STAT0; /*< Address offset = 0x4c */
    pma_txdigffe_msg_add_rslt_ovr_stat1_reg_t TXDIGFFE_ADD_RSLT_OVR_STAT1; /*< Address offset = 0x50 */
    const uint8_t        reservedArea0 [148]; /*< Address offset = 0x54 */
    pma_txdigffe_msg_rw_spare_0_reg_t TXDIGFFE_RW_SPARE_0; /*< Address offset = 0xe8 */
    pma_txdigffe_msg_rw_spare_1_reg_t TXDIGFFE_RW_SPARE_1; /*< Address offset = 0xec */
    pma_txdigffe_msg_rw_spare_2_reg_t TXDIGFFE_RW_SPARE_2; /*< Address offset = 0xf0 */
    pma_txdigffe_msg_rw_spare_3_reg_t TXDIGFFE_RW_SPARE_3; /*< Address offset = 0xf4 */
    pma_txdigffe_msg_ro_spare_0_reg_t TXDIGFFE_RO_SPARE_0; /*< Address offset = 0xf8 */
    pma_txdigffe_msg_ro_spare_1_reg_t TXDIGFFE_RO_SPARE_1; /*< Address offset = 0xfc */
} pma_txdigffe_msg_t;     // size: 0x006c

// AddressSpace struct pointer
//
#define DLNK_JESD0_PHY_PMA0_TXDIGFFE_GLOBAL  ((pma_txdigffe_msg_t*) DLNK_JESD0_PHY_PMA0_TXDIGFFE_GLOBAL_BASE)
#define DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q0      ((pma_txdigffe_msg_t*) DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q0_BASE)
#define DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q1      ((pma_txdigffe_msg_t*) DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q1_BASE)
#define DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q2      ((pma_txdigffe_msg_t*) DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q2_BASE)
#define DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q3      ((pma_txdigffe_msg_t*) DLNK_JESD0_PHY_PMA0_TXDIGFFE_Q3_BASE)
#define DLNK_JESD1_PHY_PMA0_TXDIGFFE_GLOBAL  ((pma_txdigffe_msg_t*) DLNK_JESD1_PHY_PMA0_TXDIGFFE_GLOBAL_BASE)
#define DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q0      ((pma_txdigffe_msg_t*) DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q0_BASE)
#define DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q1      ((pma_txdigffe_msg_t*) DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q1_BASE)
#define DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q2      ((pma_txdigffe_msg_t*) DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q2_BASE)
#define DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q3      ((pma_txdigffe_msg_t*) DLNK_JESD1_PHY_PMA0_TXDIGFFE_Q3_BASE)
#define DLNK_JESD2_PHY_PMA0_TXDIGFFE_GLOBAL  ((pma_txdigffe_msg_t*) DLNK_JESD2_PHY_PMA0_TXDIGFFE_GLOBAL_BASE)
#define DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q0      ((pma_txdigffe_msg_t*) DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q0_BASE)
#define DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q1      ((pma_txdigffe_msg_t*) DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q1_BASE)
#define DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q2      ((pma_txdigffe_msg_t*) DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q2_BASE)
#define DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q3      ((pma_txdigffe_msg_t*) DLNK_JESD2_PHY_PMA0_TXDIGFFE_Q3_BASE)
#define DLNK_JESD3_PHY_PMA0_TXDIGFFE_GLOBAL  ((pma_txdigffe_msg_t*) DLNK_JESD3_PHY_PMA0_TXDIGFFE_GLOBAL_BASE)
#define DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q0      ((pma_txdigffe_msg_t*) DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q0_BASE)
#define DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q1      ((pma_txdigffe_msg_t*) DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q1_BASE)
#define DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q2      ((pma_txdigffe_msg_t*) DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q2_BASE)
#define DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q3      ((pma_txdigffe_msg_t*) DLNK_JESD3_PHY_PMA0_TXDIGFFE_Q3_BASE)

// ******************************************* /Address Space

#endif      // _PMA_TXDIGFFE_MSG_H_

