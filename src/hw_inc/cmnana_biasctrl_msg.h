#ifndef _CMNANA_BIASCTRL_MSG_H_
#define _CMNANA_BIASCTRL_MSG_H_

// ******************************************************************************
// ------------------------------------------------------------------------------
//                               INTEL CONFIDENTIAL
// ------------------------------------------------------------------------------
//    Copyright (c) 2018 - 2024 Intel Corporation
//
//    This software and the related documents are Intel copyrighted materials,
//    and your use of them is governed by the express license under which they
//    were provided to you ("License").
//    Unless the License provides otherwise, you may not use, modify, copy, publish,
//    distribute, disclose or transmit this software or the related documents
//    without Intel's prior written permission.
//
//    This software and the related documents are provided as is, with no express or
//    implied warranties, other than those that are expressly stated in the License.
// ------------------------------------------------------------------------------
//
//    DO NOT EDIT THIS FILE !!!
//
//    This file has been automatically generated by OneSource
//
// ******************************************************************************

#ifndef __KERNEL__
#include <stdint.h>
#endif // __KERNEL__
// ******************************************* Base address macros

#define DLNK_JESD0_PHY_PMA0_CMNANA_BIASCTRL_BASE  ( 0x06020800 )
#define DLNK_JESD1_PHY_PMA0_CMNANA_BIASCTRL_BASE  ( 0x06820800 )
#define DLNK_JESD2_PHY_PMA0_CMNANA_BIASCTRL_BASE  ( 0x07020800 )
#define DLNK_JESD3_PHY_PMA0_CMNANA_BIASCTRL_BASE  ( 0x07820800 )

// ******************************************* /Base address macros


// ******************************************* Register offset macros

#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_OFFSET ( 0x00000000U )
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_OFFSET ( 0x00000004U )
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_OFFSET ( 0x00000008U )
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_OFFSET ( 0x0000000cU )
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_OFFSET ( 0x00000010U )
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_OFFSET ( 0x00000014U )
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_OFFSET ( 0x00000018U )
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_OFFSET ( 0x0000001cU )
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_OFFSET ( 0x00000020U )
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_OFFSET ( 0x00000024U )
#define CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_OFFSET ( 0x00000028U )

// ******************************************* /Register offset macros


// ******************************************* AddressSpace macros
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_OFFSET ) ))
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_OFFSET ) ))
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_OFFSET ) ))
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_OFFSET ) ))
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_OFFSET ) ))
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_OFFSET ) ))
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_OFFSET ) ))
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_OFFSET ) ))
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_OFFSET ) ))
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_OFFSET ) ))
#define CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_ADR(_BASE) (( ( _BASE ) + ( CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_OFFSET ) ))

// ******************************************* /Address Space

//************************************************ RegisterStructs


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNGLOBAL_BIASCTRL0 register description at address offset 0x0
  *
  * Register default value:        0x00000108
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmnglobal_biasctrl0
  * cmnglobal_biasctrl0
  */

typedef union {
  struct {
    uint32_t BIASSYS_FLTR_RES_SEL_B : 4;
    ///< select the filter resistance for bias_sys
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t BIASSYS_IREF_CALIB_EN : 5;
    ///< control for calib reference current:0b00000: 0uA0b00001: 100uA0b00010:
    ///< 100uA0b00011: 300uA0b00100: 200uA0b00101: 300uA0b00110: 300uA0b00111:
    ///< 400uA0b01000: 400uA...0b11111: 1600uA
    ///< AccessType="RW" BitOffset="4" ResetValue="0x10"
    uint32_t BIASSYS_IREF_CMN_EN : 1;
    ///< enable iref for cmn_bias
    ///< AccessType="RW" BitOffset="9" ResetValue="0x0"
    uint32_t BIASSYS_IREF_DCMON_EN : 1;
    ///< enable iref for dcmon
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t BIASSYS_IREF_LANESHARED_EN : 4;
    ///< enable iref for laneshared
    ///< AccessType="RW" BitOffset="11" ResetValue="0x0"
    uint32_t BIASSYS_IREF_MAINAMP_EN : 1;
    ///< enable the main amplifier of iref in bias_sys
    ///< AccessType="RW" BitOffset="15" ResetValue="0x0"
    uint32_t BIASSYS_IREF_RX_EN : 4;
    ///< enable iref for rx lane
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t BIASSYS_IREF_TX_EN : 4;
    ///< enable iref for tx lane
    ///< AccessType="RW" BitOffset="20" ResetValue="0x0"
    uint32_t BIASSYS_REFRES_EXT_SEL : 1;
    ///< select internal(on die) or external(on board) res
    ///< AccessType="RW" BitOffset="24" ResetValue="0x0"
    uint32_t  : 7;
    ///< Reserved
    ///< AccessType="RO" BitOffset="25" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmnglobal_biasctrl0_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_DEFAULT (0x00000108U)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_RD_MASK (0x01ffffffU)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_WR_MASK (0x01ffffffU)


///< select the filter resistance for bias_sys
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_FLTR_RES_SEL_B_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_FLTR_RES_SEL_B_BF_WID ( 4)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_FLTR_RES_SEL_B_BF_MSK (0x0000000F)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_FLTR_RES_SEL_B_BF_DEF (0x00000008)

///< control for calib reference current:0b00000: 0uA0b00001: 100uA0b00010:
///< 100uA0b00011: 300uA0b00100: 200uA0b00101: 300uA0b00110: 300uA0b00111:
///< 400uA0b01000: 400uA...0b11111: 1600uA
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_CALIB_EN_BF_OFF ( 4)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_CALIB_EN_BF_WID ( 5)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_CALIB_EN_BF_MSK (0x000001F0)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_CALIB_EN_BF_DEF (0x00000100)

///< enable iref for cmn_bias
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_CMN_EN_BF_OFF ( 9)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_CMN_EN_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_CMN_EN_BF_MSK (0x00000200)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_CMN_EN_BF_DEF (0x00000000)

///< enable iref for dcmon
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_DCMON_EN_BF_OFF (10)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_DCMON_EN_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_DCMON_EN_BF_MSK (0x00000400)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_DCMON_EN_BF_DEF (0x00000000)

///< enable iref for laneshared
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_LANESHARED_EN_BF_OFF (11)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_LANESHARED_EN_BF_WID ( 4)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_LANESHARED_EN_BF_MSK (0x00007800)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_LANESHARED_EN_BF_DEF (0x00000000)

///< enable the main amplifier of iref in bias_sys
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_MAINAMP_EN_BF_OFF (15)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_MAINAMP_EN_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_MAINAMP_EN_BF_MSK (0x00008000)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_MAINAMP_EN_BF_DEF (0x00000000)

///< enable iref for rx lane
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_RX_EN_BF_OFF (16)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_RX_EN_BF_WID ( 4)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_RX_EN_BF_MSK (0x000F0000)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_RX_EN_BF_DEF (0x00000000)

///< enable iref for tx lane
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_TX_EN_BF_OFF (20)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_TX_EN_BF_WID ( 4)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_TX_EN_BF_MSK (0x00F00000)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_IREF_TX_EN_BF_DEF (0x00000000)

///< select internal(on die) or external(on board) res
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_REFRES_EXT_SEL_BF_OFF (24)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_REFRES_EXT_SEL_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_REFRES_EXT_SEL_BF_MSK (0x01000000)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_BIASSYS_REFRES_EXT_SEL_BF_DEF (0x00000000)


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNCAL_CTRL0 register description at address offset 0x4
  *
  * Register default value:        0x00014088
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmncal_ctrl0
  * cmncal_ctrl0
  */

typedef union {
  struct {
    uint32_t CALIB_CURGEN_GRY_EN : 4;
    ///< enable control for calib_curgen
    ///< AccessType="RW" BitOffset="0" ResetValue="0x8"
    uint32_t CALIB_CURGEN_TRIM : 4;
    ///< trim code for calib_curgen
    ///< AccessType="RW" BitOffset="4" ResetValue="0x8"
    uint32_t CALIB_FFE_CAL_EN : 1;
    ///< enable ffe cal
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t CALIB_FFE_RES_CONT : 6;
    ///< trim code for ffe res
    ///< AccessType="RW" BitOffset="9" ResetValue="0x20"
    uint32_t CALIB_MEAS_SEL : 2;
    ///< select the calibration mode
    ///< AccessType="RW" BitOffset="15" ResetValue="0x2"
    uint32_t CALIB_VCC1_SAMPLE_CAL_EN : 1;
    ///< connect the middle of vcc1 to vcm_fb for calib
    ///< AccessType="RW" BitOffset="17" ResetValue="0x0"
    uint32_t  : 14;
    ///< Reserved
    ///< AccessType="RO" BitOffset="18" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmncal_ctrl0_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_DEFAULT (0x00014088U)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_RD_MASK (0x0003ffffU)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_WR_MASK (0x0003ffffU)


///< enable control for calib_curgen
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_CURGEN_GRY_EN_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_CURGEN_GRY_EN_BF_WID ( 4)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_CURGEN_GRY_EN_BF_MSK (0x0000000F)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_CURGEN_GRY_EN_BF_DEF (0x00000008)

///< trim code for calib_curgen
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_CURGEN_TRIM_BF_OFF ( 4)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_CURGEN_TRIM_BF_WID ( 4)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_CURGEN_TRIM_BF_MSK (0x000000F0)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_CURGEN_TRIM_BF_DEF (0x00000080)

///< enable ffe cal
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_FFE_CAL_EN_BF_OFF ( 8)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_FFE_CAL_EN_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_FFE_CAL_EN_BF_MSK (0x00000100)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_FFE_CAL_EN_BF_DEF (0x00000000)

///< trim code for ffe res
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_FFE_RES_CONT_BF_OFF ( 9)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_FFE_RES_CONT_BF_WID ( 6)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_FFE_RES_CONT_BF_MSK (0x00007E00)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_FFE_RES_CONT_BF_DEF (0x00004000)

///< select the calibration mode
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_MEAS_SEL_BF_OFF (15)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_MEAS_SEL_BF_WID ( 2)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_MEAS_SEL_BF_MSK (0x00018000)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_MEAS_SEL_BF_DEF (0x00010000)

///< connect the middle of vcc1 to vcm_fb for calib
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_VCC1_SAMPLE_CAL_EN_BF_OFF (17)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_VCC1_SAMPLE_CAL_EN_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_VCC1_SAMPLE_CAL_EN_BF_MSK (0x00020000)
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_CALIB_VCC1_SAMPLE_CAL_EN_BF_DEF (0x00000000)


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNCAL_PREBUF0 register description at address offset 0x8
  *
  * Register default value:        0x00001000
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmncal_prebuf0
  * cmncal_prebuf0
  */

typedef union {
  struct {
    uint32_t CALIB_PREBUF_CAL_EN : 1;
    ///< enable prebuf cal
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 7;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
    uint32_t CALIB_PREBUF_RES_SEL : 20;
    ///< trim code for prebuf res
    ///< AccessType="RW" BitOffset="8" ResetValue="0x10"
    uint32_t  : 4;
    ///< Reserved
    ///< AccessType="RO" BitOffset="28" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmncal_prebuf0_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_DEFAULT (0x00001000U)
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_RD_MASK (0x0fffff01U)
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_WR_MASK (0x0fffff01U)


///< enable prebuf cal
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_CALIB_PREBUF_CAL_EN_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_CALIB_PREBUF_CAL_EN_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_CALIB_PREBUF_CAL_EN_BF_MSK (0x00000001)
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_CALIB_PREBUF_CAL_EN_BF_DEF (0x00000000)

///< trim code for prebuf res
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_CALIB_PREBUF_RES_SEL_BF_OFF ( 8)
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_CALIB_PREBUF_RES_SEL_BF_WID (20)
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_CALIB_PREBUF_RES_SEL_BF_MSK (0x0FFFFF00)
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_CALIB_PREBUF_RES_SEL_BF_DEF (0x00001000)


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNCAL_TERM0 register description at address offset 0xc
  *
  * Register default value:        0x00004490
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmncal_term0
  * cmncal_term0
  */

typedef union {
  struct {
    uint32_t CALIB_RXTERM_CAL_EN : 1;
    ///< enable rxterm cal
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t CALIB_RXTERM_FINE : 4;
    ///< gray2thrm trim code for rx res
    ///< AccessType="RW" BitOffset="1" ResetValue="0x8"
    uint32_t CALIB_TXTERM_N_CAL_EN : 1;
    ///< enable txterm_n cal
    ///< AccessType="RW" BitOffset="5" ResetValue="0x0"
    uint32_t CALIB_TXTERM_NPH_SEL : 2;
    ///< trim code for txterm_n
    ///< AccessType="RW" BitOffset="6" ResetValue="0x2"
    uint32_t CALIB_TXTERM_P_CAL_EN : 1;
    ///< enable txterm_p cal
    ///< AccessType="RW" BitOffset="8" ResetValue="0x0"
    uint32_t CALIB_TXTERM_PPH_SEL : 2;
    ///< trim code for txterm_p
    ///< AccessType="RW" BitOffset="9" ResetValue="0x2"
    uint32_t CALIB_TXTERM_DTA_GRY_LV : 4;
    ///< trim code for txterm_p & txterm_n
    ///< AccessType="RW" BitOffset="11" ResetValue="0x8"
    uint32_t  : 17;
    ///< Reserved
    ///< AccessType="RO" BitOffset="15" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmncal_term0_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_DEFAULT (0x00004490U)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_RD_MASK (0x00007fffU)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_WR_MASK (0x00007fffU)


///< enable rxterm cal
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_RXTERM_CAL_EN_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_RXTERM_CAL_EN_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_RXTERM_CAL_EN_BF_MSK (0x00000001)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_RXTERM_CAL_EN_BF_DEF (0x00000000)

///< gray2thrm trim code for rx res
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_RXTERM_FINE_BF_OFF ( 1)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_RXTERM_FINE_BF_WID ( 4)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_RXTERM_FINE_BF_MSK (0x0000001E)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_RXTERM_FINE_BF_DEF (0x00000010)

///< enable txterm_n cal
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_N_CAL_EN_BF_OFF ( 5)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_N_CAL_EN_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_N_CAL_EN_BF_MSK (0x00000020)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_N_CAL_EN_BF_DEF (0x00000000)

///< trim code for txterm_n
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_NPH_SEL_BF_OFF ( 6)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_NPH_SEL_BF_WID ( 2)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_NPH_SEL_BF_MSK (0x000000C0)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_NPH_SEL_BF_DEF (0x00000080)

///< enable txterm_p cal
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_P_CAL_EN_BF_OFF ( 8)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_P_CAL_EN_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_P_CAL_EN_BF_MSK (0x00000100)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_P_CAL_EN_BF_DEF (0x00000000)

///< trim code for txterm_p
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_PPH_SEL_BF_OFF ( 9)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_PPH_SEL_BF_WID ( 2)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_PPH_SEL_BF_MSK (0x00000600)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_PPH_SEL_BF_DEF (0x00000400)

///< trim code for txterm_p & txterm_n
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_DTA_GRY_LV_BF_OFF (11)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_DTA_GRY_LV_BF_WID ( 4)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_DTA_GRY_LV_BF_MSK (0x00007800)
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_CALIB_TXTERM_DTA_GRY_LV_BF_DEF (0x00004000)


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNCOMP_CTRL0 register description at address offset 0x10
  *
  * Register default value:        0x00000000
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmncomp_ctrl0
  * cmncomp_ctrl0
  */

typedef union {
  struct {
    uint32_t COMP_FILT_BYP : 1;
    ///< bypas LPF filter for comparator
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t  : 31;
    ///< Reserved
    ///< AccessType="RO" BitOffset="1" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmncomp_ctrl0_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_DEFAULT (0x00000000U)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_RD_MASK (0x00000001U)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_WR_MASK (0x00000001U)


///< bypas LPF filter for comparator
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_FILT_BYP_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_FILT_BYP_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_FILT_BYP_BF_MSK (0x00000001)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_FILT_BYP_BF_DEF (0x00000000)


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNCOMP_CTRL1 register description at address offset 0x14
  *
  * Register default value:        0x00000000
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmncomp_ctrl1
  * cmncomp_ctrl1
  */

typedef union {
  struct {
    uint32_t COMP_EN : 1;
    ///< enable the comparator
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t COMP_P_SEL : 9;
    ///< select control for the positive input for comparator
    ///< AccessType="RW" BitOffset="1" ResetValue="0x0"
    uint32_t COMP_N_SEL : 9;
    ///< select control for the negative input for comparator
    ///< AccessType="RW" BitOffset="10" ResetValue="0x0"
    uint32_t  : 13;
    ///< Reserved
    ///< AccessType="RO" BitOffset="19" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmncomp_ctrl1_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_DEFAULT (0x00000000U)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_RD_MASK (0x0007ffffU)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_WR_MASK (0x0007ffffU)


///< enable the comparator
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_EN_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_EN_BF_WID ( 1)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_EN_BF_MSK (0x00000001)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_EN_BF_DEF (0x00000000)

///< select control for the positive input for comparator
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_P_SEL_BF_OFF ( 1)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_P_SEL_BF_WID ( 9)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_P_SEL_BF_MSK (0x000003FE)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_P_SEL_BF_DEF (0x00000000)

///< select control for the negative input for comparator
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_N_SEL_BF_OFF (10)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_N_SEL_BF_WID ( 9)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_N_SEL_BF_MSK (0x0007FC00)
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_N_SEL_BF_DEF (0x00000000)


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNGLOBAL_REFGEN0 register description at address offset 0x18
  *
  * Register default value:        0x00084210
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmnglobal_refgen0
  * cmnglobal_refgen0
  */

typedef union {
  struct {
    uint32_t REFGEN_IREF_DCMON_SEL : 5;
    ///< select 550mV vref for bias sys
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t REFGEN_RXTERM_VNOFF_SEL : 5;
    ///< select voltage level of nmos low for rxterm cal
    ///< AccessType="RW" BitOffset="5" ResetValue="0x10"
    uint32_t REFGEN_RXTERM_VNON_SEL : 5;
    ///< select voltage level of nmos high for rxterm cal
    ///< AccessType="RW" BitOffset="10" ResetValue="0x10"
    uint32_t REFGEN_RXTERM_VPOFF_SEL : 5;
    ///< select voltage level of pmos low for rxterm cal
    ///< AccessType="RW" BitOffset="15" ResetValue="0x10"
    uint32_t  : 12;
    ///< Reserved
    ///< AccessType="RO" BitOffset="20" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmnglobal_refgen0_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_DEFAULT (0x00084210U)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_RD_MASK (0x000fffffU)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_WR_MASK (0x000fffffU)


///< select 550mV vref for bias sys
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_IREF_DCMON_SEL_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_IREF_DCMON_SEL_BF_WID ( 5)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_IREF_DCMON_SEL_BF_MSK (0x0000001F)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_IREF_DCMON_SEL_BF_DEF (0x00000010)

///< select voltage level of nmos low for rxterm cal
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VNOFF_SEL_BF_OFF ( 5)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VNOFF_SEL_BF_WID ( 5)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VNOFF_SEL_BF_MSK (0x000003E0)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VNOFF_SEL_BF_DEF (0x00000200)

///< select voltage level of nmos high for rxterm cal
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VNON_SEL_BF_OFF (10)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VNON_SEL_BF_WID ( 5)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VNON_SEL_BF_MSK (0x00007C00)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VNON_SEL_BF_DEF (0x00004000)

///< select voltage level of pmos low for rxterm cal
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VPOFF_SEL_BF_OFF (15)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VPOFF_SEL_BF_WID ( 5)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VPOFF_SEL_BF_MSK (0x000F8000)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REFGEN_RXTERM_VPOFF_SEL_BF_DEF (0x00080000)


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNGLOBAL_REFGEN1 register description at address offset 0x1c
  *
  * Register default value:        0x00000210
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmnglobal_refgen1
  * cmnglobal_refgen1
  */

typedef union {
  struct {
    uint32_t REFGEN_RXTERM_VPON_SEL : 5;
    ///< select voltage level of pmos high for rxterm cal
    ///< AccessType="RW" BitOffset="0" ResetValue="0x10"
    uint32_t REFGEN_RXTERM_VREF_CALIB_SEL : 5;
    ///< select vref level for calib_amp for rxterm cal in 6mV increments0b00000:
    ///< 330mV0b00001: 340mV...0b11101: 620mV0b11110: 630mV0b11111: 640mV
    ///< AccessType="RW" BitOffset="5" ResetValue="0x10"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmnglobal_refgen1_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_DEFAULT (0x00000210U)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_RD_MASK (0x000003ffU)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_WR_MASK (0x000003ffU)


///< select voltage level of pmos high for rxterm cal
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_REFGEN_RXTERM_VPON_SEL_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_REFGEN_RXTERM_VPON_SEL_BF_WID ( 5)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_REFGEN_RXTERM_VPON_SEL_BF_MSK (0x0000001F)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_REFGEN_RXTERM_VPON_SEL_BF_DEF (0x00000010)

///< select vref level for calib_amp for rxterm cal in 6mV increments0b00000:
///< 330mV0b00001: 340mV...0b11101: 620mV0b11110: 630mV0b11111: 640mV
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_REFGEN_RXTERM_VREF_CALIB_SEL_BF_OFF ( 5)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_REFGEN_RXTERM_VREF_CALIB_SEL_BF_WID ( 5)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_REFGEN_RXTERM_VREF_CALIB_SEL_BF_MSK (0x000003E0)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_REFGEN_RXTERM_VREF_CALIB_SEL_BF_DEF (0x00000200)


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNGLOBAL_REFGEN2 register description at address offset 0x20
  *
  * Register default value:        0x00000200
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmnglobal_refgen2
  * cmnglobal_refgen2
  */

typedef union {
  struct {
    uint32_t REFGEN_ICOMPSEL : 10;
    ///< select the vref level for one of the comp input
    ///< AccessType="RW/V" BitOffset="0" ResetValue="0x200"
    uint32_t  : 22;
    ///< Reserved
    ///< AccessType="RO" BitOffset="10" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmnglobal_refgen2_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_DEFAULT (0x00000200U)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_RD_MASK (0x000003ffU)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_WR_MASK (0x000003ffU)


///< select the vref level for one of the comp input
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_REFGEN_ICOMPSEL_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_REFGEN_ICOMPSEL_BF_WID (10)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_REFGEN_ICOMPSEL_BF_MSK (0x000003FF)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_REFGEN_ICOMPSEL_BF_DEF (0x00000200)


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNGLOBAL_DFX0 register description at address offset 0x24
  *
  * Register default value:        0x00000000
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmnglobal_dfx0
  * cmnglobal_dfx0
  */

typedef union {
  struct {
    uint32_t DCMON_SEL : 16;
    ///< control for dcmon
    ///< AccessType="RW" BitOffset="0" ResetValue="0x0"
    uint32_t CMNDCMON_OUT_SEL : 2;
    ///< ---
    ///< AccessType="RW" BitOffset="16" ResetValue="0x0"
    uint32_t CMNDCMON_TOP_SEL : 4;
    ///< ---
    ///< AccessType="RW" BitOffset="18" ResetValue="0x0"
    uint32_t  : 10;
    ///< Reserved
    ///< AccessType="RO" BitOffset="22" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmnglobal_dfx0_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_DEFAULT (0x00000000U)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_RD_MASK (0x003fffffU)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_WR_MASK (0x003fffffU)


///< control for dcmon
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_DCMON_SEL_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_DCMON_SEL_BF_WID (16)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_DCMON_SEL_BF_MSK (0x0000FFFF)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_DCMON_SEL_BF_DEF (0x00000000)

#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_CMNDCMON_OUT_SEL_BF_OFF (16)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_CMNDCMON_OUT_SEL_BF_WID ( 2)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_CMNDCMON_OUT_SEL_BF_MSK (0x00030000)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_CMNDCMON_OUT_SEL_BF_DEF (0x00000000)

#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_CMNDCMON_TOP_SEL_BF_OFF (18)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_CMNDCMON_TOP_SEL_BF_WID ( 4)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_CMNDCMON_TOP_SEL_BF_MSK (0x003C0000)
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_CMNDCMON_TOP_SEL_BF_DEF (0x00000000)


/** @brief CMNANA_BIASCTRL_REGS_MSG_CMNANA_BIASCTRL_REGS_CMNBIASCTRL_SPARE0 register description at address offset 0x28
  *
  * Register default value:        0x0000E000
  * Register full path in IP: CMNANA_BIASCTRL_regs_MSG/CMNANA_BIASCTRL_regs/cmnbiasctrl_spare0
  * cmnbiasctrl_spare0
  */

typedef union {
  struct {
    uint32_t CMN_BIASCTRL_SPARE : 16;
    ///< ---
    ///< AccessType="RW" BitOffset="0" ResetValue="0xE000"
    uint32_t  : 16;
    ///< Reserved
    ///< AccessType="RO" BitOffset="16" ResetValue="None"
  } ;
  uint32_t value;
} cmnana_biasctrl_msg_cmnbiasctrl_spare0_reg_t;

#define CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_DEFAULT (0x0000e000U)
#define CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_RD_MASK (0x0000ffffU)
#define CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_WR_MASK (0x0000ffffU)


#define CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_CMN_BIASCTRL_SPARE_BF_OFF ( 0)
#define CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_CMN_BIASCTRL_SPARE_BF_WID (16)
#define CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_CMN_BIASCTRL_SPARE_BF_MSK (0x0000FFFF)
#define CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_CMN_BIASCTRL_SPARE_BF_DEF (0x0000E000)

//************************************************ /RegisterStructs


// ******************************************* Register pointer macros

#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_REG(_BASE) ((cmnana_biasctrl_msg_cmnglobal_biasctrl0_reg_t*) CMNANA_BIASCTRL_MSG_CMNGLOBAL_BIASCTRL0_ADR(_BASE))
#define CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_REG(_BASE) ((cmnana_biasctrl_msg_cmncal_ctrl0_reg_t*) CMNANA_BIASCTRL_MSG_CMNCAL_CTRL0_ADR(_BASE))
#define CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_REG(_BASE) ((cmnana_biasctrl_msg_cmncal_prebuf0_reg_t*) CMNANA_BIASCTRL_MSG_CMNCAL_PREBUF0_ADR(_BASE))
#define CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_REG(_BASE) ((cmnana_biasctrl_msg_cmncal_term0_reg_t*) CMNANA_BIASCTRL_MSG_CMNCAL_TERM0_ADR(_BASE))
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_REG(_BASE) ((cmnana_biasctrl_msg_cmncomp_ctrl0_reg_t*) CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL0_ADR(_BASE))
#define CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_REG(_BASE) ((cmnana_biasctrl_msg_cmncomp_ctrl1_reg_t*) CMNANA_BIASCTRL_MSG_CMNCOMP_CTRL1_ADR(_BASE))
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_REG(_BASE) ((cmnana_biasctrl_msg_cmnglobal_refgen0_reg_t*) CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN0_ADR(_BASE))
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_REG(_BASE) ((cmnana_biasctrl_msg_cmnglobal_refgen1_reg_t*) CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN1_ADR(_BASE))
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_REG(_BASE) ((cmnana_biasctrl_msg_cmnglobal_refgen2_reg_t*) CMNANA_BIASCTRL_MSG_CMNGLOBAL_REFGEN2_ADR(_BASE))
#define CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_REG(_BASE) ((cmnana_biasctrl_msg_cmnglobal_dfx0_reg_t*) CMNANA_BIASCTRL_MSG_CMNGLOBAL_DFX0_ADR(_BASE))
#define CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_REG(_BASE) ((cmnana_biasctrl_msg_cmnbiasctrl_spare0_reg_t*) CMNANA_BIASCTRL_MSG_CMNBIASCTRL_SPARE0_ADR(_BASE))

// ******************************************* /Register pointer macros


// ******************************************* AddressSpace struct
typedef struct
{
    cmnana_biasctrl_msg_cmnglobal_biasctrl0_reg_t CMNGLOBAL_BIASCTRL0; /*< Address offset = 0x0 */
    cmnana_biasctrl_msg_cmncal_ctrl0_reg_t CMNCAL_CTRL0; /*< Address offset = 0x4 */
    cmnana_biasctrl_msg_cmncal_prebuf0_reg_t CMNCAL_PREBUF0; /*< Address offset = 0x8 */
    cmnana_biasctrl_msg_cmncal_term0_reg_t CMNCAL_TERM0; /*< Address offset = 0xc */
    cmnana_biasctrl_msg_cmncomp_ctrl0_reg_t CMNCOMP_CTRL0; /*< Address offset = 0x10 */
    cmnana_biasctrl_msg_cmncomp_ctrl1_reg_t CMNCOMP_CTRL1; /*< Address offset = 0x14 */
    cmnana_biasctrl_msg_cmnglobal_refgen0_reg_t CMNGLOBAL_REFGEN0; /*< Address offset = 0x18 */
    cmnana_biasctrl_msg_cmnglobal_refgen1_reg_t CMNGLOBAL_REFGEN1; /*< Address offset = 0x1c */
    cmnana_biasctrl_msg_cmnglobal_refgen2_reg_t CMNGLOBAL_REFGEN2; /*< Address offset = 0x20 */
    cmnana_biasctrl_msg_cmnglobal_dfx0_reg_t CMNGLOBAL_DFX0; /*< Address offset = 0x24 */
    cmnana_biasctrl_msg_cmnbiasctrl_spare0_reg_t CMNBIASCTRL_SPARE0; /*< Address offset = 0x28 */
} cmnana_biasctrl_msg_t;     // size: 0x002c

// AddressSpace struct pointer
//
#define DLNK_JESD0_PHY_PMA0_CMNANA_BIASCTRL  ((cmnana_biasctrl_msg_t*) DLNK_JESD0_PHY_PMA0_CMNANA_BIASCTRL_BASE)
#define DLNK_JESD1_PHY_PMA0_CMNANA_BIASCTRL  ((cmnana_biasctrl_msg_t*) DLNK_JESD1_PHY_PMA0_CMNANA_BIASCTRL_BASE)
#define DLNK_JESD2_PHY_PMA0_CMNANA_BIASCTRL  ((cmnana_biasctrl_msg_t*) DLNK_JESD2_PHY_PMA0_CMNANA_BIASCTRL_BASE)
#define DLNK_JESD3_PHY_PMA0_CMNANA_BIASCTRL  ((cmnana_biasctrl_msg_t*) DLNK_JESD3_PHY_PMA0_CMNANA_BIASCTRL_BASE)

// ******************************************* /Address Space

#endif      // _CMNANA_BIASCTRL_MSG_H_

